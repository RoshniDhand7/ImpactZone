{"version":3,"file":"static/js/186.3a2684bb.chunk.js","mappings":"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","sources":["views/Settings/Business/Company/General.jsx","views/Settings/Business/Company/Online.jsx","views/Settings/Business/Company/CompanyForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport { CustomDropDown, CustomInput, CustomInputMask } from '../../../../shared/Input/AllInputs';\r\nimport { checkInLimitOptions, perOptions, restrictionOptions, yesNoOptions } from '../../../../utils/dropdownConstants';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getAllCountries, getCitiesByState, getStatesByCountry, showFormErrors } from '../../../../utils/commonFunctions';\r\nimport { editCompany } from '../../../../redux/actions/BusinessSettings/companyActions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport formValidation from '../../../../utils/validations';\r\n\r\nconst General = (allCompany) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (allCompany) {\r\n            setData({\r\n                companyId: allCompany?._id,\r\n                billingCountry: allCompany?.billingCountry,\r\n                companyName: allCompany?.companyName,\r\n                multiClubInOut: allCompany?.multiClubInOut,\r\n                clockInRequired: allCompany?.clockInRequired,\r\n                country: allCompany?.country,\r\n                address1: allCompany?.address1,\r\n                address2: allCompany?.address2,\r\n                city: allCompany?.city,\r\n                state: allCompany?.state,\r\n                zipCode: allCompany?.zipCode,\r\n                workNumber: allCompany?.workNumber,\r\n                workExtention: allCompany?.workExtention,\r\n                faxNumber: allCompany?.faxNumber,\r\n                primaryEmail: allCompany?.primaryEmail,\r\n                alternateEmail: allCompany?.alternateEmail,\r\n                companyUrl: allCompany?.companyUrl,\r\n                companyCode: allCompany?.companyCode,\r\n                batchId: allCompany?.batchId,\r\n                checkInLimit: allCompany?.checkInLimit,\r\n                per: allCompany?.per,\r\n                restrictionType: allCompany?.restrictionType,\r\n            });\r\n            if (allCompany?.country === 'US') {\r\n                const cities = getCitiesByState(allCompany.country, allCompany.state);\r\n                setCities(cities);\r\n            }\r\n        }\r\n    }, [allCompany]);\r\n\r\n    const [data, setData] = useState({\r\n        companyId: '',\r\n        billingCountry: '',\r\n        companyName: '',\r\n        multiClubInOut: false,\r\n        clockInRequired: false,\r\n        country: '',\r\n        address1: '',\r\n        address2: '',\r\n        city: '',\r\n        state: '',\r\n        zipCode: '',\r\n        workNumber: '',\r\n        workExtention: '',\r\n        faxNumber: '',\r\n        primaryEmail: '',\r\n        alternateEmail: '',\r\n        companyUrl: '',\r\n        companyCode: '',\r\n        batchId: '',\r\n        checkInLimit: 'No Limit',\r\n        per: 'Week (7 Days)',\r\n        restrictionType: 'Company',\r\n    });\r\n\r\n    const [country, setCountry] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const allCountryList = getAllCountries();\r\n        const updatedStates = getStatesByCountry('US');\r\n        setStates(updatedStates);\r\n        setCountry(allCountryList);\r\n    }, [dispatch]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n\r\n        if (name === 'state') {\r\n            const city = getCitiesByState('US', value);\r\n            setCities(city);\r\n            setData((prev) => ({ ...prev, [name]: value, city: '', formErrors }));\r\n        } else {\r\n            setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n        }\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            dispatch(editCompany(data, setLoading, history));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"General\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"companyId\" data={data} onChange={handleChange} disabled={true} required />\r\n                    <CustomInput name=\"billingCountry\" data={data} onChange={handleChange} required />\r\n                    <CustomInput name=\"companyName\" data={data} onChange={handleChange} required />\r\n                    <CustomDropDown\r\n                        label=\"Allow Multi-Club Clock In/Out\"\r\n                        name=\"multiClubInOut\"\r\n                        options={yesNoOptions}\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <CustomDropDown\r\n                        label=\"Clock In Department Required\"\r\n                        name=\"clockInRequired\"\r\n                        options={yesNoOptions}\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Address\">\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"country\" options={country} data={data} disabled={true} required />\r\n                    <CustomInput name=\"address1\" data={data} onChange={handleChange} required />\r\n                    <CustomInput name=\"address2\" data={data} onChange={handleChange} required />\r\n                    <CustomDropDown name=\"state\" options={states} data={data} onChange={handleChange} required />\r\n                    <CustomDropDown name=\"city\" options={cities} data={data} onChange={handleChange} required />\r\n                    <CustomInput name=\"zipCode\" data={data} onChange={handleChange} required />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Contact Information\">\r\n                <CustomGridLayout>\r\n                    <CustomInputMask name=\"workNumber\" id=\"phone\" mask=\"(999) 999-9999\" data={data} placeholder=\"\" onChange={handleChange} required />\r\n                    <CustomInput name=\"workExtention\" data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"faxNumber\" data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"primaryEmail\" data={data} onChange={handleChange} required />\r\n                    <CustomInput name=\"alternateEmail\" data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"companyUrl\" data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Data Export\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"companyCode\" data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"batchId\" data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Remote Check Ins\">\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"checkInLimit\" options={checkInLimitOptions} data={data} onChange={handleChange} />\r\n                    <CustomDropDown name=\"per\" options={perOptions} data={data} onChange={handleChange} disabled={data?.checkInLimit ? false : true} />\r\n                    <CustomDropDown\r\n                        name=\"restrictionType\"\r\n                        options={restrictionOptions}\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        disabled={data?.per ? false : true}\r\n                    />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={handleSave} loading={loading} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/business')} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default General;\r\n","import React, { useState, useEffect } from 'react';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport { CustomDropDown } from '../../../../shared/Input/AllInputs';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { daysOptions, hoursOptions, yesNoOptions } from '../../../../utils/dropdownConstants';\r\nimport { editCompany } from '../../../../redux/actions/BusinessSettings/companyActions';\r\nimport { useDispatch } from 'react-redux';\r\nimport formValidation from '../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../utils/commonFunctions';\r\n\r\nconst Online = (allCompany) => {\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        if (allCompany) {\r\n            setData({\r\n                bookOutFrom: allCompany?.bookOutFrom,\r\n                bookOutTo: allCompany?.bookOutTo,\r\n                allowCancelOnline: allCompany?.allowCancelOnline,\r\n                timeBeforeEvent: allCompany?.timeBeforeEvent,\r\n            });\r\n        }\r\n    }, [allCompany]);\r\n    const [data, setData] = useState({\r\n        bookOutFrom: '',\r\n        bookOutTo: '',\r\n        allowCancelOnline: false,\r\n        timeBeforeEvent: '',\r\n    });\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            dispatch(editCompany(data, setLoading, history));\r\n        }\r\n    };\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"Booking\">\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"bookOutFrom\" options={daysOptions} data={data} onChange={handleChange} required />\r\n                    <CustomDropDown name=\"bookOutTo\" options={daysOptions} data={data} onChange={handleChange} required />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Cancellation\">\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"allowCancelOnline\" options={yesNoOptions} data={data} onChange={handleChange} required />\r\n                    <CustomDropDown name=\"timeBeforeEvent\" options={hoursOptions} data={data} onChange={handleChange} required />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={handleSave} loading={loading} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/business')} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Online;\r\n","import React, { useEffect } from 'react';\r\nimport CustomTabView from '../../../../shared/TabView/CustomTabView';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport General from './General';\r\nimport Online from './Online';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCompanyDetails } from '../../../../redux/actions/BusinessSettings/companyActions';\r\n\r\nexport default function CompanyForm() {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getCompanyDetails());\r\n    }, [dispatch]);\r\n    let { allCompany } = useSelector((state) => state?.company);\r\n\r\n    const tabs = [\r\n        { title: 'General', content: General(allCompany) },\r\n        { title: 'Online', content: Online(allCompany) },\r\n    ];\r\n\r\n    return (\r\n        <FormPage backText=\"Company\">\r\n            <CustomTabView tabs={tabs} />\r\n        </FormPage>\r\n    );\r\n}\r\n"],"names":["allCompany","dispatch","useDispatch","history","useHistory","loading","setLoading","useState","useEffect","setData","companyId","_id","billingCountry","companyName","multiClubInOut","clockInRequired","country","address1","address2","city","state","zipCode","workNumber","workExtention","faxNumber","primaryEmail","alternateEmail","companyUrl","companyCode","batchId","checkInLimit","per","restrictionType","cities","getCitiesByState","setCities","data","setCountry","states","setStates","allCountryList","getAllCountries","updatedStates","getStatesByCountry","handleChange","_ref","name","value","formErrors","formValidation","prev","_jsxs","_Fragment","children","_jsx","CustomCard","col","title","CustomGridLayout","CustomInput","onChange","disabled","required","CustomDropDown","label","options","yesNoOptions","CustomInputMask","id","mask","placeholder","checkInLimitOptions","perOptions","restrictionOptions","CustomButtonGroup","PrimaryButton","className","onClick","handleSave","showFormErrors","editCompany","LightButton","replace","bookOutFrom","bookOutTo","allowCancelOnline","timeBeforeEvent","daysOptions","hoursOptions","CompanyForm","getCompanyDetails","useSelector","company","tabs","content","General","Online","FormPage","backText","CustomTabView"],"sourceRoot":""}