{"version":3,"file":"static/js/767.a21581e5.chunk.js","mappings":"oRAYA,MAyDA,EAzD4BA,KACxB,MAAMC,GAAUC,EAAAA,EAAAA,OACV,GAAEC,IAAOC,EAAAA,EAAAA,KACTC,GAAWC,EAAAA,EAAAA,OACVC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IACvCC,EAAAA,EAAAA,YAAU,KACFP,GACAE,GACIM,EAAAA,EAAAA,IAAmBR,GAAKS,IACpBC,EAAQ,CACJC,KAAMF,EAAKE,KACXC,KAAMH,EAAKG,KACXC,SAAUJ,EAAKI,UACjB,IAGd,GACD,CAACb,EAAIE,IACR,MAAOO,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,CAC7BK,KAAM,GACNC,KAAM,WACNC,UAAU,IAERC,EAAeC,IAAsB,IAArB,KAAEJ,EAAI,MAAEK,GAAOD,EACjC,MAAME,GAAaC,EAAAA,EAAAA,GAAeP,EAAMK,EAAOP,GAC/CC,GAASS,IAAI,IAAWA,EAAM,CAACR,GAAOK,EAAOC,gBAAc,EAW/D,OACIG,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAACC,SAAS,kBAAiBC,SAAA,EAChCC,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAACC,IAAI,KAAKC,MAAM,2BAA0BJ,UACjDH,EAAAA,EAAAA,MAACQ,EAAAA,EAAgB,CAAAL,SAAA,EACbC,EAAAA,EAAAA,KAACK,EAAAA,GAAW,CAAClB,KAAK,OAAOF,KAAMA,EAAMqB,SAAUhB,EAAciB,UAAQ,KACrEP,EAAAA,EAAAA,KAACQ,EAAAA,GAAc,CAACrB,KAAK,OAAOsB,QAASC,EAAAA,GAAyBzB,KAAMA,EAAMqB,SAAUhB,KAEpFU,EAAAA,EAAAA,KAACW,EAAAA,GAAiB,CAACxB,KAAK,WAAWF,KAAMA,EAAMqB,SAAUhB,UAGjEU,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAACC,IAAI,KAAKC,MAAM,gBAAeJ,UACtCC,EAAAA,EAAAA,KAACI,EAAAA,EAAgB,OAErBR,EAAAA,EAAAA,MAACgB,EAAAA,GAAiB,CAAAb,SAAA,EACdC,EAAAA,EAAAA,KAACa,EAAAA,GAAa,CAACC,MAAM,OAAOC,UAAU,OAAOC,QAvBtCC,MACXC,EAAAA,EAAAA,IAAejC,EAAMC,IAEjBR,EADAF,GACS2C,EAAAA,EAAAA,IAAqB3C,EAAIS,EAAMJ,EAAYP,IAE3C8C,EAAAA,EAAAA,IAAoBnC,EAAMJ,EAAYP,GAEvD,EAgB0EM,QAASA,KAC3EoB,EAAAA,EAAAA,KAACqB,EAAAA,GAAW,CAACP,MAAM,SAASE,QAASA,IAAM1C,EAAQgD,gBAEhD,C","sources":["views/Settings/Inventory/CommissionGroup/CommissionGroupForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { CustomDropDown, CustomInput, CustomInputSwitch } from '../../../../shared/Input/AllInputs';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport formValidation from '../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../utils/commonFunctions';\r\nimport { CommissionGpTypeOptions } from '../../../../utils/dropdownConstants';\r\nimport { addCommissionGroups, editCommissionGroups, getCommissionGroup } from '../../../../redux/actions/InventorySettings/commissionGroupAction';\r\n\r\nconst CommissionGroupForm = () => {\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getCommissionGroup(id, (data) => {\r\n                    setData({\r\n                        name: data.name,\r\n                        type: data.type,\r\n                        isActive: data.isActive,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        type: 'PRODUCTS',\r\n        isActive: false,\r\n    });\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (id) {\r\n                dispatch(editCommissionGroups(id, data, setLoading, history));\r\n            } else {\r\n                dispatch(addCommissionGroups(data, setLoading, history));\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <FormPage backText=\"CommissionGroup\">\r\n            <CustomCard col=\"12\" title=\"Add New Commission Group\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"name\" data={data} onChange={handleChange} required />\r\n                    <CustomDropDown name=\"type\" options={CommissionGpTypeOptions} data={data} onChange={handleChange} />\r\n\r\n                    <CustomInputSwitch name=\"isActive\" data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Catalog Items\">\r\n                <CustomGridLayout></CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={handleSave} loading={loading} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.goBack()} />\r\n            </CustomButtonGroup>\r\n        </FormPage>\r\n    );\r\n};\r\n\r\nexport default CommissionGroupForm;\r\n"],"names":["CommissionGroupForm","history","useHistory","id","useParams","dispatch","useDispatch","loading","setLoading","useState","useEffect","getCommissionGroup","data","setData","name","type","isActive","handleChange","_ref","value","formErrors","formValidation","prev","_jsxs","FormPage","backText","children","_jsx","CustomCard","col","title","CustomGridLayout","CustomInput","onChange","required","CustomDropDown","options","CommissionGpTypeOptions","CustomInputSwitch","CustomButtonGroup","PrimaryButton","label","className","onClick","handleSave","showFormErrors","editCommissionGroups","addCommissionGroups","LightButton","goBack"],"sourceRoot":""}