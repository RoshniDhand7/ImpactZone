{"version":3,"file":"static/js/293.19622c1b.chunk.js","mappings":"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","sources":["shared/Image/LogoImage.jsx","views/Settings/Business/Customization/CustomizationForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ProfileImg from '../../assets/icons/camera.png';\r\n// import CameraIcon from '../../assets/icons/Vector.png';\r\nimport { getDefaultImage, getImageURL } from '../../utils/imageUrl';\r\nimport InputLayout from '../Form/InputLayout';\r\n\r\nconst CustomLogoImage = ({\r\n    label,\r\n    name,\r\n    onFilesChange,\r\n    errorMessage,\r\n    extraClassName,\r\n    value,\r\n    data,\r\n    col,\r\n    required,\r\n    imgclass,\r\n    removeable,\r\n    editable,\r\n    uploadboxclass,\r\n    uploadIcon,\r\n    disabled = false,\r\n    ...props\r\n}) => {\r\n    const [files, setFiles] = useState(value || data?.[name] || []);\r\n\r\n    useEffect(() => {\r\n        if (value || data?.[name]) {\r\n            if (JSON.stringify(value || data?.[name]) !== JSON.stringify(files)) {\r\n                setFiles(value || data?.[name]);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value || data?.[name]]);\r\n\r\n    useEffect(() => {\r\n        if (onFilesChange) {\r\n            if (files.length) {\r\n                onFilesChange({ name, value: files });\r\n            }\r\n        } else {\r\n            onFilesChange({ name, value: [] });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [files, name]);\r\n\r\n    const onFileChange = (e) => {\r\n        const chossenFile = e.target.files;\r\n        handlefileChange(Object.values(chossenFile));\r\n        e.target.value = '';\r\n    };\r\n    const handlefileChange = (uploadedfile) => {\r\n        let uploadedFiles = [];\r\n        uploadedfile.forEach((file) => {\r\n            if (files.findIndex((f) => f.name === file.name) === -1) {\r\n                uploadedFiles.push(file);\r\n            }\r\n        });\r\n        setFiles([...uploadedFiles]);\r\n    };\r\n\r\n    const onDelete = (id) => {\r\n        const s = files.filter((item, index) => index !== id);\r\n        setFiles([...s]);\r\n        onFilesChange({ name, value: [] });\r\n    };\r\n    return (\r\n        <InputLayout col={col || 12} label={label} name={name} required={required} extraClassName={extraClassName} data={data} errorMessage={errorMessage}>\r\n            <input type=\"file\" className=\" \" name={name} onChange={onFileChange} id={name} accept=\".jpg, .jpeg, .png,.jfif\" hidden {...props} />\r\n            {files.length ? (\r\n                Object.values(files).map((image, i) => (\r\n                    <div key={i} className=\"photoDiv\">\r\n                        {removeable && <i onClick={() => onDelete(i)} className=\"pi pi-times cursor-pointer\"></i>}\r\n                        <img\r\n                            src={image ? (typeof image === 'string' ? getImageURL(image) : URL.createObjectURL(image)) : ProfileImg}\r\n                            onError={(e) => (e.target.src = getDefaultImage())}\r\n                            alt=\"pic\"\r\n                            className={`profile-img relative btn-border-color ${imgclass}`}\r\n                            accept=\".jpg, .jpeg, .png, .jfif\"\r\n                        />\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <div\r\n                    className=\"photo-upload flex justify-content-center align-items-center\"\r\n                    style={{\r\n                        height: '95px',\r\n                        width: '90px',\r\n                    }}\r\n                >\r\n                    <label htmlFor={name}>\r\n                        <img\r\n                            className=\"w-full h-full fit-cover\"\r\n                            style={{ width: '50px' }}\r\n                            src={ProfileImg}\r\n                            onError={(e) => (e.target.src = getDefaultImage())}\r\n                            alt=\"\"\r\n                            accept=\".jpg, .jpeg, .png\"\r\n                        />\r\n                    </label>\r\n                </div>\r\n            )}\r\n        </InputLayout>\r\n    );\r\n};\r\n\r\nexport default CustomLogoImage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard from '../../../../shared/Cards/CustomCard';\r\nimport CustomLogoImage from '../../../../shared/Image/LogoImage';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport formValidation from '../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../utils/commonFunctions';\r\nimport { editCompany, getCompanyDetail } from '../../../../redux/actions/Settings/Business/companyActions';\r\n\r\nconst CustomizationForm = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const [data, setData] = useState({\r\n        logo: [],\r\n    });\r\n    useEffect(() => {\r\n        dispatch(getCompanyDetail());\r\n    }, [dispatch]);\r\n    let { company } = useSelector((state) => state?.settings?.business);\r\n\r\n    useEffect(() => {\r\n        if (company) {\r\n            setData({\r\n                logo: company?.logo ? [company?.logo] : [],\r\n            });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            dispatch(editCompany(company._id, data, setLoading, history));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FormPage backText=\"Customization\">\r\n                <CustomCard col=\"12\" title=\"Customization\">\r\n                    <CustomLogoImage name=\"logo\" data={data} removeable onFilesChange={handleChange} />\r\n                </CustomCard>\r\n                <CustomButtonGroup>\r\n                    <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={handleSave} loading={loading} />\r\n                    <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/business/?tab=customization/')} />\r\n                </CustomButtonGroup>\r\n            </FormPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CustomizationForm;\r\n"],"names":["_ref","label","name","onFilesChange","errorMessage","extraClassName","value","data","col","required","imgclass","removeable","editable","uploadboxclass","uploadIcon","disabled","props","files","setFiles","useState","useEffect","JSON","stringify","length","handlefileChange","uploadedfile","uploadedFiles","forEach","file","findIndex","f","push","_jsxs","InputLayout","children","_jsx","type","className","onChange","e","chossenFile","target","Object","values","id","accept","hidden","map","image","i","onClick","s","filter","item","index","onDelete","src","getImageURL","URL","createObjectURL","ProfileImg","onError","getDefaultImage","alt","concat","style","height","width","htmlFor","history","dispatch","useDispatch","setData","logo","getCompanyDetail","company","useSelector","state","_state$settings","settings","business","loading","setLoading","_Fragment","FormPage","backText","CustomCard","title","CustomLogoImage","_ref2","formErrors","formValidation","prev","CustomButtonGroup","PrimaryButton","handleSave","showFormErrors","editCompany","_id","LightButton","replace"],"sourceRoot":""}