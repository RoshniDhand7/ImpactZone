{"version":3,"file":"static/js/894.ef214e1b.chunk.js","mappings":"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","sources":["views/Settings/MembersSetup/MembershipTypes/MembershipTypeForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomFilterCard1, CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport { CustomDropDown, CustomInput, CustomInputNumber, CustomInputSwitch } from '../../../../shared/Input/AllInputs';\r\nimport formValidation from '../../../../utils/validations';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SpecialRestrictionOptions, defaultDiscountOptions, yesNoOptions } from '../../../../utils/dropdownConstants';\r\nimport CustomPickList from '../../../../shared/Input/CustomPickList';\r\nimport { getClubs } from '../../../../redux/actions/BusinessSettings/clubsAction';\r\nimport CustomTable from '../../../../shared/Table/CustomTable';\r\nimport CustomDialog from '../../../../shared/Overlays/CustomDialog';\r\nimport { getCatalogItems } from '../../../../redux/actions/InventorySettings/catalogItemsAction';\r\nimport { confirmDelete, getIds, showFormErrors } from '../../../../utils/commonFunctions';\r\nimport { getAccessSchedules } from '../../../../redux/actions/MembersSettings/accessSchedule';\r\nimport { addMembershipType, editMembershipType, getMembershipType } from '../../../../redux/actions/MembersSettings/membershipTypes';\r\n\r\nconst MembershipTypeForm = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        dispatch(getClubs());\r\n        dispatch(getCatalogItems());\r\n        dispatch(getAccessSchedules());\r\n    }, [dispatch]);\r\n\r\n    const { AccessScheduleDropdown } = useSelector((state) => state.accessSchedule);\r\n    const { MembershipTypesDropdown } = useSelector((state) => state.membershipTypes);\r\n    const { catalogServiceFilterItems } = useSelector((state) => state.catalogItems);\r\n\r\n    let { clubsDropdown } = useSelector((state) => state.clubs);\r\n    const [open, setOpen] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        description: '',\r\n        discountType: 'None',\r\n        accessRestriction: 'false',\r\n        accessSchedule: null,\r\n        remotecheckin: '',\r\n        transferToAnotherType: null,\r\n        clubCreditAmount: '',\r\n        specialRestriction: '',\r\n        minimumAgeAllowed: 0,\r\n        maximumAgeAllowed: 0,\r\n        maximumDaysAllowed: 0,\r\n        maximumDistanceAllowed: 0,\r\n        club: [],\r\n        services: [],\r\n        isActive: true,\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const { loading } = useSelector((state) => state?.loader?.isLoading);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getMembershipType(id, (data) => {\r\n                    setData({\r\n                        name: data.name,\r\n                        description: data.description,\r\n                        discountType: data.discountType,\r\n                        accessRestriction: data.accessRestriction,\r\n                        accessSchedule: data.accessSchedule,\r\n                        remotecheckin: data.remotecheckin,\r\n                        transferToAnotherType: data.transferToAnotherType,\r\n                        clubCreditAmount: data.clubCreditAmount,\r\n                        specialRestriction: data.specialRestriction,\r\n                        minimumAgeAllowed: data.minimumAgeAllowed,\r\n                        maximumAgeAllowed: data.maximumAgeAllowed,\r\n                        maximumDaysAllowed: data.maximumDaysAllowed,\r\n                        maximumDistanceAllowed: data.maximumDistanceAllowed,\r\n                        club: data.club,\r\n                        services: data.services,\r\n                        isActive: true,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            if (open) {\r\n                setSelected(data?.services);\r\n            }\r\n        }\r\n    }, [data?.services, open, id]);\r\n\r\n    const discountTypeOptions = defaultDiscountOptions;\r\n\r\n    const columns = [\r\n        { selectionMode: 'multiple', headerStyle: '' },\r\n        { field: 'name', header: 'Item Name' },\r\n        { field: 'upc', header: 'Item UPC' },\r\n        { field: 'unitPrice', header: 'Price' },\r\n    ];\r\n\r\n    const columns1 = [\r\n        { field: 'name', header: 'Item Name' },\r\n        { field: 'upc', header: 'Item UPC' },\r\n        { field: 'unitPrice', header: 'Price' },\r\n    ];\r\n\r\n    const handleServiceDelete = (col) => {\r\n        confirmDelete(\r\n            () => {\r\n                setData((prev) => ({ ...prev, services: data?.services?.filter((item) => item._id !== col?._id) }));\r\n            },\r\n            `Do you want to delete this Service ?`,\r\n            'center',\r\n        );\r\n    };\r\n\r\n    const handleSave = () => {\r\n        setData((prev) => ({ ...prev, services: selected }));\r\n        setOpen(false);\r\n    };\r\n\r\n    const onSave = () => {\r\n        let ignore = [];\r\n        switch (data?.specialRestriction) {\r\n            case 'By Age':\r\n                ignore = ['maximumDaysAllowed', 'maximumDistanceAllowed', 'services'];\r\n                break;\r\n            case 'By Location':\r\n                ignore = ['minimumAgeAllowed', 'maximumAgeAllowed', 'maximumDaysAllowed', 'services'];\r\n                break;\r\n            case 'By Days':\r\n                ignore = ['maximumAgeAllowed', 'minimumAgeAllowed', 'maximumDistanceAllowed', 'services'];\r\n                break;\r\n            default:\r\n                ignore = ['maximumDaysAllowed', 'maximumDistanceAllowed', 'minimumAgeAllowed', 'maximumAgeAllowed', 'services'];\r\n                break;\r\n        }\r\n        if (showFormErrors(data, setData, ignore)) {\r\n            if (id) {\r\n                dispatch(editMembershipType(id, { ...data, services: getIds(data.services) }, history));\r\n            } else {\r\n                dispatch(addMembershipType({ ...data, services: getIds(data.services) }, () => history.goBack()));\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <FormPage backText=\"Membership Types\">\r\n                <CustomCard col=\"12\" title=\"General\">\r\n                    <CustomInputSwitch name=\"isActive\" data={data} onChange={handleChange} />\r\n                    <CustomGridLayout>\r\n                        <CustomInput name=\"name\" data={data} onChange={handleChange} required />\r\n                        <CustomInput name=\"description\" data={data} onChange={handleChange} />\r\n                        <CustomDropDown name=\"discountType\" options={discountTypeOptions} onChange={handleChange} data={data} />\r\n                        <CustomDropDown name=\"accessRestriction\" options={yesNoOptions} onChange={handleChange} data={data} />\r\n                        {data?.accessRestriction === 'true' && (\r\n                            <CustomDropDown name=\"accessSchedule\" options={AccessScheduleDropdown} onChange={handleChange} data={data} />\r\n                        )}\r\n                        <CustomDropDown name=\"remotecheckin\" options={yesNoOptions} onChange={handleChange} data={data} />\r\n                        <CustomDropDown name=\"transferToAnotherType\" options={MembershipTypesDropdown} onChange={handleChange} data={data} />\r\n                        <CustomInputNumber prefix=\"$\" name=\"clubCreditAmount\" data={data} onChange={handleChange} col=\"4\" />\r\n                        <CustomDropDown name=\"specialRestriction\" options={SpecialRestrictionOptions} onChange={handleChange} data={data} />\r\n                        {data?.specialRestriction === 'By Age' && (\r\n                            <>\r\n                                <CustomInputNumber name=\"minimumAgeAllowed\" data={data} onChange={handleChange} col=\"4\" />\r\n                                <CustomInputNumber name=\"maximumAgeAllowed\" data={data} onChange={handleChange} col=\"4\" />\r\n                            </>\r\n                        )}\r\n                        {data?.specialRestriction === 'By Location' && (\r\n                            <>\r\n                                <CustomInputNumber name=\"maximumDistanceAllowed\" data={data} onChange={handleChange} col=\"4\" />\r\n                            </>\r\n                        )}\r\n                        {data?.specialRestriction === 'By Days' && (\r\n                            <>\r\n                                <CustomInputNumber name=\"maximumDaysAllowed\" data={data} onChange={handleChange} col=\"4\" />\r\n                            </>\r\n                        )}\r\n                    </CustomGridLayout>\r\n                </CustomCard>\r\n                <CustomCard col=\"12\" title=\" Clubs\">\r\n                    <CustomPickList name=\"club\" selected={data?.club} sourceData={clubsDropdown} onPickListChange={handleChange} />\r\n                </CustomCard>\r\n                <CustomCard col=\"12\" title=\" Add Services\">\r\n                    <CustomFilterCard1 buttonTitle=\"Add\" onClick={() => setOpen(true)} extraClass=\"justify-content-end gap-2\">\r\n                        <div>\r\n                            <PrimaryButton\r\n                                label={'Remove All'}\r\n                                onClick={() => {\r\n                                    setData((prev) => ({ ...prev, services: [] }));\r\n                                    setSelected([]);\r\n                                    // dispatch(deleteUsageItem(id, 'paysTo'));\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </CustomFilterCard1>\r\n                    <CustomTable data={data?.services} columns={columns1} showSelectionElement={false} onDelete={handleServiceDelete} />\r\n                </CustomCard>\r\n                <CustomDialog\r\n                    title={'Add Services'}\r\n                    visible={open}\r\n                    onCancel={() => {\r\n                        setOpen('');\r\n                    }}\r\n                    loading={loading}\r\n                    onSave={handleSave}\r\n                    width=\"auto\"\r\n                >\r\n                    <CustomGridLayout>\r\n                        {open && (\r\n                            <CustomTable\r\n                                convertToboolean={false}\r\n                                data={open && catalogServiceFilterItems}\r\n                                columns={columns}\r\n                                selectedRow={selected}\r\n                                setSelectedRow={setSelected}\r\n                            />\r\n                        )}\r\n                    </CustomGridLayout>\r\n                </CustomDialog>\r\n                <CustomButtonGroup>\r\n                    <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={onSave} loading={loading} />\r\n                    <LightButton label=\"Cancel\" onClick={() => history.goBack()} />\r\n                </CustomButtonGroup>\r\n            </FormPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MembershipTypeForm;\r\n"],"names":["MembershipTypeForm","dispatch","useDispatch","id","useParams","useEffect","getClubs","getCatalogItems","getAccessSchedules","AccessScheduleDropdown","useSelector","state","accessSchedule","MembershipTypesDropdown","membershipTypes","catalogServiceFilterItems","catalogItems","clubsDropdown","clubs","open","setOpen","useState","selected","setSelected","data","setData","name","description","discountType","accessRestriction","remotecheckin","transferToAnotherType","clubCreditAmount","specialRestriction","minimumAgeAllowed","maximumAgeAllowed","maximumDaysAllowed","maximumDistanceAllowed","club","services","isActive","history","useHistory","loading","_state$loader","loader","isLoading","getMembershipType","handleChange","_ref","value","formErrors","formValidation","prev","discountTypeOptions","defaultDiscountOptions","_jsx","_Fragment","children","_jsxs","FormPage","backText","CustomCard","col","title","CustomInputSwitch","onChange","CustomGridLayout","CustomInput","required","CustomDropDown","options","yesNoOptions","CustomInputNumber","prefix","SpecialRestrictionOptions","CustomPickList","sourceData","onPickListChange","CustomFilterCard1","buttonTitle","onClick","extraClass","PrimaryButton","label","CustomTable","columns","field","header","showSelectionElement","onDelete","confirmDelete","_data$services","filter","item","_id","CustomDialog","visible","onCancel","onSave","handleSave","width","convertToboolean","selectionMode","headerStyle","selectedRow","setSelectedRow","CustomButtonGroup","className","ignore","showFormErrors","editMembershipType","getIds","addMembershipType","goBack","LightButton"],"sourceRoot":""}