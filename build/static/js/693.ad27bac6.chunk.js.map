{"version":3,"file":"static/js/693.ad27bac6.chunk.js","mappings":"0QAWA,MAqDA,EArDqBA,KACjB,MAAMC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,OACX,GAAEC,IAAOC,EAAAA,EAAAA,MACRC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,CAC7BC,SAAU,GACVC,YAAa,MAEjBC,EAAAA,EAAAA,YAAU,KACFP,GACAF,GACIU,EAAAA,EAAAA,IAAYR,GAAKE,IACbC,EAAQ,CACJE,SAAUH,EAAKG,SACfC,YAAaJ,EAAKI,aACpB,IAGd,GACD,CAACN,EAAIF,IAER,MAAMW,EAAeC,IAAsB,IAArB,KAAEC,EAAI,MAAEC,GAAOF,EACjC,MAAMG,GAAaC,EAAAA,EAAAA,GAAeH,EAAMC,EAAOV,GAC/CC,GAASY,IAAI,IAAWA,EAAM,CAACJ,GAAOC,EAAOC,gBAAc,GAExDG,EAASC,IAAcb,EAAAA,EAAAA,WAAS,GAYvC,OACQc,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAACC,SAAS,YAAWC,SAAA,EAC1BC,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAACC,IAAI,KAAKC,MAAM,YAAWJ,UAClCH,EAAAA,EAAAA,MAACQ,EAAAA,EAAgB,CAAAL,SAAA,EACbC,EAAAA,EAAAA,KAACK,EAAAA,GAAW,CAAChB,KAAK,WAAWT,KAAMA,EAAM0B,SAAUnB,EAAcoB,UAAQ,KACzEP,EAAAA,EAAAA,KAACQ,EAAAA,GAAc,CAACnB,KAAK,cAAcoB,UAAU,MAAM7B,KAAMA,EAAM0B,SAAUnB,UAGjFS,EAAAA,EAAAA,MAACc,EAAAA,GAAiB,CAAAX,SAAA,EACdC,EAAAA,EAAAA,KAACW,EAAAA,GAAa,CAACC,MAAM,OAAOC,UAAU,OAAOC,QAnB1CC,MACXC,EAAAA,EAAAA,IAAepC,EAAMC,IAErBL,EADAE,GACSuC,EAAAA,EAAAA,IAAavC,EAAIE,EAAMe,EAAYrB,IAEnC4C,EAAAA,EAAAA,IAAYtC,EAAMe,EAAYrB,GAE/C,EAYkFoB,QAASA,KAC3EM,EAAAA,EAAAA,KAACmB,EAAAA,GAAW,CAACP,MAAM,SAASE,QAASA,IAAMxC,EAAQ8C,QAAQ,6BAExD,C","sources":["views/Settings/Business/JobTitle/JobTitleForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport { CustomInput, CustomTextArea } from '../../../../shared/Input/AllInputs';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { addJobTitle, editJobTitle, getJobTitle } from '../../../../redux/actions/BusinessSettings/jobActions';\r\nimport formValidation from '../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../utils/commonFunctions';\r\n\r\nconst JobTitleForm = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const [data, setData] = useState({\r\n        jobTitle: '',\r\n        description: '',\r\n    });\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getJobTitle(id, (data) => {\r\n                    setData({\r\n                        jobTitle: data.jobTitle,\r\n                        description: data.description,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n        if (id) {\r\n            dispatch(editJobTitle(id, data, setLoading, history));\r\n        } else {\r\n            dispatch(addJobTitle(data, setLoading, history));\r\n        }\r\n    }\r\n\r\n    };\r\n    return (\r\n            <FormPage backText=\"Job Title\">\r\n                <CustomCard col=\"12\" title=\"Job Title\">\r\n                    <CustomGridLayout>\r\n                        <CustomInput name=\"jobTitle\" data={data} onChange={handleChange} required />\r\n                        <CustomTextArea name=\"description\" maxLength=\"266\" data={data} onChange={handleChange} />\r\n                    </CustomGridLayout>\r\n                </CustomCard>\r\n                <CustomButtonGroup>\r\n                    <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={handleSave} loading={loading} />\r\n                    <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/business')} />\r\n                </CustomButtonGroup>\r\n            </FormPage>\r\n    );\r\n};\r\n\r\nexport default JobTitleForm;\r\n"],"names":["JobTitleForm","history","useHistory","dispatch","useDispatch","id","useParams","data","setData","useState","jobTitle","description","useEffect","getJobTitle","handleChange","_ref","name","value","formErrors","formValidation","prev","loading","setLoading","_jsxs","FormPage","backText","children","_jsx","CustomCard","col","title","CustomGridLayout","CustomInput","onChange","required","CustomTextArea","maxLength","CustomButtonGroup","PrimaryButton","label","className","onClick","handleSave","showFormErrors","editJobTitle","addJobTitle","LightButton","replace"],"sourceRoot":""}