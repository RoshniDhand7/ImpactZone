{"version":3,"file":"static/js/358.747e23cc.chunk.js","mappings":"qLAIe,SAASA,EAAQC,GAAkC,IAAjC,SAAEC,EAAQ,SAAEC,EAAQ,OAAEC,GAAQH,EAC3D,MAAMI,GAAUC,EAAAA,EAAAA,MAEVC,EAASA,KACPH,EACAC,EAAQG,QAAQJ,GAEhBC,EAAQI,QACZ,EAEJ,OACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAgB,CAAAT,SAAA,CACZC,GACGO,EAAAA,EAAAA,MAAA,OAAKE,UAAU,2BAA0BV,SAAA,EACrCW,EAAAA,EAAAA,KAAA,KAAGD,UAAU,2CAA2CE,QAASP,KACjEG,EAAAA,EAAAA,MAAA,OAAKE,UAAU,gDAAgDE,QAASP,EAAOL,SAAA,CAAC,WACnEC,QAGjB,MACJU,EAAAA,EAAAA,KAAAE,EAAAA,SAAA,CAAAb,SAAGA,MAGf,C,+JChBA,MAqDA,EArDqBc,KACjB,MAAMX,GAAUC,EAAAA,EAAAA,MACVW,GAAWC,EAAAA,EAAAA,OACX,GAAEC,IAAOC,EAAAA,EAAAA,OACRC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,CAC7BC,SAAU,GACVC,YAAa,MAEjBC,EAAAA,EAAAA,YAAU,KACFP,GACAF,GACIU,EAAAA,EAAAA,IAAYR,GAAKE,IACbC,EAAQ,CACJE,SAAUH,EAAKG,SACfC,YAAaJ,EAAKI,aACpB,IAGd,GACD,CAACN,EAAIF,IAER,MAAMW,EAAe3B,IAAsB,IAArB,KAAE4B,EAAI,MAAEC,GAAO7B,EACjC,MAAM8B,GAAaC,EAAAA,EAAAA,GAAeH,EAAMC,EAAOT,GAC/CC,GAASW,IAAI,IAAWA,EAAM,CAACJ,GAAOC,EAAOC,gBAAc,GAExDG,EAASC,IAAcZ,EAAAA,EAAAA,WAAS,GAYvC,OACQb,EAAAA,EAAAA,MAACV,EAAAA,EAAQ,CAACG,SAAS,YAAWD,SAAA,EAC1BW,EAAAA,EAAAA,KAACuB,EAAAA,GAAU,CAACC,IAAI,KAAKC,MAAM,YAAWpC,UAClCQ,EAAAA,EAAAA,MAAC6B,EAAAA,GAAgB,CAAArC,SAAA,EACbW,EAAAA,EAAAA,KAAC2B,EAAAA,GAAW,CAACX,KAAK,WAAWR,KAAMA,EAAMoB,SAAUb,EAAcc,UAAQ,KACzE7B,EAAAA,EAAAA,KAAC8B,EAAAA,GAAc,CAACd,KAAK,cAAce,UAAU,MAAMvB,KAAMA,EAAMoB,SAAUb,UAGjFlB,EAAAA,EAAAA,MAACmC,EAAAA,GAAiB,CAAA3C,SAAA,EACdW,EAAAA,EAAAA,KAACiC,EAAAA,GAAa,CAACC,MAAM,OAAOnC,UAAU,OAAOE,QAnB1CkC,MACXC,EAAAA,EAAAA,IAAe5B,EAAMC,IAErBL,EADAE,GACS+B,EAAAA,EAAAA,IAAa/B,EAAIE,EAAMc,EAAY9B,IAEnC8C,EAAAA,EAAAA,IAAY9B,EAAMc,EAAY9B,GAE/C,EAYkF6B,QAASA,KAC3ErB,EAAAA,EAAAA,KAACuC,EAAAA,GAAW,CAACL,MAAM,SAASjC,QAASA,IAAMT,EAAQG,QAAQ,6BAExD,C","sources":["shared/Layout/FormPage.jsx","views/Settings/Business/JobTitle/JobTitleForm.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomTransition from '../Transitions/CustomTransition';\r\n\r\nexport default function FormPage({ children, backText, backTo }) {\r\n    const history = useHistory();\r\n\r\n    const onBack = () => {\r\n        if (backTo) {\r\n            history.replace(backTo);\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    };\r\n    return (\r\n        <CustomTransition>\r\n            {backText ? (\r\n                <div className=\"flex mb-3 text-dark-gray\">\r\n                    <i className=\"pi pi-angle-left text-2xl cursor-pointer\" onClick={onBack}></i>\r\n                    <div className=\" my-auto font-semibold text-lg cursor-pointer\" onClick={onBack}>\r\n                        Back to {backText}\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            <>{children}</>\r\n        </CustomTransition>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport { CustomInput, CustomTextArea } from '../../../../shared/Input/AllInputs';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { addJobTitle, editJobTitle, getJobTitle } from '../../../../redux/actions/BusinessSettings/jobActions';\r\nimport formValidation from '../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../utils/commonFunctions';\r\n\r\nconst JobTitleForm = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const [data, setData] = useState({\r\n        jobTitle: '',\r\n        description: '',\r\n    });\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getJobTitle(id, (data) => {\r\n                    setData({\r\n                        jobTitle: data.jobTitle,\r\n                        description: data.description,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n        if (id) {\r\n            dispatch(editJobTitle(id, data, setLoading, history));\r\n        } else {\r\n            dispatch(addJobTitle(data, setLoading, history));\r\n        }\r\n    }\r\n\r\n    };\r\n    return (\r\n            <FormPage backText=\"Job Title\">\r\n                <CustomCard col=\"12\" title=\"Job Title\">\r\n                    <CustomGridLayout>\r\n                        <CustomInput name=\"jobTitle\" data={data} onChange={handleChange} required />\r\n                        <CustomTextArea name=\"description\" maxLength=\"266\" data={data} onChange={handleChange} />\r\n                    </CustomGridLayout>\r\n                </CustomCard>\r\n                <CustomButtonGroup>\r\n                    <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={handleSave} loading={loading} />\r\n                    <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/business')} />\r\n                </CustomButtonGroup>\r\n            </FormPage>\r\n    );\r\n};\r\n\r\nexport default JobTitleForm;\r\n"],"names":["FormPage","_ref","children","backText","backTo","history","useHistory","onBack","replace","goBack","_jsxs","CustomTransition","className","_jsx","onClick","_Fragment","JobTitleForm","dispatch","useDispatch","id","useParams","data","setData","useState","jobTitle","description","useEffect","getJobTitle","handleChange","name","value","formErrors","formValidation","prev","loading","setLoading","CustomCard","col","title","CustomGridLayout","CustomInput","onChange","required","CustomTextArea","maxLength","CustomButtonGroup","PrimaryButton","label","handleSave","showFormErrors","editJobTitle","addJobTitle","LightButton"],"sourceRoot":""}