{"version":3,"file":"static/js/785.d59de07d.chunk.js","mappings":"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","sources":["redux/actions/EmployeeSettings/certificationAction.js","views/Settings/Employees/ManageEmployee/AddEmployee/Security.jsx","shared/Input/DragDropFiles.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/General.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Clubs.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Notes.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Certifications/Certifications.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/EmployeeDepartments.jsx","redux/actions/EmployeeSettings/classesAction.js","views/Settings/Employees/ManageEmployee/AddEmployee/Classes/AddandEditClasses.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Classes/PaySetup.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Classes/SubstituteOptionSetup.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Classes/ClassesSetup.jsx","redux/actions/EmployeeSettings/appointmentAction.js","views/Settings/Employees/ManageEmployee/AddEmployee/AppointmentSetup/AddandEditAppointmentPay.js","views/Settings/Employees/ManageEmployee/AddEmployee/AppointmentSetup/PaySetup.jsx","redux/actions/EmployeeSettings/salesCommssionAction.js","views/Settings/Employees/ManageEmployee/AddEmployee/AppointmentSetup/BonusSetup.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/AppointmentSetup/CalendarDefault.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/AppointmentSetup/AppointmentSetup.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/SalesCommission/ItemCommission.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/SalesCommission/SalesCommission.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/EmployeeForm.jsx"],"sourcesContent":["import moment from 'moment/moment';\r\nimport api from '../../../services/api';\r\nimport EndPoints from '../../../services/endPoints';\r\nimport { types } from '../../types/types';\r\nimport { hideLoaderAction, showLoaderAction } from '../loaderAction';\r\nimport { showToast } from '../toastAction';\r\nimport { uploadFiles } from '../../../utils/commonFunctions';\r\n\r\nconst getCertificates = (id, setLoading) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const params = { employee: id };\r\n    const res = await api('get', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES, {}, params);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            dispatch({\r\n                type: types.CHANGE_MANAGE_EMPLOYEE_CERTIFICATES,\r\n                payload: res.data,\r\n            });\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\nconst addCertificates =\r\n    (data, setLoading, history, tab = '') =>\r\n    async (dispatch) => {\r\n        setLoading(true);\r\n        if (data.certificate?.length) {\r\n            let durls = await uploadFiles(data.certificate);\r\n            data.certificate = durls[0].path;\r\n            data.certificateName = durls[0].originalname;\r\n            data.certificateSize = durls[0].size;\r\n        } else {\r\n            data.certificate = '';\r\n        }\r\n\r\n        const payload = {\r\n            ...data,\r\n            acquiredDate: moment(data.acquiredDate).format('MM/DD/YYYY'),\r\n            expirationDate: moment(data.expirationDate).format('MM/DD/YYYY'),\r\n        };\r\n\r\n        const res = await api('post', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES, payload);\r\n        if (res.success) {\r\n            if (tab) {\r\n                history.replace(`/settings/employee/manage-employee/edit/${res.data._id}/${tab}`);\r\n            } else {\r\n                history.goBack();\r\n            }\r\n            dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        }\r\n        setLoading(false);\r\n    };\r\nconst getCertificate = (id, returnData) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n    const res = await api('get', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES + id);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\nconst editCertificates =\r\n    (id, data, setLoading, history, tab = '') =>\r\n    async (dispatch) => {\r\n        setLoading(true);\r\n        if (data.certificate?.length) {\r\n            let durls = await uploadFiles(data.certificate);\r\n            data.certificate = durls[0].path;\r\n            data.certificateName = durls[0].originalname;\r\n            data.certificateSize = durls[0].size;\r\n        } else {\r\n            data.certificate = '';\r\n        }\r\n\r\n        const payload = {\r\n            ...data,\r\n            acquiredDate: moment(data.acquiredDate).format('MM/DD/YYYY'),\r\n            expirationDate: moment(data.expirationDate).format('MM/DD/YYYY'),\r\n        };\r\n        const res = await api('put', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES + id, payload);\r\n        if (res.success) {\r\n            if (tab) {\r\n                history.replace(`/settings/employee/manage-employee/edit/${res.data._id}/${tab}`);\r\n            } else {\r\n                history.goBack();\r\n            }\r\n            dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        }\r\n        setLoading(false);\r\n    };\r\nconst deleteCertificates = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES + id);\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nconst getEmployeeNotes = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.NOTES, '', { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeNotes = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.NOTES, data);\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\nexport { getCertificates, addCertificates, editCertificates, deleteCertificates, getCertificate, getEmployeeNotes, addEmployeeNotes };\r\n","import React, { useEffect, useState } from 'react';\r\nimport CustomCard, { CustomGridLayout } from '../../../../../shared/Cards/CustomCard';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../../shared/Button/CustomButton';\r\nimport { CustomCalenderInput, CustomDropDown, CustomInput, CustomInputNumber } from '../../../../../shared/Input/AllInputs';\r\nimport { yesNoOptions } from '../../../../../utils/dropdownConstants';\r\nimport CustomPickList from '../../../../../shared/Input/CustomPickList';\r\nimport formValidation from '../../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../../utils/commonFunctions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { addEmployees, editEmployee, getEmployee } from '../../../../../redux/actions/EmployeeSettings/employeesAction';\r\nimport { useParams } from 'react-router';\r\nimport { getJobDetails } from '../../../../../redux/actions/BusinessSettings/jobActions';\r\nimport { getSecurityRoles } from '../../../../../redux/actions/EmployeeSettings/securityRolesAction';\r\n\r\nconst Security = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        dispatch(getJobDetails());\r\n        dispatch(getSecurityRoles());\r\n    }, [dispatch]);\r\n\r\n    let { allSecurityRoles } = useSelector((state) => state?.securityRole);\r\n    allSecurityRoles = allSecurityRoles?.map((item) => ({ name: item.name, value: item._id }));\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getEmployee(id, (data) => {\r\n                    setData({\r\n                        firstName: data.firstName,\r\n                        lastName: data.lastName,\r\n                        middleInitial: data.middleInitial,\r\n                        jobTitle: data.jobTitle,\r\n                        dob: new Date(data.dob),\r\n                        socialSecurity: data.socialSecurity,\r\n                        barCode: data.barCode,\r\n                        accessCode: data.accessCode,\r\n                        email: data.email,\r\n                        multiClubClockIn: data.multiClubClockIn.toString(),\r\n                        securityRoles: data.securityRoles,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n\r\n    const { allJobTitle } = useSelector((state) => state.jobTitle);\r\n    const [data, setData] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        middleInitial: '',\r\n        jobTitle: '',\r\n        dob: '',\r\n        socialSecurity: '',\r\n        barCode: 0,\r\n        accessCode: '',\r\n        email: '',\r\n        multiClubClockIn: '',\r\n        securityRoles: [],\r\n    });\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = (tab) => {\r\n        let ignore = ['jobTitle'];\r\n\r\n        if (showFormErrors(data, setData, ignore)) {\r\n            if (id) {\r\n                dispatch(editEmployee(id, data, setLoading, history, tab));\r\n            } else {\r\n                dispatch(addEmployees(data, setLoading, history, tab));\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"Personal\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"firstName\" required col={3} data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"middleInitial\" col={1} data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"lastName\" required data={data} onChange={handleChange} />\r\n                    <CustomDropDown\r\n                        name=\"jobTitle\"\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        options={allJobTitle?.map((item, index) => {\r\n                            return { label: item.jobTitle, value: item._id };\r\n                        })}\r\n                        optionLabel=\"label\"\r\n                    />\r\n                    <CustomCalenderInput name=\"dob\" data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"socialSecurity\" data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"System\">\r\n                <CustomGridLayout>\r\n                    <CustomInputNumber name=\"barCode\" required data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"accessCode\" required data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"email\" required data={data} onChange={handleChange} />\r\n                    <CustomDropDown label=\"Allow Multi-Club Clock In/Out\" name=\"multiClubClockIn\" options={yesNoOptions} data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Select Roles\">\r\n                <div col={12}>\r\n                    <CustomPickList name=\"securityRoles\" selected={data?.securityRoles} sourceData={allSecurityRoles} onPickListChange={handleChange} />\r\n                </div>\r\n            </CustomCard>\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={() => handleSave('')} loading={loading} />\r\n                <PrimaryButton label=\"Save & Next\" className=\"mx-2\" onClick={() => handleSave('?tab=general')} loading={loading} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/employee')} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Security;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { Avatar } from 'primereact/avatar';\r\nimport { Badge } from 'primereact/badge';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { getImageURL } from '../../utils/imageUrl';\r\n\r\nconst PhotoUpload = ({ name, value, data, onDropChange, multiple = true }) => {\r\n    const [selectedImages, setSelectedImages] = useState(value || data?.[name] || []);\r\n\r\n    useEffect(() => {\r\n        if (value || data?.[name]) {\r\n            if (JSON.stringify(value || data?.[name]) !== JSON.stringify(selectedImages)) {\r\n                setSelectedImages(value || data?.[name]);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value || data?.[name]]);\r\n\r\n    useEffect(() => {\r\n        if (onDropChange) {\r\n            onDropChange({ name, value: selectedImages });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedImages, name]);\r\n\r\n    const onDrop = useCallback(\r\n        (acceptedFiles, rejectedFiles) => {\r\n            if (rejectedFiles.length > 0) {\r\n            } else {\r\n                acceptedFiles.forEach((file) => {\r\n                    const isFileAlreadySelected = selectedImages.some((selectedFile) => selectedFile.name === file.name);\r\n\r\n                    if (!isFileAlreadySelected) {\r\n                        setSelectedImages((prevState) => [...prevState, file]);\r\n                    } else {\r\n                        // console.log(`File \"${file.name}\" is already selected.`);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        [selectedImages],\r\n    );\r\n\r\n    const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({\r\n        onDrop,\r\n        multiple,\r\n        // maxFiles: 1,\r\n        accept: {\r\n            'image/*': ['.png', '.gif', '.jpeg', '.jpg'],\r\n        },\r\n    });\r\n\r\n    const style = useMemo(\r\n        () => ({\r\n            ...(isDragAccept ? { borderColor: '#00e676' } : {}),\r\n            ...(isDragReject ? { borderColor: '#ff1744' } : {}),\r\n        }),\r\n        [isDragAccept, isDragReject],\r\n    );\r\n\r\n    const removeImage = (index) => {\r\n        setSelectedImages((prevState) => prevState.filter((_, i) => i !== index));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div {...getRootProps({ style })} style={dropzoneStyle}>\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                    isDragReject ? (\r\n                        <>\r\n                            <Avatar icon=\"pi pi-exclamation-triangle\" size=\"large\" className=\"bg-red-50\" style={{ color: '#252B42' }} shape=\"circle\" />\r\n                            <p className=\"text-color-secondary font-medium text-lg\">Only image files are allowed!</p>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <Avatar icon=\"pi pi-download\" size=\"large\" className=\"bg-green-50\" style={{ color: '#252B42' }} shape=\"circle\" />\r\n                            <p className=\"text-color-secondary font-medium text-lg\">Drop the photo here...</p>\r\n                        </>\r\n                    )\r\n                ) : (\r\n                    <>\r\n                        <Avatar icon=\"pi pi-file\" size=\"large\" style={{ backgroundColor: '#F2F5FE', color: '#252B42' }} shape=\"circle\" />\r\n                        <p className=\"text-color-secondary font-medium text-lg\">Drag your photo here or browse.</p>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <div className=\"flex flex-wrap my-2\">\r\n                {selectedImages?.length > 0 &&\r\n                    selectedImages?.map((image, index) => (\r\n                        <Avatar className=\"p-overlay-badge my-2 mr-3\" image={getImageURL(image)} size=\"xlarge\">\r\n                            <Badge value=\"X\" icon=\"pi pi-fast-forward\" severity=\"danger\" className=\"cursor-pointer\" onClick={() => removeImage(index)} />\r\n                        </Avatar>\r\n                    ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst dropzoneStyle = {\r\n    border: '2px dashed #eeeeee',\r\n    borderRadius: '4px',\r\n    padding: '60px',\r\n    textAlign: 'center',\r\n    cursor: 'pointer',\r\n    background: '#fff',\r\n};\r\n\r\nexport default PhotoUpload;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../../shared/Button/CustomButton';\r\nimport { CustomCalenderInput, CustomDropDown, CustomInput, CustomInputMask, CustomTextArea } from '../../../../../shared/Input/AllInputs';\r\nimport CustomCard, { CustomGridLayout } from '../../../../../shared/Cards/CustomCard';\r\nimport { getAllCountries, getCitiesByState, getStatesByCountry, showFormErrors } from '../../../../../utils/commonFunctions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { yesNoOptions } from '../../../../../utils/dropdownConstants';\r\nimport PhotoUpload from '../../../../../shared/Input/DragDropFiles';\r\nimport formValidation from '../../../../../utils/validations';\r\nimport { editEmployee, getEmployee } from '../../../../../redux/actions/EmployeeSettings/employeesAction';\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\nconst General = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const [states, setStates] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getAllCountries();\r\n        const updatedStates = getStatesByCountry('US');\r\n        setStates(updatedStates);\r\n    }, [dispatch]);\r\n\r\n    const [data, setData] = useState({\r\n        hireDate: '',\r\n        terminationDate: '',\r\n        adpId: '',\r\n        primaryPhone: '',\r\n        workPhone: '',\r\n        workPhoneExt: '',\r\n        mobilePhone: '',\r\n        faxPhone: '',\r\n        emergencyPhone: '',\r\n        emergencyPhoneExt: '',\r\n        street: '',\r\n        city: '',\r\n        state: '',\r\n        zipCode: '',\r\n        emailNotification: true,\r\n        onlineNickName: '',\r\n        bio: '',\r\n        socialMedia: '',\r\n        alternateEmail: '',\r\n        image: [],\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getEmployee(id, (data) => {\r\n                    setData({\r\n                        hireDate: data.hireDate ? new Date(data.hireDate) : '',\r\n                        terminationDate: data.terminationDate,\r\n                        adpId: data.adpId,\r\n                        primaryPhone: data.primaryPhone,\r\n                        workPhone: data.workPhone,\r\n                        workPhoneExt: data.workPhoneExt,\r\n                        mobilePhone: data.mobilePhone,\r\n                        faxPhone: data.faxPhone,\r\n                        emergencyPhone: data.emergencyPhone,\r\n                        emergencyPhoneExt: data.emergencyPhoneExt,\r\n                        street: data.street,\r\n                        city: data.city,\r\n                        state: data.state,\r\n                        zipCode: data.zipCode,\r\n                        emailNotification: data.emailNotification?.toString(),\r\n                        onlineNickName: data.onlineNickName,\r\n                        bio: data.bio,\r\n                        socialMedia: data.socialMedia,\r\n                        alternateEmail: data.alternateEmail,\r\n                        image: data.image ? [data.image] : [],\r\n                    });\r\n                    const cities = getCitiesByState('US', data.state);\r\n                    setCities(cities);\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n    useEffect(() => {\r\n        const formErrors = formValidation('city', data.city, data);\r\n        setData((prev) => ({ ...prev, ['city']: data.city, formErrors }));\r\n    }, [data.city]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        if (name === 'state') {\r\n            const city = getCitiesByState('US', value);\r\n            setCities(city);\r\n\r\n            // Clear city and zip code\r\n            const clearedData = {\r\n                ...data,\r\n                city: '',\r\n                zipCode: '',\r\n            };\r\n\r\n            // Set form errors\r\n            const formErrors = {\r\n                ...formValidation('state', value, clearedData),\r\n                ...formValidation('city', '', clearedData),\r\n                ...formValidation('zipCode', '', clearedData),\r\n            };\r\n\r\n            setData((prev) => ({\r\n                ...prev,\r\n                city: '',\r\n                zipCode: '',\r\n                state: value,\r\n                formErrors,\r\n            }));\r\n        } else {\r\n            setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n        }\r\n    };\r\n    const handleSave = (tab) => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (id) {\r\n                dispatch(editEmployee(id, data, setLoading, history, tab));\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"Employement\">\r\n                <CustomGridLayout>\r\n                    <CustomCalenderInput id=\"hireDate\" name=\"hireDate\" onChange={handleChange} data={data} />\r\n                    <CustomInput name=\"adpId\" onChange={handleChange} data={data} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Contact\">\r\n                <CustomGridLayout>\r\n                    <CustomInputMask id=\"primaryPhone\" name=\"primaryPhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInputMask id=\"workPhone\" name=\"workPhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInputMask id=\"mobilePhone\" name=\"mobilePhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInputMask id=\"faxPhone\" name=\"faxPhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInputMask id=\"emergencyPhone\" name=\"emergencyPhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInput name=\"street\" onChange={handleChange} data={data} />\r\n                    <CustomDropDown name=\"state\" options={states} onChange={handleChange} data={data} />\r\n                    <CustomDropDown name=\"city\" options={cities} onChange={handleChange} data={data} />\r\n                    <CustomInput name=\"zipCode\" onChange={handleChange} data={data} disabled={!data.state} />\r\n                    <CustomDropDown name=\"emailNotification\" options={yesNoOptions} onChange={handleChange} data={data} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Online\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"onlineNickName\" onChange={handleChange} data={data} />\r\n                    <CustomInput name=\"socialMedia\" onChange={handleChange} data={data} />\r\n                    <CustomInput name=\"alternateEmail\" label=\"Alternate Email\" onChange={handleChange} data={data} />\r\n                    <CustomTextArea name=\"bio\" onChange={handleChange} data={data} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Photo\">\r\n                <PhotoUpload name=\"image\" onDropChange={handleChange} data={data} multiple={false} />\r\n                <div className=\"p-error text-sm\">{data?.formErrors?.image}</div>\r\n            </CustomCard>\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={() => handleSave('')} loading={loading} />\r\n                <PrimaryButton label=\"Save & Next\" className=\"mx-2\" onClick={() => handleSave('?tab=departments')} loading={loading} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/employee')} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default General;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CustomCard from '../../../../../shared/Cards/CustomCard';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../../shared/Button/CustomButton';\r\nimport CustomPickList from '../../../../../shared/Input/CustomPickList';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getClubs } from '../../../../../redux/actions/BusinessSettings/clubsAction';\r\nimport { editEmployee, getEmployee } from '../../../../../redux/actions/EmployeeSettings/employeesAction';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nconst Clubs = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        dispatch(getClubs());\r\n    }, [dispatch]);\r\n\r\n    let { clubsDropdown } = useSelector((state) => state.clubs);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getEmployee(id, (data) => {\r\n                    setData({\r\n                        reportDataAccess: data.reportDataAccess,\r\n                        clubs: data.clubs,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n    const [data, setData] = useState({\r\n        reportDataAccess: [],\r\n        clubs: [],\r\n    });\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        setData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n    const handleSave = () => {\r\n        if (id) {\r\n            dispatch(editEmployee(id, data, setLoading, history));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"Report Data Access\">\r\n                <CustomPickList name=\"reportDataAccess\" selected={data?.reportDataAccess} sourceData={clubsDropdown} onPickListChange={handleChange} />\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Clubs\">\r\n                <CustomPickList name=\"clubs\" selected={data?.clubs} sourceData={clubsDropdown} onPickListChange={handleChange} />\r\n            </CustomCard>\r\n\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" loading={loading} onClick={handleSave} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/employee')} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Clubs;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CustomFilterCard, CustomGridLayout } from '../../../../../shared/Cards/CustomCard';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CustomTable from '../../../../../shared/Table/CustomTable';\r\nimport CustomDialog from '../../../../../shared/Overlays/CustomDialog';\r\nimport { addEmployeeNotes, getEmployeeNotes } from '../../../../../redux/actions/EmployeeSettings/certificationAction';\r\nimport moment from 'moment';\r\nimport { CustomTextArea } from '../../../../../shared/Input/AllInputs';\r\nimport formValidation from '../../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../../utils/commonFunctions';\r\n\r\nconst Notes = () => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((state) => state.profile.user);\r\n    useEffect(() => {\r\n        if (user) {\r\n            setData({ ...data, takenBy: user.firstName, dateTime: new Date() });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [user]);\r\n    const [data, setData] = useState({\r\n        takenBy: user?.firstName,\r\n        dateTime: new Date(),\r\n        notes: '',\r\n    });\r\n    const [visible, setVisible] = useState(false);\r\n    const [notesData, setNotesData] = useState([]);\r\n    const funcGetNotes = (id) => {\r\n        dispatch(\r\n            getEmployeeNotes(id, setLoading, (data) => {\r\n                setNotesData(data);\r\n            }),\r\n        );\r\n    };\r\n    useEffect(() => {\r\n        if (id) {\r\n            funcGetNotes(id);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [id, dispatch]);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (id) {\r\n                dispatch(\r\n                    addEmployeeNotes({ ...data, employee: id }, setLoading, () => {\r\n                        funcGetNotes(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            }\r\n        }\r\n    };\r\n    const columns = [\r\n        { field: 'takenBy', header: 'Taken By' },\r\n        { field: 'dateTime', body: (r) => moment(r.dateTime).format('MM-DD-YYYY hh:mm a'), header: 'Date/Time' },\r\n        { field: 'notes', header: 'Notes' },\r\n    ];\r\n    const onClose = () => {\r\n        setData({ notes: '' });\r\n        setVisible(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} />\r\n            <CustomTable data={notesData} columns={columns} />\r\n            <CustomDialog width=\"100vh\" title={'Add Note'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomTextArea name=\"notes\" maxLength=\"266\" data={data} onChange={handleChange} inputClass=\"h-17rem\t\" />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notes;\r\n","import React, { useEffect } from 'react';\r\nimport { CustomFilterCard } from '../../../../../../shared/Cards/CustomCard';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { deleteCertificates, getCertificates } from '../../../../../../redux/actions/EmployeeSettings/certificationAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport { confirmDelete } from '../../../../../../utils/commonFunctions';\r\n\r\nconst Certifications = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(getCertificates(id));\r\n    }, [dispatch, id]);\r\n\r\n    const { allCertificates } = useSelector((state) => state.certificates);\r\n\r\n    const columns = [\r\n        { field: 'name', header: 'Name' },\r\n        { field: 'certificateNumber', header: 'Cerificate Number' },\r\n        { field: 'description', header: 'Description' },\r\n        { field: 'issuer', header: 'Issuer' },\r\n        { field: 'acquiredDate', header: 'Acquired Date' },\r\n        { field: 'expirationDate', header: 'Expiration Date' },\r\n    ];\r\n    const onEdit = (col) => {\r\n        history.push(`/settings/employee/manage-employee/edit/${col._id}/certifications/${id}`);\r\n    };\r\n    const onDelete = (col, position) => {\r\n        confirmDelete(\r\n            () => {\r\n                dispatch(\r\n                    deleteCertificates(col._id, () => {\r\n                        dispatch(getCertificates(id));\r\n                    }),\r\n                );\r\n            },\r\n            'Do you want to delete this Certificates ?',\r\n            position,\r\n        );\r\n    };\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add Certifications\" linkTo={`/settings/employee/manage-employee/add/certifications/${id}`} />\r\n            <CustomTable data={allCertificates} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Certifications;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CustomFilterCard, CustomGridLayout } from '../../../../../shared/Cards/CustomCard';\r\nimport CustomTable from '../../../../../shared/Table/CustomTable';\r\nimport CustomDialog from '../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomInputNumber, CustomMultiselect } from '../../../../../shared/Input/AllInputs';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    addEmployeeDepartment,\r\n    deleteEmployeeDepartment,\r\n    editEmployeeDepartment,\r\n    getDepartments,\r\n    getEmployeeDepartments,\r\n} from '../../../../../redux/actions/EmployeeSettings/departmentsAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport { confirmDelete } from '../../../../../utils/commonFunctions';\r\n\r\nexport default function EmployeeDepartments() {\r\n    const { id } = useParams();\r\n    let { departmentsDropdown } = useSelector((state) => state?.department);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getDepartments());\r\n        funcGetEmpDepartments(id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch]);\r\n\r\n    const funcGetEmpDepartments = (id) => {\r\n        dispatch(\r\n            getEmployeeDepartments(id, setLoading, (data) => {\r\n                setEmployeeDepartments(data);\r\n            }),\r\n        );\r\n    };\r\n\r\n    const columns = [\r\n        { field: 'departmentName', header: 'Name' },\r\n        { field: 'wage', header: 'Wage' },\r\n    ];\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeDeptId, setEmployeeDeptId] = useState(null);\r\n    const [employeeDepartments, setEmployeeDepartments] = useState([]);\r\n    const [data, setData] = useState({\r\n        departments: [],\r\n        wage: 0,\r\n    });\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        setData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (employeeDeptId) {\r\n            dispatch(\r\n                editEmployeeDepartment(employeeDeptId, { wage: data.wage }, setLoading, () => {\r\n                    funcGetEmpDepartments(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        } else {\r\n            dispatch(\r\n                addEmployeeDepartment({ ...data, employee: id }, setLoading, () => {\r\n                    funcGetEmpDepartments(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }\r\n    };\r\n\r\n    const onEdit = (id) => {\r\n        setEmployeeDeptId(id);\r\n        let _empDeptData = employeeDepartments.find((item) => item._id === id);\r\n        setData({ departments: [_empDeptData.department], wage: _empDeptData.wage });\r\n        setVisible(true);\r\n    };\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deleteEmployeeDepartment(col._id, () => {\r\n                    funcGetEmpDepartments(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Employee Department?');\r\n    };\r\n    const onClose = () => {\r\n        setVisible(false);\r\n        setData({\r\n            departments: [],\r\n            wage: 0,\r\n        });\r\n        setEmployeeDeptId(null);\r\n    };\r\n    let filterdDepartmentsDropdown = departmentsDropdown.filter((item) => !employeeDepartments.map((ed) => ed.department).includes(item.value));\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add Department\" onClick={() => setVisible(true)} />\r\n            <CustomTable data={employeeDepartments} columns={columns} onEdit={(e) => onEdit(e._id)} onDelete={onDelete} />\r\n\r\n            <CustomDialog title=\"Add\" visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomMultiselect\r\n                        col=\"12\"\r\n                        name=\"departments\"\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        options={employeeDeptId ? departmentsDropdown : filterdDepartmentsDropdown}\r\n                        disabled={employeeDeptId ? true : false}\r\n                    />\r\n                    <CustomInputNumber col=\"12\" name=\"wage\" data={data} onChange={handleChange} minFractionDigits={4} maxFractionDigits={4} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n}\r\n","import api from '../../../services/api';\r\nimport EndPoints from '../../../services/endPoints';\r\nimport { types } from '../../types/types';\r\nimport { hideLoaderAction, showLoaderAction } from '../loaderAction';\r\nimport { showToast } from '../toastAction';\r\n\r\nconst getEmployeeClasses = (employee, setLoading) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.EMPLOYEE_CLASSES, {}, { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            dispatch({\r\n                type: types.CHANGE_EMPLOYEE_CLASSES,\r\n                payload: res.data,\r\n            });\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst updateEmployeeLevel = (id, level, next) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n\r\n    const payload = {\r\n        employee: id,\r\n        isClassLevel: level,\r\n    };\r\n\r\n    const res = await api('post', EndPoints.UPDATE_CLASS_LEVEL, payload);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\n\r\nconst addEmployeeClasses = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.EMPLOYEE_CLASSES, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\nconst editEmployeeClasses = (id, data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.EMPLOYEE_CLASSES + id, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst getEmployeeClaases = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.EMPLOYEE_CLASSES + employee);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\nconst deleteEmployeeClasses = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.EMPLOYEE_CLASSES + id);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nconst getEmployeeSubstitutionOptions = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.SUSTITITION_OPTIONS, '', { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeSubstitutionOptions = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.SUSTITITION_OPTIONS, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst editEmployeeSubstitutionOptions = (id, data, setLoading, next) => async () => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.SUSTITITION_OPTIONS + id, data);\r\n    if (res.success) {\r\n        next();\r\n    }\r\n    setLoading(false);\r\n};\r\nconst getSubstitutionOption = (substitutionOptionsId, returnData) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n    const res = await api('get', EndPoints.SUSTITITION_OPTIONS + substitutionOptionsId);\r\n\r\n    if (res.success) {\r\n        dispatch(hideLoaderAction());\r\n\r\n        if (returnData) {\r\n            returnData(res.data);\r\n        }\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\n\r\nconst deleteSubstitutionOption = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.SUSTITITION_OPTIONS + id);\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nexport {\r\n    getEmployeeClasses,\r\n    addEmployeeClasses,\r\n    getEmployeeClaases,\r\n    editEmployeeClasses,\r\n    deleteEmployeeClasses,\r\n    getEmployeeSubstitutionOptions,\r\n    addEmployeeSubstitutionOptions,\r\n    getSubstitutionOption,\r\n    deleteSubstitutionOption,\r\n    editEmployeeSubstitutionOptions,\r\n    updateEmployeeLevel,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { CustomCheckbox, CustomDropDown, CustomInputDecimalNumber, CustomInputNumber } from '../../../../../../shared/Input/AllInputs';\r\nimport { classesPayTypeOptions } from '../../../../../../utils/dropdownConstants';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport {\r\n    addEmployeeClasses,\r\n    editEmployeeClasses,\r\n    getEmployeeClaases,\r\n    getEmployeeClasses,\r\n} from '../../../../../../redux/actions/EmployeeSettings/classesAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport formValidation from '../../../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../../../utils/commonFunctions';\r\n\r\nconst AddandEditClasses = ({ visible, setVisible, id, employeeClassId, setEmployeeClassId }) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeClasses, setEmployeeClassesData] = useState({});\r\n    const dispatch = useDispatch();\r\n\r\n    const onClose = () => {\r\n        setVisible(false);\r\n        setData(incrementalPay);\r\n        setEmployeeClassId(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (employeeClassId) {\r\n            funcGetEmpDepartments(employeeClassId);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [employeeClassId]);\r\n\r\n    const funcGetEmpDepartments = (id) => {\r\n        dispatch(\r\n            getEmployeeClaases(id, setLoading, (data) => {\r\n                setEmployeeClassesData(data);\r\n            }),\r\n        );\r\n    };\r\n\r\n    const incrementalPay = {\r\n        payType: 'INCREMENTAL_PAY',\r\n        oneToFiveClients: 0,\r\n        sixToTenClients: 0,\r\n        elevenToFifteenClients: 0,\r\n        sixteenToTwentyClients: 0,\r\n        twentyOneToTwentyFiveClients: 0,\r\n        twentySixPlusClients: 0,\r\n        noRegistrationPay: 0,\r\n        countUnpaidService: false,\r\n    };\r\n\r\n    const payperClassPayload = {\r\n        payType: 'PAY_PER_CLASS',\r\n        payPerClassRate: 0,\r\n        noRegistrationPay: 0,\r\n    };\r\n\r\n    const PayPerClient = {\r\n        payType: 'PAY_PER_CLIENT',\r\n        baseRate: 0,\r\n        countUnpaidService: false,\r\n        payPerClientRate: 0,\r\n        eachClientOver: [\r\n            {\r\n                noOfClients: 0,\r\n                rate: 0,\r\n            },\r\n            {\r\n                noOfClients: 0,\r\n                rate: 0,\r\n            },\r\n            {\r\n                noOfClients: 0,\r\n                rate: 0,\r\n            },\r\n        ],\r\n        maxPayPerClient: 0,\r\n        noRegistrationPay: 0,\r\n    };\r\n\r\n    const percentageRate = {\r\n        payType: 'PERCENTAGE_RATE',\r\n        percentage: 0,\r\n        noRegistrationPay: 0,\r\n    };\r\n\r\n    const [data, setData] = useState(incrementalPay);\r\n\r\n    useEffect(() => {\r\n        if (!employeeClassId) {\r\n            if (data?.payType === 'INCREMENTAL_PAY') {\r\n                setData(incrementalPay);\r\n            } else if (data?.payType === 'PAY_PER_CLASS') {\r\n                setData(payperClassPayload);\r\n            } else if (data?.payType === 'PAY_PER_CLIENT') {\r\n                setData(PayPerClient);\r\n            } else if (data?.payType === 'PERCENTAGE_RATE') {\r\n                setData(percentageRate);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [data?.payType]);\r\n\r\n    useEffect(() => {\r\n        if (employeeClassId && employeeClasses) {\r\n            const {\r\n                oneToFiveClients,\r\n                sixToTenClients,\r\n                elevenToFifteenClients,\r\n                sixteenToTwentyClients,\r\n                twentyOneToTwentyFiveClients,\r\n                twentySixPlusClients,\r\n                noRegistrationPay,\r\n                payPerClassRate,\r\n                baseRate,\r\n                payPerClientRate,\r\n                maxPayPerClient,\r\n                percentage,\r\n                countUnpaidService,\r\n            } = employeeClasses;\r\n            let newData = {};\r\n            switch (employeeClasses?.payType) {\r\n                case 'INCREMENTAL_PAY':\r\n                    newData = {\r\n                        payType: 'INCREMENTAL_PAY',\r\n                        oneToFiveClients,\r\n                        sixToTenClients,\r\n                        elevenToFifteenClients,\r\n                        sixteenToTwentyClients,\r\n                        twentyOneToTwentyFiveClients,\r\n                        twentySixPlusClients,\r\n                        noRegistrationPay,\r\n                        countUnpaidService,\r\n                    };\r\n                    break;\r\n                case 'PAY_PER_CLASS':\r\n                    newData = {\r\n                        payType: 'PAY_PER_CLASS',\r\n                        payPerClassRate,\r\n                        noRegistrationPay,\r\n                    };\r\n                    break;\r\n                case 'PAY_PER_CLIENT':\r\n                    newData = {\r\n                        payType: 'PAY_PER_CLIENT',\r\n                        baseRate,\r\n                        countUnpaidService,\r\n                        payPerClientRate,\r\n                        eachClientOver: employeeClasses.eachClientOver.map((item) => ({\r\n                            noOfClients: item.noOfClients,\r\n                            rate: item.rate,\r\n                        })),\r\n                        maxPayPerClient,\r\n                        noRegistrationPay,\r\n                    };\r\n                    break;\r\n                case 'PERCENTAGE_RATE':\r\n                    newData = {\r\n                        payType: 'PERCENTAGE_RATE',\r\n                        percentage,\r\n                        noRegistrationPay,\r\n                    };\r\n                    break;\r\n                default:\r\n                    newData = {};\r\n                    break;\r\n            }\r\n            setData(newData);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [employeeClasses]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const handleChange1 = (index, key, value) => {\r\n        const newList = [...data.eachClientOver]; // Use data instead of PayPerClient\r\n        newList[index][key] = value;\r\n        setData((prev) => ({ ...prev, eachClientOver: newList }));\r\n    };\r\n\r\n    const handleSave = () => {\r\n        let ignore = [];\r\n        if (data?.payType === 'INCREMENTAL_PAY') {\r\n            ignore = ['payPerClassRate', 'baseRate', 'payPerClientRate', 'maxPayPerClient', 'percentage'];\r\n        } else if (data?.payType === 'PAY_PER_CLASS') {\r\n            ignore = [\r\n                'oneToFiveClients',\r\n                'sixToTenClients',\r\n                'elevenToFifteenClients',\r\n                'sixteenToTwentyClients',\r\n                'twentyOneToTwentyFiveClients',\r\n                'twentySixPlusClients',\r\n                'baseRate',\r\n                'payPerClientRate',\r\n                'maxPayPerClient',\r\n                'percentage',\r\n            ];\r\n        } else if (data?.payType === 'PAY_PER_CLIENT') {\r\n            ignore = [\r\n                'oneToFiveClients',\r\n                'sixToTenClients',\r\n                'elevenToFifteenClients',\r\n                'sixteenToTwentyClients',\r\n                'twentyOneToTwentyFiveClients',\r\n                'twentySixPlusClients',\r\n                'percentage',\r\n                'payPerClassRate',\r\n            ];\r\n        } else {\r\n            ignore = [\r\n                'oneToFiveClients',\r\n                'sixToTenClients',\r\n                'elevenToFifteenClients',\r\n                'sixteenToTwentyClients',\r\n                'twentyOneToTwentyFiveClients',\r\n                'twentySixPlusClients',\r\n                'baseRate',\r\n                'payPerClientRate',\r\n                'maxPayPerClient',\r\n                'payPerClassRate',\r\n            ];\r\n        }\r\n        if (showFormErrors(data, setData, ignore)) {\r\n            if (employeeClassId) {\r\n                dispatch(\r\n                    editEmployeeClasses(employeeClassId, data, setLoading, () => {\r\n                        dispatch(getEmployeeClasses(id));\r\n\r\n                        onClose();\r\n                    }),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addEmployeeClasses({ ...data, employee: id }, setLoading, () => {\r\n                        dispatch(getEmployeeClasses(id));\r\n                        onClose();\r\n                    }),\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <CustomDialog title={employeeClassId ? 'Edit' : 'Add'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomDropDown\r\n                        name=\"payType\"\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        options={classesPayTypeOptions}\r\n                        col={12}\r\n                        disabled={employeeClassId ? true : false}\r\n                    />\r\n                    {data?.payType === 'INCREMENTAL_PAY' && (\r\n                        <>\r\n                            <CustomInputDecimalNumber label=\"1-5 Clients\" name=\"oneToFiveClients\" data={data} onChange={handleChange} />\r\n                            <CustomInputDecimalNumber label=\"6-10 Clients\" name=\"sixToTenClients\" data={data} onChange={handleChange} />\r\n                            <CustomInputDecimalNumber label=\"11-15 Clients\" name=\"elevenToFifteenClients\" data={data} onChange={handleChange} />\r\n                            <CustomInputDecimalNumber label=\"16-20 Clients\" name=\"sixteenToTwentyClients\" data={data} onChange={handleChange} />\r\n                            <CustomInputDecimalNumber label=\"21-25 Clients\" data={data} name=\"twentyOneToTwentyFiveClients\" onChange={handleChange} />\r\n                            <CustomInputDecimalNumber label=\"26+ Clients\" data={data} name=\"twentySixPlusClients\" onChange={handleChange} />\r\n                            <CustomInputDecimalNumber name=\"noRegistrationPay\" data={data} onChange={handleChange} />\r\n                            <CustomCheckbox name=\"countUnpaidService\" label=\"Count unpaid services\" data={data} onChange={handleChange} />\r\n                        </>\r\n                    )}\r\n\r\n                    {data?.payType === 'PAY_PER_CLASS' && (\r\n                        <>\r\n                            <CustomInputDecimalNumber data={data} name=\"payPerClassRate\" onChange={handleChange} />\r\n                            <CustomInputDecimalNumber name=\"noRegistrationPay\" data={data} onChange={handleChange} />\r\n                        </>\r\n                    )}\r\n                    {data?.payType === 'PAY_PER_CLIENT' && (\r\n                        <>\r\n                            <CustomInputDecimalNumber name=\"baseRate\" data={data} onChange={handleChange} />\r\n                            <CustomInputDecimalNumber name=\"payPerClientRate\" data={data} onChange={handleChange} />\r\n                            {data?.eachClientOver?.map((client, index) => (\r\n                                <div className=\" col-12 \" key={index}>\r\n                                    <div className=\"grid\">\r\n                                        <CustomInputDecimalNumber\r\n                                            name=\"noOfClients\"\r\n                                            value={client?.noOfClients}\r\n                                            onChange={(e) => handleChange1(index, 'noOfClients', e.value)}\r\n                                            col={6}\r\n                                        />\r\n                                        <CustomInputDecimalNumber\r\n                                            name=\"rate\"\r\n                                            value={client?.rate}\r\n                                            onChange={(e) => handleChange1(index, 'rate', e.value)}\r\n                                            col={6}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                            <CustomInputDecimalNumber data={data} name=\"noRegistrationPay\" onChange={handleChange} />\r\n                            <CustomInputDecimalNumber data={data} label=\"Max Pay\" name=\"maxPayPerClient\" onChange={handleChange} />\r\n                            <CustomCheckbox name=\"countUnpaidService\" label=\"Count unpaid services\" data={data} onChange={handleChange} />\r\n                        </>\r\n                    )}\r\n                    {data?.payType === 'PERCENTAGE_RATE' && (\r\n                        <>\r\n                            <CustomInputDecimalNumber data={data} name=\"percentage\" onChange={handleChange} />\r\n                            <CustomInputDecimalNumber\r\n                                name=\"noRegistrationPay\"\r\n                                prefix={'$'}\r\n                                data={data}\r\n                                onChange={handleChange}\r\n                                minFractionDigits={4}\r\n                                maxFractionDigits={4}\r\n                            />\r\n                        </>\r\n                    )}\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddandEditClasses;\r\n","import React, { useState, useEffect, useId } from 'react';\r\nimport { DataView } from 'primereact/dataview';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CustomCard, { CustomFilterCard, CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport {\r\n    deleteEmployeeClasses,\r\n    editEmployeeClasses,\r\n    getEmployeeClasses,\r\n    updateEmployeeLevel,\r\n} from '../../../../../../redux/actions/EmployeeSettings/classesAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport AddandEditClasses from './AddandEditClasses';\r\nimport { confirmDelete } from '../../../../../../utils/commonFunctions';\r\nimport { CustomDropDown, CustomInputSwitch } from '../../../../../../shared/Input/AllInputs';\r\nimport PrimaryButton from '../../../../../../shared/Button/CustomButton';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { getEmployees } from '../../../../../../redux/actions/EmployeeSettings/employeesAction';\r\nimport { getLevels } from '../../../../../../redux/actions/ScheduleSettings/levelActions';\r\n\r\nexport default function PaySetup() {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n\r\n    const [openSimilar, setOpenSimilarTo] = useState(false);\r\n    const [data, setData] = useState({\r\n        isClassLevel: '',\r\n        isDefaultPay: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        funcGetEmpClasses();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch]);\r\n    useEffect(() => {\r\n        dispatch(getEmployees());\r\n        dispatch(getLevels());\r\n    }, [dispatch]);\r\n\r\n    const { levelDropdown } = useSelector((state) => state.level);\r\n    const uniqueId = useId();\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        dispatch(\r\n            updateEmployeeLevel(id, value, () => {\r\n                funcGetEmpClasses();\r\n            }),\r\n        );\r\n        setData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeClassId, setEmployeeClassId] = useState(null);\r\n    let { allEmployeeClasses } = useSelector((state) => state?.employees);\r\n\r\n    useEffect(() => {\r\n        if (allEmployeeClasses) {\r\n            setData((prev) => ({ ...prev, isClassLevel: allEmployeeClasses?.isClassLevel }));\r\n        }\r\n    }, [allEmployeeClasses]);\r\n\r\n    const funcGetEmpClasses = () => {\r\n        dispatch(getEmployeeClasses(id));\r\n    };\r\n\r\n    const onEdit = (id) => {\r\n        setEmployeeClassId(id?._id);\r\n        // let _empDeptData = employeeDepartments.find((item) => item._id === id);\r\n        // setData({ departments: [_empDeptData.department], wage: _empDeptData.wage });\r\n        setVisible(true);\r\n    };\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deleteEmployeeClasses(col._id, () => {\r\n                    funcGetEmpClasses();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Employee Classes?');\r\n    };\r\n    const handleSwitchChange = (id, active) => {\r\n        allEmployeeClasses = allEmployeeClasses?.list?.map((item) => {\r\n            if (item._id === id) {\r\n                dispatch(\r\n                    editEmployeeClasses(item?._id, { isDefaultPay: active }, setLoading, () => {\r\n                        funcGetEmpClasses();\r\n                    }),\r\n                );\r\n                return { ...item, isDefaultPay: active };\r\n            } else {\r\n                return { ...item, isDefaultPay: false };\r\n            }\r\n        });\r\n    };\r\n\r\n    const itemTemplate = (item) => {\r\n        const index = allEmployeeClasses.list.findIndex((i) => i._id === item._id);\r\n        console.log('index>>', index);\r\n        return (\r\n            <div className=\"col-12 grid py-2  \" key={uniqueId}>\r\n                <div className=\"col-10\">{renderRow(item, index)}</div>\r\n                <div className=\"col-1 my-auto\">\r\n                    <CustomInputSwitch\r\n                        name=\"isDefaultPay\"\r\n                        label=\"Default Pay\"\r\n                        checked={item?.isDefaultPay}\r\n                        onChange={(e) => handleSwitchChange(item._id, e.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"col-1 my-auto\">\r\n                    <i className=\"mx-3 cursor-pointer pi pi-pencil\" onClick={() => onEdit(item)} />\r\n                    <i className=\" cursor-pointer pi pi-trash\" onClick={() => onDelete(item)} />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    const renderRow = (item, index) => {\r\n        console.log('item>>', item);\r\n        switch (item.payType) {\r\n            case 'INCREMENTAL_PAY':\r\n                return (\r\n                    <div className=\"flex\">\r\n                        <div className=\"mx-3 flex w-2\">\r\n                            <div className=\"my-auto mr-4\">{index + 1}</div>\r\n                            <div>\r\n                                <div className=\"font-medium\">Pay</div>\r\n                                <div>Incremental Pay</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium \">1-5 Clients</div>\r\n                            <div>${item?.oneToFiveClients}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">6-10 Clients</div>\r\n                            <div>${item?.sixToTenClients}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">11-15 Clients</div>\r\n                            <div>${item?.elevenToFifteenClients}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">16-20 Clients</div>\r\n                            <div>${item?.sixteenToTwentyClients}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">21-25 Clients</div>\r\n                            <div>${item?.twentyOneToTwentyFiveClients}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">26+ Clients</div>\r\n                            <div>${item?.twentySixPlusClients}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">No Registration Pay</div>\r\n                            <div>${item?.noRegistrationPay ? item?.noRegistrationPay : '0'}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case 'PAY_PER_CLIENT':\r\n                return (\r\n                    <div className=\"flex\">\r\n                        <div className=\"mx-3 flex w-2\">\r\n                            <div className=\"my-auto mr-4\">{index + 1}</div>\r\n                            <div>\r\n                                <div className=\"font-medium\">Pay</div>\r\n                                <div>Pay Per Client</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">Base Rate</div>\r\n                            <div>${item?.baseRate}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">Per Client</div>\r\n                            <div>${item?.payPerClientRate}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"ml-3\">\r\n                            <div className=\"font-medium\">For each client over</div>\r\n                            <div>{item?.eachClientOver[0].noOfClients}</div>\r\n                        </div>\r\n                        <div className=\"ml-1 mr-3\">\r\n                            <div className=\"font-medium\">Add</div>\r\n                            <div>${item?.eachClientOver[0].rate}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"ml-3\">\r\n                            <div className=\"font-medium\">For each client over</div>\r\n                            <div>{item?.eachClientOver[1].noOfClients}</div>\r\n                        </div>\r\n                        <div className=\"ml-1 mr-3\">\r\n                            <div className=\"font-medium\">Add</div>\r\n                            <div>${item?.eachClientOver[1].rate}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"ml-3\">\r\n                            <div className=\"font-medium\">For each client over</div>\r\n                            <div>{item?.eachClientOver[2].noOfClients}</div>\r\n                        </div>\r\n                        <div className=\"ml-1 mr-3\">\r\n                            <div className=\"font-medium\">Add</div>\r\n                            <div>${item?.eachClientOver[2].rate}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-2\">\r\n                            <div className=\"font-medium\">No Registration Pay</div>\r\n                            <div>${item?.noRegistrationPay ? item?.noRegistrationPay : '0'}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-2\">\r\n                            <div className=\"font-medium\">Max Pay</div>\r\n                            <div>${item?.noRegistrationPay}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case 'PAY_PER_CLASS':\r\n                return (\r\n                    <div className=\"flex\">\r\n                        <div className=\"mx-3 flex w-2\">\r\n                            <div className=\"my-auto mr-4\">{index + 1}</div>\r\n                            <div>\r\n                                <div className=\"font-medium\">Pay</div>\r\n                                <div>Pay Per Class</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mx-3 w-1\">\r\n                            <div className=\"font-medium\">Price</div>\r\n                            <div>${item?.payPerClassRate}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">No Registration Pay</div>\r\n                            <div>${item?.noRegistrationPay ? item?.noRegistrationPay : '0'}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case 'PERCENTAGE_RATE':\r\n                return (\r\n                    <div className=\"flex\">\r\n                        <div className=\"mx-3 flex w-2\">\r\n                            <div className=\"my-auto mr-4\">{index + 1}</div>\r\n                            <div>\r\n                                <div className=\"font-medium\">Pay</div>\r\n                                <div>% Rate</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mx-3 w-1\">\r\n                            <div className=\"font-medium\">Percentage</div>\r\n                            <div>{item?.percentage}%</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">No Registration Pay</div>\r\n                            <div>${item?.noRegistrationPay ? item?.noRegistrationPay : '0'}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            default:\r\n                return (\r\n                    <div className=\"grid\">\r\n                        <div className=\"col-1\">{index + 1}</div>\r\n                        <div className=\"col-11\">{item.payType}</div>\r\n                    </div>\r\n                );\r\n        }\r\n    };\r\n\r\n    const handleSave = () => {};\r\n    return (\r\n        <div>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} extraClass=\"align-items-end \">\r\n                <div className=\" flex justify-content-between align-items-end\">\r\n                    <CustomDropDown name=\"isClassLevel\" col={6} options={levelDropdown} optionLabel=\"name\" data={data} onChange={handleChange} />\r\n                    <PrimaryButton name=\"Similar To\" className=\"w-12rem\" label=\"Similar To\" onClick={() => setOpenSimilarTo(true)} />\r\n                </div>\r\n            </CustomFilterCard>\r\n            <CustomCard col=\"12\" title=\"Pay\">\r\n                <DataView value={allEmployeeClasses?.list} itemTemplate={itemTemplate} paginator rows={5} />\r\n                <AddandEditClasses\r\n                    visible={visible}\r\n                    setVisible={setVisible}\r\n                    id={id}\r\n                    employeeClassId={employeeClassId}\r\n                    setEmployeeClassId={setEmployeeClassId}\r\n                />\r\n            </CustomCard>\r\n            <CustomDialog title={'Similar To'} visible={openSimilar} onCancel={() => setOpenSimilarTo(false)} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"employee\" col={12} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport CustomCard, { CustomFilterCard, CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport {\r\n    addEmployeeSubstitutionOptions,\r\n    deleteSubstitutionOption,\r\n    editEmployeeSubstitutionOptions,\r\n    getEmployeeSubstitutionOptions,\r\n    getSubstitutionOption,\r\n} from '../../../../../../redux/actions/EmployeeSettings/classesAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomDropDown } from '../../../../../../shared/Input/AllInputs';\r\nimport { substitutionPriorityOptions } from '../../../../../../utils/dropdownConstants';\r\nimport { confirmDelete, showFormErrors } from '../../../../../../utils/commonFunctions';\r\nimport formValidation from '../../../../../../utils/validations';\r\nimport { getEvents } from '../../../../../../redux/actions/ScheduleSettings/eventsActions';\r\n\r\nexport default function SubstituteOptionSetup() {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    const [Substitute, setSubstitute] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [visible, setVisible] = useState(false);\r\n    const [data, setData] = useState({\r\n        event: '',\r\n        priority: 'MEDIUM',\r\n    });\r\n\r\n    const [substitutionOptionsId, setSubstituteOptionsId] = useState('');\r\n    let { isClassLevel } = useSelector((state) => state?.employees);\r\n\r\n    useEffect(() => {\r\n        funcGetEmpSubstitution(id);\r\n        // dispatch(getEmployees());\r\n        dispatch(getEvents());\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    const { allEvents } = useSelector((state) => state.event);\r\n\r\n    const filteredEvents = allEvents\r\n        ?.filter((item) => item?.eventLevel?.includes(isClassLevel) && item.eventType === 'Class')\r\n        ?.map((item) => ({ name: item.name, value: item._id }));\r\n\r\n    const funcGetEmpSubstitution = (id) => {\r\n        dispatch(\r\n            getEmployeeSubstitutionOptions(id, setLoading, (data) => {\r\n                setSubstitute(data);\r\n            }),\r\n        );\r\n    };\r\n    const onEdit = (col) => {\r\n        setSubstituteOptionsId(col?._id);\r\n        setVisible(true);\r\n    };\r\n    useEffect(() => {\r\n        if (substitutionOptionsId) {\r\n            dispatch(\r\n                getSubstitutionOption(substitutionOptionsId, (data) => {\r\n                    setData({\r\n                        event: data.event,\r\n                        priority: data.priority,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [substitutionOptionsId, dispatch]);\r\n\r\n    const columns = [\r\n        { field: 'event', header: 'Name' },\r\n        { field: 'priority', header: 'Priority' },\r\n    ];\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const onClose = () => {\r\n        setVisible(false);\r\n        setData({\r\n            event: '',\r\n            priority: 'MEDIUM',\r\n        });\r\n        setSubstituteOptionsId(null);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (substitutionOptionsId) {\r\n                dispatch(\r\n                    editEmployeeSubstitutionOptions(substitutionOptionsId, { ...data, employee: id }, setLoading, () => {\r\n                        funcGetEmpSubstitution(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addEmployeeSubstitutionOptions({ ...data, employee: id }, setLoading, () => {\r\n                        funcGetEmpSubstitution(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deleteSubstitutionOption(col._id, () => {\r\n                    funcGetEmpSubstitution(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Substitution Option?');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} />\r\n            <CustomCard col=\"12\" title=\"Classes\">\r\n                <CustomTable data={Substitute} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n            </CustomCard>\r\n            <CustomDialog title={substitutionOptionsId ? 'Edit' : 'Add'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"event\" data={data} onChange={handleChange} options={filteredEvents} col={12} />\r\n                    <CustomDropDown name=\"priority\" data={data} onChange={handleChange} options={substitutionPriorityOptions} col={12} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport CustomTabView from '../../../../../../shared/TabView/CustomTabView';\r\nimport PaySetup from './PaySetup';\r\nimport SubstituteOptionSetup from './SubstituteOptionSetup';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ClassesSetup = () => {\r\n    const tabs = [\r\n        { title: 'Pay', content: <PaySetup /> },\r\n        // { title: 'Bonus', content: <BonusSetup type=\"bonus\" /> },\r\n        { title: 'Substitute Option', content: <SubstituteOptionSetup /> },\r\n    ];\r\n    let { isClassLevel } = useSelector((state) => state?.employees);\r\n\r\n    return (\r\n        <>\r\n            <CustomTabView name=\"classes\" tabs={tabs} useIndex={true} disabledTabIndices={isClassLevel ? [] : [1]} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ClassesSetup;\r\n","import api from '../../../services/api';\r\nimport EndPoints from '../../../services/endPoints';\r\nimport { types } from '../../types/types';\r\nimport { hideLoaderAction, showLoaderAction } from '../loaderAction';\r\nimport { showToast } from '../toastAction';\r\n\r\nconst getEmployeeAppointmentPay = (employee, type, setLoading) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.EMPLOYEE_APPOINTMENT, {}, { employee, type });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            dispatch({\r\n                type: types.CHANGE_EMPLOYEE_APPOINTMENT_PAY,\r\n                payload: res.data,\r\n            });\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeAppointmentPay = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.EMPLOYEE_APPOINTMENT, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\nconst isDefaultAppointmentPay = (data, next) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n\r\n    const res = await api('post', EndPoints.EMPLOYEE_APPOINTMENT_IS_DEFAULT, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\nconst updateEmployeeAppointmentPayLevel = (id, level, next) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n\r\n    const payload = {\r\n        employee: id,\r\n        isAppointmentLevel: level,\r\n    };\r\n\r\n    const res = await api('post', EndPoints.UPDATE_APPOINTMENT_CLASS_LEVEL, payload);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\nconst editEmployeeAppointmentPay = (id, data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.EMPLOYEE_APPOINTMENT + id, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst getEmployeeAppartment = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.EMPLOYEE_APPOINTMENT + employee);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\nconst deletetEmployeeAppartment = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.EMPLOYEE_APPOINTMENT + id);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nconst getEmployeeSubstitutionOptions = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.SUSTITITION_OPTIONS, '', { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeBonus = (type, data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n    let res;\r\n    if (type === 'appointment') {\r\n        res = await api('post', EndPoints.EMPLOYEE_APPOINTMENT, data);\r\n    } else {\r\n        res = await api('post', EndPoints.SALES_COMMISSION, data);\r\n    }\r\n\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst editEmployeeBonus = (type, id, data, setLoading, next) => async () => {\r\n    setLoading(true);\r\n    let res;\r\n    if (type === 'appointment') {\r\n        res = await api('put', EndPoints.EMPLOYEE_APPOINTMENT + id, data);\r\n    } else {\r\n        res = await api('put', EndPoints.SALES_COMMISSION + id, data);\r\n    }\r\n\r\n    if (res.success) {\r\n        next();\r\n    }\r\n    setLoading(false);\r\n};\r\nconst getEmployeeBonus = (type, id, returnData) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n    let res;\r\n    if (type === 'appointment') {\r\n        res = await api('get', EndPoints.EMPLOYEE_APPOINTMENT + id);\r\n    } else {\r\n        res = await api('get', EndPoints.SALES_COMMISSION + id);\r\n    }\r\n\r\n    if (res.success) {\r\n        dispatch(hideLoaderAction());\r\n\r\n        if (returnData) {\r\n            returnData(res.data);\r\n        }\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\n\r\nconst deleteEmployeeBonus = (type, id, next) => async (dispatch) => {\r\n    let res;\r\n    if (type === 'appointment') {\r\n        res = await api('delete', EndPoints.EMPLOYEE_APPOINTMENT + id);\r\n    } else {\r\n        res = await api('delete', EndPoints.SALES_COMMISSION + id);\r\n    }\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nexport {\r\n    getEmployeeAppointmentPay,\r\n    addEmployeeAppointmentPay,\r\n    getEmployeeAppartment,\r\n    editEmployeeAppointmentPay,\r\n    deletetEmployeeAppartment,\r\n    getEmployeeSubstitutionOptions,\r\n    addEmployeeBonus,\r\n    getEmployeeBonus,\r\n    deleteEmployeeBonus,\r\n    editEmployeeBonus,\r\n    isDefaultAppointmentPay,\r\n    updateEmployeeAppointmentPayLevel,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    addEmployeeAppointmentPay,\r\n    editEmployeeAppointmentPay,\r\n    getEmployeeAppartment,\r\n} from '../../../../../../redux/actions/EmployeeSettings/appointmentAction';\r\nimport formValidation from '../../../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../../../utils/commonFunctions';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport { CustomDropDown, CustomInputNumber, CustomMultiselect } from '../../../../../../shared/Input/AllInputs';\r\nimport { AppointmentPayPriorityOptions, amountTypeOptions } from '../../../../../../utils/dropdownConstants';\r\nimport { getEvents } from '../../../../../../redux/actions/ScheduleSettings/eventsActions';\r\n\r\nconst AddandEditAppointmentPay = ({ funcGetEmpAppointment, id, setVisible, visible, employeeAppartId, setEmployeeAppartId }) => {\r\n    const dispatch = useDispatch();\r\n    const initialState = {\r\n        event: [],\r\n        priority: 'PER-EVENT',\r\n        type: 'PAY',\r\n        pay: 0,\r\n        amountType: 'FIXED',\r\n    };\r\n    const [data, setData] = useState(initialState);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(getEvents());\r\n    }, [dispatch]);\r\n    let { isAppointmentLevel, allAppointmentPayDropdown } = useSelector((state) => state?.employees);\r\n\r\n    const { allEvents } = useSelector((state) => state.event);\r\n    const filteredEvents = allEvents\r\n        ?.filter((item) => item?.eventLevel?.includes(isAppointmentLevel) && item.eventType === 'Appointments')\r\n        ?.map((item) => ({ name: item.name, value: item._id }));\r\n    const editFiltered = filteredEvents.filter((item) => !allAppointmentPayDropdown?.map((ed) => ed.name).includes(item.name) || data?.event === item?.value);\r\n    const filtered = filteredEvents.filter((item) => !allAppointmentPayDropdown?.map((ed) => ed.name).includes(item.name));\r\n\r\n    useEffect(() => {\r\n        if (employeeAppartId) {\r\n            dispatch(\r\n                getEmployeeAppartment(employeeAppartId, setLoading, (data) => {\r\n                    setData({\r\n                        event: data.event,\r\n                        priority: data.priority,\r\n                        type: 'PAY',\r\n                        pay: data.pay,\r\n                        amountType: data.amountType,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [employeeAppartId, dispatch]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (employeeAppartId) {\r\n                dispatch(\r\n                    editEmployeeAppointmentPay(employeeAppartId, { ...data }, setLoading, () => {\r\n                        funcGetEmpAppointment();\r\n                        onClose();\r\n                    }),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addEmployeeAppointmentPay({ ...data, employee: id }, setLoading, () => {\r\n                        funcGetEmpAppointment();\r\n                        onClose();\r\n                    }),\r\n                );\r\n            }\r\n        }\r\n    };\r\n    const onClose = () => {\r\n        setEmployeeAppartId(null);\r\n        setData(initialState);\r\n        setVisible(false);\r\n    };\r\n    return (\r\n        <>\r\n            <CustomDialog title={employeeAppartId ? 'Edit' : 'Add'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    {employeeAppartId ? (\r\n                        <CustomDropDown name=\"event\" data={data} onChange={handleChange} options={editFiltered} col={12} />\r\n                    ) : (\r\n                        <CustomMultiselect name=\"event\" data={data} onChange={handleChange} options={filtered} col={12} />\r\n                    )}\r\n\r\n                    <CustomDropDown name=\"priority\" data={data} onChange={handleChange} options={AppointmentPayPriorityOptions} col={12} />\r\n                    <CustomInputNumber col={8} name=\"pay\" data={data} onChange={handleChange} minFractionDigits={4} maxFractionDigits={4} />\r\n                    <CustomDropDown label=\"\" name=\"amountType\" options={amountTypeOptions} data={data} onChange={handleChange} col={4} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddandEditAppointmentPay;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { CustomFilterCard } from '../../../../../../shared/Cards/CustomCard';\r\nimport { useParams } from 'react-router-dom';\r\nimport { CustomDropDown } from '../../../../../../shared/Input/AllInputs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    deletetEmployeeAppartment,\r\n    getEmployeeAppointmentPay,\r\n    updateEmployeeAppointmentPayLevel,\r\n} from '../../../../../../redux/actions/EmployeeSettings/appointmentAction';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport { confirmDelete } from '../../../../../../utils/commonFunctions';\r\nimport formValidation from '../../../../../../utils/validations';\r\nimport { getLevels } from '../../../../../../redux/actions/ScheduleSettings/levelActions';\r\nimport AddandEditAppointmentPay from './AddandEditAppointmentPay';\r\n\r\nconst PaySetup = () => {\r\n    const dispatch = useDispatch();\r\n    const [visible, setVisible] = useState(false);\r\n    const [employeeAppartId, setEmployeeAppartId] = useState(null);\r\n\r\n    const { id } = useParams();\r\n    const [data, setData] = useState({\r\n        isDefaultPay: '',\r\n        isAppointmentLevel: '',\r\n    });\r\n    let { allAppointmentPay } = useSelector((state) => state?.employees);\r\n    const funcGetEmpAppointment = useCallback(() => {\r\n        dispatch(getEmployeeAppointmentPay(id, 'PAY'));\r\n    }, [dispatch, id]);\r\n\r\n    useEffect(() => {\r\n        funcGetEmpAppointment();\r\n    }, [funcGetEmpAppointment]);\r\n    useEffect(() => {\r\n        dispatch(getLevels());\r\n    }, [dispatch]);\r\n    useEffect(() => {\r\n        if (allAppointmentPay) {\r\n            setData((prev) => ({ ...prev, isAppointmentLevel: allAppointmentPay?.isAppointmentLevel }));\r\n        }\r\n    }, [allAppointmentPay]);\r\n\r\n    const { levelDropdown } = useSelector((state) => state.level);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n\r\n        if (name === 'isAppointmentLevel') {\r\n            dispatch(\r\n                updateEmployeeAppointmentPayLevel(id, value, () => {\r\n                    funcGetEmpAppointment();\r\n                }),\r\n            );\r\n            setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n        }\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const columns = [\r\n        { field: 'event', header: 'Name' },\r\n        { field: 'priority', header: 'Priority' },\r\n        { field: 'pay', header: 'Pay' },\r\n    ];\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deletetEmployeeAppartment(col._id, () => {\r\n                    funcGetEmpAppointment();\r\n                    setVisible(false);\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Appartment Pay?');\r\n    };\r\n    const onEdit = (col) => {\r\n        setEmployeeAppartId(col?._id);\r\n        setVisible(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} extraClass=\"align-items-end\">\r\n                <CustomDropDown\r\n                    extraClassName=\"w-18rem\"\r\n                    name=\"isAppointmentLevel\"\r\n                    label=\"Appointment Level\"\r\n                    options={levelDropdown}\r\n                    optionLabel=\"name\"\r\n                    data={data}\r\n                    onChange={handleChange}\r\n                />\r\n            </CustomFilterCard>\r\n            <CustomTable data={allAppointmentPay?.list} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n            <AddandEditAppointmentPay\r\n                funcGetEmpAppointment={funcGetEmpAppointment}\r\n                id={id}\r\n                setVisible={setVisible}\r\n                visible={visible}\r\n                employeeAppartId={employeeAppartId}\r\n                setEmployeeAppartId={setEmployeeAppartId}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PaySetup;\r\n","import api from '../../../services/api';\r\nimport EndPoints from '../../../services/endPoints';\r\nimport { hideLoaderAction, showLoaderAction } from '../loaderAction';\r\nimport { showToast } from '../toastAction';\r\n\r\nconst getEmployeeSalesItem = (employee, type, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.SALES_COMMISSION, '', { employee, type: type });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeSalesItem = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.SALES_COMMISSION, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\nconst editEmployeeSalesItem = (id, data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.SALES_COMMISSION + id, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst getEmployeeSaleItem = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.SALES_COMMISSION + employee);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\nconst deletetEmployeeSaleItem = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.SALES_COMMISSION + id);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nconst getEmployeeSubstitutionOptions = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.SUSTITITION_OPTIONS, '', { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeAppartmentBonus = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.EMPLOYEE_APPOINTMENT, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst editEmployeeSubstitutionOptions = (id, data, setLoading, next) => async () => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.EMPLOYEE_APPOINTMENT + id, data);\r\n    if (res.success) {\r\n        next();\r\n    }\r\n    setLoading(false);\r\n};\r\nconst getEmployeeAppartmentBonus = (id, returnData) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n    const res = await api('get', EndPoints.EMPLOYEE_APPOINTMENT + id);\r\n\r\n    if (res.success) {\r\n        dispatch(hideLoaderAction());\r\n\r\n        if (returnData) {\r\n            returnData(res.data);\r\n        }\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\n\r\nconst deleteSubstitutionOption = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.SUSTITITION_OPTIONS + id);\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nexport {\r\n    getEmployeeSalesItem,\r\n    addEmployeeSalesItem,\r\n    getEmployeeSaleItem,\r\n    editEmployeeSalesItem,\r\n    deletetEmployeeSaleItem,\r\n    getEmployeeSubstitutionOptions,\r\n    addEmployeeAppartmentBonus,\r\n    getEmployeeAppartmentBonus,\r\n    deleteSubstitutionOption,\r\n    editEmployeeSubstitutionOptions,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CustomFilterCard, CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomDropDown, CustomInputNumber, CustomMultiselect } from '../../../../../../shared/Input/AllInputs';\r\nimport { amountTypeOptions, bonusTypeConstantsOptions, durationOptions } from '../../../../../../utils/dropdownConstants';\r\nimport {\r\n    addEmployeeBonus,\r\n    deleteEmployeeBonus,\r\n    editEmployeeBonus,\r\n    getEmployeeAppointmentPay,\r\n    getEmployeeBonus,\r\n} from '../../../../../../redux/actions/EmployeeSettings/appointmentAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport formValidation from '../../../../../../utils/validations';\r\nimport { confirmDelete, showFormErrors } from '../../../../../../utils/commonFunctions';\r\nimport { getEmployeeSalesItem } from '../../../../../../redux/actions/EmployeeSettings/salesCommssionAction';\r\nimport { getCatalogItems } from '../../../../../../redux/actions/InventorySettings/catalogItemsAction';\r\nimport { getEvents } from '../../../../../../redux/actions/ScheduleSettings/eventsActions';\r\n\r\nconst BonusSetup = ({ type }) => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n\r\n    const initialState = {\r\n        bonusType: 'SERVICE_VALUE', //SINGLE_CLIENT,SERVICE_VALUE\r\n        sessionsValue: 0,\r\n        ofSessions: 0, //sessionsValue,ofSessions\r\n        over: 0,\r\n        duration: 'DAYS',\r\n        bonusAmount: 0,\r\n        type: 'BONUS',\r\n        amountType: 'FIXED',\r\n        services: [],\r\n    };\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeAppartBonusId, setemployeeAppartBonusId] = useState(null);\r\n    const [appointmentData, setAppointmentData] = useState([]);\r\n\r\n    const [data, setData] = useState(initialState);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    useEffect(() => {\r\n        dispatch(getCatalogItems());\r\n        dispatch(getEvents());\r\n    }, [dispatch]);\r\n\r\n    const { catalogServiceDropdown } = useSelector((state) => state.catalogItems);\r\n    let { isAppointmentLevel } = useSelector((state) => state?.employees);\r\n    const { allEvents } = useSelector((state) => state.event);\r\n\r\n    const filteredEvents = allEvents\r\n        ?.filter((item) => item?.eventLevel?.includes(isAppointmentLevel) && item.eventType === 'Appointments')\r\n        ?.map((item) => ({ name: item.name, value: item._id }));\r\n\r\n    useEffect(() => {\r\n        funcGetEmpAppointment(id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    const funcGetEmpAppointment = (id) => {\r\n        if (type === 'appointment') {\r\n            dispatch(getEmployeeAppointmentPay(id, 'BONUS', setLoading));\r\n        } else {\r\n            dispatch(\r\n                getEmployeeSalesItem(id, 'BONUS', setLoading, (data) => {\r\n                    setAppointmentData(data);\r\n                }),\r\n            );\r\n        }\r\n    };\r\n    let { allAppointmentPay } = useSelector((state) => state?.employees);\r\n\r\n    useEffect(() => {\r\n        if (employeeAppartBonusId) {\r\n            dispatch(\r\n                getEmployeeBonus(type, employeeAppartBonusId, (data) => {\r\n                    setData({\r\n                        bonusType: data.bonusType,\r\n                        sessionsValue: data.sessionsValue,\r\n                        ofSessions: data.ofSessions,\r\n                        over: data.selectTimeframe.over,\r\n                        duration: data.selectTimeframe.duration,\r\n                        bonusAmount: data.bonusAmount,\r\n                        type: 'BONUS',\r\n                        amountType: data.amountType,\r\n                        services: data.services,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [employeeAppartBonusId, dispatch]);\r\n\r\n    const onClose = () => {\r\n        setemployeeAppartBonusId(null);\r\n        setData(initialState);\r\n        setVisible(false);\r\n    };\r\n\r\n    const onEdit = (col) => {\r\n        setemployeeAppartBonusId(col?._id);\r\n        setVisible(true);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        let ignore = [];\r\n        if (data?.bonusType === 'SINGLE_CLIENT') {\r\n            ignore = ['sessionsValue'];\r\n        } else {\r\n            ignore = ['ofSessions'];\r\n        }\r\n        if (showFormErrors(data, setData, ignore)) {\r\n            const { over, duration, ...rest } = data;\r\n            if (employeeAppartBonusId) {\r\n                dispatch(\r\n                    editEmployeeBonus(\r\n                        type,\r\n                        employeeAppartBonusId,\r\n                        {\r\n                            ...rest,\r\n                            selectTimeframe: {\r\n                                over,\r\n                                duration,\r\n                            },\r\n                        },\r\n                        setLoading,\r\n                        () => {\r\n                            funcGetEmpAppointment(id);\r\n                            onClose();\r\n                        },\r\n                    ),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addEmployeeBonus(\r\n                        type,\r\n                        {\r\n                            ...rest,\r\n                            selectTimeframe: {\r\n                                over,\r\n                                duration,\r\n                            },\r\n                            employee: id,\r\n                        },\r\n                        setLoading,\r\n                        () => {\r\n                            funcGetEmpAppointment(id);\r\n                            onClose();\r\n                        },\r\n                    ),\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deleteEmployeeBonus(type, col._id, () => {\r\n                    funcGetEmpAppointment(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Bonus?');\r\n    };\r\n    const columns = [\r\n        { field: 'bonusType', body: (r) => (r.bonusType === 'SERVICE_VALUE' ? 'Service Value' : 'Single Client'), header: 'Bonus Type' },\r\n        { field: 'Session', body: (r) => (r.bonusType === 'SERVICE_VALUE' ? r.sessionsValue : r.ofSessions), header: 'Value' },\r\n        { field: 'selectTimeframe.over', body: (r) => r.selectTimeframe.over + ' ' + r.selectTimeframe.duration.toLowerCase(), header: 'Time Frame' },\r\n        { field: 'bonusAmount', body: (r) => (r.amountType === 'FIXED' ? '$' + r.bonusAmount : r.bonusAmount + '%'), header: 'Bonus Amount' },\r\n\r\n        { field: 'services', body: (r) => r.services?.map((item) => item.name)?.join(','), header: 'Services' },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} />\r\n            <CustomTable data={type === 'appointment' ? allAppointmentPay?.list : appointmentData} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n\r\n            <CustomDialog\r\n                title={employeeAppartBonusId ? 'Edit' : 'Add'}\r\n                visible={visible}\r\n                onCancel={onClose}\r\n                loading={loading}\r\n                onSave={handleSave}\r\n                width=\"90vh\"\r\n            >\r\n                <CustomGridLayout>\r\n                    <CustomDropDown label=\"\" name=\"bonusType\" data={data} onChange={handleChange} options={bonusTypeConstantsOptions} col={6} />\r\n                    {data?.bonusType === 'SINGLE_CLIENT' ? (\r\n                        <CustomInputNumber col={6} label=\"No of Sessions\" name=\"ofSessions\" data={data} onChange={handleChange} />\r\n                    ) : (\r\n                        <CustomInputNumber col={6} name=\"sessionsValue\" data={data} onChange={handleChange} minFractionDigits={4} maxFractionDigits={4} />\r\n                    )}\r\n                    <CustomInputNumber col=\"6\" name=\"over\" data={data} onChange={handleChange} />\r\n                    <CustomDropDown label=\"\" name=\"duration\" data={data} onChange={handleChange} col={6} options={durationOptions} />\r\n                    <CustomInputNumber col={8} name=\"bonusAmount\" data={data} onChange={handleChange} minFractionDigits={4} maxFractionDigits={4} />\r\n                    <CustomDropDown label=\"\" name=\"amountType\" options={amountTypeOptions} data={data} onChange={handleChange} col={4} />\r\n                    <CustomMultiselect\r\n                        col=\"12\"\r\n                        name=\"services\"\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        options={type === 'appointment' ? filteredEvents : catalogServiceDropdown}\r\n                    />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BonusSetup;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getEvents } from '../../../../../../redux/actions/ScheduleSettings/eventsActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport { getEmployeeAppointmentPay } from '../../../../../../redux/actions/EmployeeSettings/appointmentAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport { CalendarDefaultSorting } from '../../../../../../redux/actions/EmployeeSettings/employeesAction';\r\n\r\nconst CalendarDefault = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        dispatch(getEvents());\r\n        dispatch(getEmployeeAppointmentPay(id, 'PAY'));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch]);\r\n\r\n    let { allEvents } = useSelector((state) => state.event);\r\n    let { isAppointmentLevel } = useSelector((state) => state?.employees);\r\n\r\n    const columns = [\r\n        { field: 'name', header: 'Event' },\r\n        { field: 'eventType', header: 'Event Type' },\r\n    ];\r\n\r\n    const [reorderd, setReorderd] = useState([]);\r\n    useEffect(() => {\r\n        if (allEvents) {\r\n            const filteredEvents = allEvents?.filter((item) => item?.eventLevel?.includes(isAppointmentLevel) && item.eventType === 'Appointments');\r\n\r\n            setReorderd(filteredEvents);\r\n        }\r\n    }, [isAppointmentLevel, allEvents]);\r\n\r\n    const handleRowReorder = (reorderedData) => {\r\n        setReorderd(reorderedData.value);\r\n        dispatch(\r\n            CalendarDefaultSorting(reorderedData.value, () => {\r\n                dispatch(getEvents());\r\n            }),\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"shadow-2 bg-blue-300 p-3 mb-2  text-white\">Please Click & hold the icon to drag & Sort the events</div>\r\n            <CustomTable data={reorderd} columns={columns} reorderableRows={true} onRowReorder={handleRowReorder} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CalendarDefault;\r\n","import React from 'react';\r\nimport CustomTabView from '../../../../../../shared/TabView/CustomTabView';\r\nimport PaySetup from './PaySetup';\r\nimport BonusSetup from './BonusSetup';\r\nimport CalendarDefault from './CalendarDefault';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AppointmentSetup = () => {\r\n    const tabs = [\r\n        { title: 'Pay', content: <PaySetup /> },\r\n        { title: 'Bonus', content: <BonusSetup type=\"appointment\" /> },\r\n        { title: 'Calendar Default', content: <CalendarDefault /> },\r\n    ];\r\n    let { isAppointmentLevel } = useSelector((state) => state?.employees);\r\n\r\n    return (\r\n        <>\r\n            <CustomTabView name=\"appointment\" tabs={tabs} useIndex={true} disabledTabIndices={isAppointmentLevel ? [] : [1, 2]} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppointmentSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CustomFilterCard, CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { useParams } from 'react-router-dom';\r\nimport { CustomDropDown, CustomInput, CustomInputDecimalNumber, CustomInputNumber } from '../../../../../../shared/Input/AllInputs';\r\nimport { EmployeeCommissionType, amountTypeOptions } from '../../../../../../utils/dropdownConstants';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport { confirmDelete, showFormErrors } from '../../../../../../utils/commonFunctions';\r\nimport {\r\n    addEmployeeSalesItem,\r\n    deletetEmployeeSaleItem,\r\n    editEmployeeSalesItem,\r\n    getEmployeeSaleItem,\r\n    getEmployeeSalesItem,\r\n} from '../../../../../../redux/actions/EmployeeSettings/salesCommssionAction';\r\nimport { getCommissionGroups } from '../../../../../../redux/actions/InventorySettings/commissionGroupAction';\r\nimport formValidation from '../../../../../../utils/validations';\r\n\r\nconst ItemCommission = () => {\r\n    const dispatch = useDispatch();\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeSalesItemId, setEmployeeSalesItemId] = useState(null);\r\n    const [itemCommissionData, setItemCommissionData] = useState([]);\r\n\r\n    const initialState = {\r\n        commissionGroup: '',\r\n        type: 'ITEM_COMMISSION', //ITEM_COMMISSION, BONUS\r\n        commissionType: 'PER_ITEM', //PER_SALE,PER_ITEM\r\n        amountType: 'FIXED', //PERCENTAGE,FIXED\r\n        pay: '0',\r\n        salesCode: '',\r\n    };\r\n\r\n    const [data, setData] = useState(initialState);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        funcGetEmpSalesItem(id);\r\n        dispatch(getCommissionGroups());\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const { commissionGroupsDropdown } = useSelector((state) => state?.commissionGroup);\r\n    const funcGetEmpSalesItem = (id) => {\r\n        dispatch(\r\n            getEmployeeSalesItem(id, 'ITEM_COMMISSION', setLoading, (data) => {\r\n                setItemCommissionData(data);\r\n            }),\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (employeeSalesItemId) {\r\n            dispatch(\r\n                getEmployeeSaleItem(employeeSalesItemId, setLoading, (data) => {\r\n                    setData({\r\n                        commissionGroup: data.commissionGroup,\r\n                        type: data.type,\r\n                        commissionType: data.commissionType,\r\n                        amountType: data.amountType,\r\n                        pay: data.pay,\r\n                        salesCode: data.salesCode,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [employeeSalesItemId, dispatch]);\r\n\r\n    const onClose = () => {\r\n        setEmployeeSalesItemId(null);\r\n        setData(initialState);\r\n        setVisible(false);\r\n    };\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const columns = [\r\n        { field: 'commissionGroup', header: 'Commission Group' },\r\n        { field: 'commissionType', header: 'Commission Type' },\r\n        { field: 'pay', header: 'Pay' },\r\n    ];\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deletetEmployeeSaleItem(col._id, () => {\r\n                    funcGetEmpSalesItem(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Item Commission?');\r\n    };\r\n    const onEdit = (col) => {\r\n        setEmployeeSalesItemId(col?._id);\r\n        setVisible(true);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (employeeSalesItemId) {\r\n                dispatch(\r\n                    editEmployeeSalesItem(employeeSalesItemId, { ...data }, setLoading, () => {\r\n                        funcGetEmpSalesItem(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addEmployeeSalesItem({ ...data, employee: id }, setLoading, () => {\r\n                        funcGetEmpSalesItem(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} />\r\n            <CustomTable data={itemCommissionData} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n\r\n            <CustomDialog title={employeeSalesItemId ? 'Edit' : 'Add'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"commissionGroup\" data={data} onChange={handleChange} options={commissionGroupsDropdown} optionLabel=\"name\" col={12} />\r\n                    <CustomDropDown name=\"commissionType\" data={data} onChange={handleChange} options={EmployeeCommissionType} col={12} />\r\n                    <CustomInput col={6} name=\"salesCode\" data={data} onChange={handleChange} />\r\n                    <CustomInputDecimalNumber name=\"pay\" data={data} onChange={handleChange} />\r\n                    <CustomDropDown label=\"\" name=\"amountType\" options={amountTypeOptions} data={data} onChange={handleChange} col={4} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ItemCommission;\r\n","import React from 'react';\r\nimport CustomTabView from '../../../../../../shared/TabView/CustomTabView';\r\nimport ItemCommission from './ItemCommission';\r\nimport BonusSetup from '../AppointmentSetup/BonusSetup';\r\n\r\nconst SalesCommission = () => {\r\n    const tabs = [\r\n        { title: 'Item Commission', content: <ItemCommission /> },\r\n        { title: 'Bonus', content: <BonusSetup type=\"salesCommission\" /> },\r\n    ];\r\n    return (\r\n        <>\r\n            <CustomTabView name=\"sales-commission\" tabs={tabs} useIndex={true} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SalesCommission;\r\n","import React from 'react';\r\nimport FormPage from '../../../../../shared/Layout/FormPage';\r\nimport CustomTabView from '../../../../../shared/TabView/CustomTabView';\r\nimport Security from './Security';\r\nimport General from './General';\r\nimport Clubs from './Clubs';\r\nimport Notes from './Notes';\r\nimport Certifications from './Certifications/Certifications';\r\nimport { useParams } from 'react-router-dom';\r\nimport EmployeeDepartments from './EmployeeDepartments';\r\nimport ClassesSetup from './Classes/ClassesSetup';\r\nimport AppointmentSetup from './AppointmentSetup/AppointmentSetup';\r\nimport SalesCommission from './SalesCommission/SalesCommission';\r\n\r\nconst EmployeeForm = () => {\r\n    const { id } = useParams();\r\n    const tabs = [\r\n        { title: 'Security', content: <Security /> },\r\n        { title: 'General', content: <General /> },\r\n        { title: 'Departments', content: <EmployeeDepartments /> },\r\n        { title: 'Clubs', content: <Clubs /> },\r\n        { title: 'Classes Setup', content: <ClassesSetup /> },\r\n        { title: 'Appointment Setup', content: <AppointmentSetup /> },\r\n        { title: 'Sales Commision', content: <SalesCommission /> },\r\n        { title: 'Time Sheet', content: <h1>Tab 8</h1> },\r\n        { title: 'Notes', content: <Notes /> },\r\n        {\r\n            title: 'Certifications',\r\n            content: <Certifications />,\r\n        },\r\n    ];\r\n    return (\r\n        <>\r\n            <FormPage backText=\"Manage Employees\" backTo=\"/settings/employee\">\r\n                <CustomTabView tabs={tabs} disabledTabIndices={id ? [] : [1, 2, 3, 4, 5, 6, 7, 8, 9]} scrollable={true} />\r\n            </FormPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EmployeeForm;\r\n"],"names":["getCertificates","id","setLoading","async","params","employee","res","api","EndPoints","MANAGE_EMPLOYEE_CERTIFICATES","success","data","dispatch","type","types","CHANGE_MANAGE_EMPLOYEE_CERTIFICATES","payload","addCertificates","history","tab","arguments","length","undefined","_data$certificate","certificate","durls","uploadFiles","path","certificateName","originalname","certificateSize","size","acquiredDate","moment","format","expirationDate","replace","concat","_id","goBack","showToast","severity","summary","message","getCertificate","returnData","showLoaderAction","hideLoaderAction","editCertificates","_data$certificate2","deleteCertificates","next","getEmployeeNotes","NOTES","addEmployeeNotes","Security","_allSecurityRoles","useDispatch","useParams","useHistory","loading","useState","useEffect","getJobDetails","getSecurityRoles","allSecurityRoles","useSelector","state","securityRole","map","item","name","value","getEmployee","setData","firstName","lastName","middleInitial","jobTitle","dob","Date","socialSecurity","barCode","accessCode","email","multiClubClockIn","toString","securityRoles","allJobTitle","handleChange","_ref","formErrors","formValidation","prev","handleSave","showFormErrors","editEmployee","addEmployees","_jsxs","_Fragment","children","_jsx","CustomCard","col","title","CustomGridLayout","CustomInput","required","onChange","CustomDropDown","options","index","label","optionLabel","CustomCalenderInput","CustomInputNumber","yesNoOptions","CustomPickList","selected","sourceData","onPickListChange","CustomButtonGroup","PrimaryButton","className","onClick","LightButton","dropzoneStyle","border","borderRadius","padding","textAlign","cursor","background","onDropChange","multiple","selectedImages","setSelectedImages","JSON","stringify","onDrop","useCallback","acceptedFiles","rejectedFiles","forEach","file","some","selectedFile","prevState","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useDropzone","accept","style","useMemo","borderColor","Avatar","icon","color","shape","backgroundColor","image","getImageURL","Badge","filter","_","i","removeImage","General","_data$formErrors","states","setStates","cities","setCities","getAllCountries","updatedStates","getStatesByCountry","hireDate","terminationDate","adpId","primaryPhone","workPhone","workPhoneExt","mobilePhone","faxPhone","emergencyPhone","emergencyPhoneExt","street","city","zipCode","emailNotification","onlineNickName","bio","socialMedia","alternateEmail","_data$emailNotificati","getCitiesByState","clearedData","CustomInputMask","mask","placeholder","disabled","CustomTextArea","PhotoUpload","Clubs","getClubs","clubsDropdown","clubs","reportDataAccess","Notes","user","profile","takenBy","dateTime","notes","visible","setVisible","notesData","setNotesData","funcGetNotes","columns","field","header","body","r","onClose","CustomFilterCard","buttonTitle","CustomTable","CustomDialog","width","onCancel","onSave","maxLength","inputClass","Certifications","allCertificates","certificates","linkTo","onEdit","push","onDelete","position","confirmDelete","EmployeeDepartments","departmentsDropdown","department","getDepartments","funcGetEmpDepartments","getEmployeeDepartments","setEmployeeDepartments","employeeDeptId","setEmployeeDeptId","employeeDepartments","departments","wage","filterdDepartmentsDropdown","ed","includes","e","_empDeptData","find","deleteEmployeeDepartment","editEmployeeDepartment","addEmployeeDepartment","CustomMultiselect","minFractionDigits","maxFractionDigits","getEmployeeClasses","EMPLOYEE_CLASSES","CHANGE_EMPLOYEE_CLASSES","editEmployeeClasses","_data$eachClientOver","employeeClassId","setEmployeeClassId","employeeClasses","setEmployeeClassesData","incrementalPay","getEmployeeClaases","payType","oneToFiveClients","sixToTenClients","elevenToFifteenClients","sixteenToTwentyClients","twentyOneToTwentyFiveClients","twentySixPlusClients","noRegistrationPay","countUnpaidService","payperClassPayload","payPerClassRate","PayPerClient","baseRate","payPerClientRate","eachClientOver","noOfClients","rate","maxPayPerClient","percentageRate","percentage","newData","_ref2","handleChange1","key","newList","ignore","addEmployeeClasses","classesPayTypeOptions","CustomInputDecimalNumber","CustomCheckbox","client","prefix","PaySetup","_allEmployeeClasses3","openSimilar","setOpenSimilarTo","isClassLevel","isDefaultPay","funcGetEmpClasses","getEmployees","getLevels","levelDropdown","level","uniqueId","useId","allEmployeeClasses","employees","_allEmployeeClasses","deleteEmployeeClasses","renderRow","console","log","extraClass","updateEmployeeLevel","UPDATE_CLASS_LEVEL","DataView","list","itemTemplate","findIndex","CustomInputSwitch","checked","handleSwitchChange","active","_allEmployeeClasses2","_allEmployeeClasses2$","paginator","rows","AddandEditClasses","SubstituteOptionSetup","_allEvents$filter","Substitute","setSubstitute","event","priority","substitutionOptionsId","setSubstituteOptionsId","funcGetEmpSubstitution","getEvents","allEvents","filteredEvents","_item$eventLevel","eventLevel","eventType","getEmployeeSubstitutionOptions","SUSTITITION_OPTIONS","getSubstitutionOption","deleteSubstitutionOption","editEmployeeSubstitutionOptions","addEmployeeSubstitutionOptions","substitutionPriorityOptions","ClassesSetup","tabs","content","CustomTabView","useIndex","disabledTabIndices","getEmployeeAppointmentPay","EMPLOYEE_APPOINTMENT","CHANGE_EMPLOYEE_APPOINTMENT_PAY","funcGetEmpAppointment","employeeAppartId","setEmployeeAppartId","initialState","pay","amountType","isAppointmentLevel","allAppointmentPayDropdown","editFiltered","filtered","getEmployeeAppartment","editEmployeeAppointmentPay","addEmployeeAppointmentPay","AppointmentPayPriorityOptions","amountTypeOptions","allAppointmentPay","extraClassName","updateEmployeeAppointmentPayLevel","UPDATE_APPOINTMENT_CLASS_LEVEL","deletetEmployeeAppartment","AddandEditAppointmentPay","getEmployeeSalesItem","SALES_COMMISSION","bonusType","sessionsValue","ofSessions","over","duration","bonusAmount","services","employeeAppartBonusId","setemployeeAppartBonusId","appointmentData","setAppointmentData","getCatalogItems","catalogServiceDropdown","catalogItems","getEmployeeBonus","selectTimeframe","toLowerCase","_r$services","_r$services$map","join","deleteEmployeeBonus","rest","editEmployeeBonus","addEmployeeBonus","bonusTypeConstantsOptions","durationOptions","CalendarDefault","reorderd","setReorderd","reorderableRows","onRowReorder","reorderedData","CalendarDefaultSorting","AppointmentSetup","BonusSetup","ItemCommission","employeeSalesItemId","setEmployeeSalesItemId","itemCommissionData","setItemCommissionData","commissionGroup","commissionType","salesCode","funcGetEmpSalesItem","getCommissionGroups","commissionGroupsDropdown","getEmployeeSaleItem","deletetEmployeeSaleItem","editEmployeeSalesItem","addEmployeeSalesItem","EmployeeCommissionType","SalesCommission","EmployeeForm","FormPage","backText","backTo","scrollable"],"sourceRoot":""}