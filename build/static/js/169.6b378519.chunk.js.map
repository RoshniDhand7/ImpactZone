{"version":3,"file":"static/js/169.6b378519.chunk.js","mappings":"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","sources":["redux/actions/EmployeeSettings/certificationAction.js","shared/Layout/FormPage.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Certifications/CertificationForm.jsx"],"sourcesContent":["import moment from 'moment/moment';\r\nimport api from '../../../services/api';\r\nimport EndPoints from '../../../services/endPoints';\r\nimport { types } from '../../types/types';\r\nimport { hideLoaderAction, showLoaderAction } from '../loaderAction';\r\nimport { showToast } from '../toastAction';\r\nimport { uploadFiles, uploadImages } from '../../../utils/commonFunctions';\r\n\r\nconst getCertificates = (id, setLoading) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const params = { employee: id };\r\n    const res = await api('get', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES, {}, params);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            dispatch({\r\n                type: types.CHANGE_MANAGE_EMPLOYEE_CERTIFICATES,\r\n                payload: res.data,\r\n            });\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\nconst addCertificates =\r\n    (data, setLoading, history, tab = '') =>\r\n    async (dispatch) => {\r\n        setLoading(true);\r\n        const payload = {\r\n            ...data,\r\n            acquiredDate: moment(data.acquiredDate).format('MM/DD/YYYY'),\r\n            expirationDate: moment(data.expirationDate).format('MM/DD/YYYY'),\r\n        };\r\n\r\n        const res = await api('post', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES, payload);\r\n        if (res.success) {\r\n            if (tab) {\r\n                history.replace(`/settings/employee/manage-employee/edit/${res.data._id}/${tab}`);\r\n            } else {\r\n                history.goBack();\r\n            }\r\n            dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        }\r\n        setLoading(false);\r\n    };\r\nconst getCertificate = (id, returnData) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n    const res = await api('get', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES + id);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\nconst editCertificates =\r\n    (id, data, setLoading, history, tab = '') =>\r\n    async (dispatch) => {\r\n        setLoading(true);\r\n        const payload = {\r\n            ...data,\r\n            acquiredDate: moment(data.acquiredDate).format('MM/DD/YYYY'),\r\n            expirationDate: moment(data.expirationDate).format('MM/DD/YYYY'),\r\n        };\r\n        const res = await api('put', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES + id, payload);\r\n        if (res.success) {\r\n            if (tab) {\r\n                history.replace(`/settings/employee/manage-employee/edit/${res.data._id}/${tab}`);\r\n            } else {\r\n                history.goBack();\r\n            }\r\n            dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        }\r\n        setLoading(false);\r\n    };\r\nconst deleteCertificates = (id) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES + id);\r\n    if (res.success) {\r\n        dispatch(getCertificates(() => {}));\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nconst getEmployeeNotes = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.NOTES, '', { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeNotes = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.NOTES, data);\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\nexport { getCertificates, addCertificates, editCertificates, deleteCertificates, getCertificate,getEmployeeNotes,addEmployeeNotes };\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomTransition from '../Transitions/CustomTransition';\r\n\r\nexport default function FormPage({ children, backText, backTo }) {\r\n    const history = useHistory();\r\n\r\n    const onBack = () => {\r\n        if (backTo) {\r\n            history.replace(backTo);\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    };\r\n    return (\r\n        <CustomTransition>\r\n            {backText ? (\r\n                <div className=\"flex mb-3 text-dark-gray\">\r\n                    <i className=\"pi pi-angle-left text-2xl cursor-pointer\" onClick={onBack}></i>\r\n                    <div className=\" my-auto font-semibold text-lg cursor-pointer\" onClick={onBack}>\r\n                        Back to {backText}\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            <>{children}</>\r\n        </CustomTransition>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport FormPage from '../../../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport { CustomCalenderInput, CustomInput, CustomTextArea } from '../../../../../../shared/Input/AllInputs';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../../../shared/Button/CustomButton';\r\nimport { addCertificates, editCertificates, getCertificate } from '../../../../../../redux/actions/EmployeeSettings/certificationAction';\r\n\r\nconst CertificationForm = () => {\r\n    const { id, employeeId } = useParams();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        certificationNumber: '',\r\n        issuer: '',\r\n        acquiredDate: '',\r\n        expirationDate: '',\r\n        uploadCertificate: '',\r\n        employee: '',\r\n    });\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getCertificate(id, (data) => {\r\n                    setData({\r\n                        name: data.name,\r\n                        certificationNumber: data.certificationNumber,\r\n                        issuer: data.issuer,\r\n                        acquiredDate: data.acquiredDate ? new Date() : '',\r\n                        expirationDate: data.expirationDate ? new Date() : '',\r\n                        uploadCertificate: data.uploadCertificate ? [data.uploadCertificate] : [],\r\n                        description: data.description,\r\n                        employee: employeeId,\r\n                    });\r\n                }),\r\n            );\r\n        } else {\r\n            setData({ ...data, employee: employeeId });\r\n        }\r\n    }, [id, dispatch]);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const handleChange = ({ name, value }) => {\r\n        setData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n    const handleSave = () => {\r\n        if (id) {\r\n            dispatch(editCertificates(id, data, setLoading, history));\r\n        } else {\r\n            dispatch(addCertificates(data, setLoading, history));\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <FormPage backText=\"Certifications\">\r\n                <CustomCard col=\"12\" title=\"Personal\">\r\n                    <CustomGridLayout>\r\n                        <CustomInput name=\"name\" data={data} onChange={handleChange} />\r\n                        <CustomInput name=\"certificationNumber\" data={data} onChange={handleChange} />\r\n                        <CustomInput name=\"issuer\" data={data} onChange={handleChange} />\r\n                        <CustomCalenderInput name=\"acquiredDate\" data={data} onChange={handleChange} />\r\n                        <CustomCalenderInput name=\"expirationDate\" data={data} onChange={handleChange} />\r\n                        <CustomTextArea name=\"description\" data={data} onChange={handleChange} />\r\n                    </CustomGridLayout>\r\n                </CustomCard>\r\n                <CustomButtonGroup>\r\n                    <PrimaryButton label=\"Save\" className=\"mx-2\" loading={loading} onClick={handleSave} />\r\n                    <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/employee')} />\r\n                </CustomButtonGroup>\r\n            </FormPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CertificationForm;\r\n"],"names":["getCertificates","id","setLoading","async","params","employee","res","api","EndPoints","MANAGE_EMPLOYEE_CERTIFICATES","success","data","dispatch","type","types","CHANGE_MANAGE_EMPLOYEE_CERTIFICATES","payload","addCertificates","history","tab","arguments","length","undefined","acquiredDate","moment","format","expirationDate","replace","concat","_id","goBack","showToast","severity","summary","message","getCertificate","returnData","showLoaderAction","hideLoaderAction","editCertificates","deleteCertificates","getEmployeeNotes","NOTES","addEmployeeNotes","next","FormPage","_ref","children","backText","backTo","useHistory","onBack","_jsxs","CustomTransition","className","_jsx","onClick","_Fragment","CertificationForm","employeeId","useParams","useDispatch","setData","useState","name","certificationNumber","issuer","uploadCertificate","useEffect","Date","description","loading","handleChange","value","prev","CustomCard","col","title","CustomGridLayout","CustomInput","onChange","CustomCalenderInput","CustomTextArea","CustomButtonGroup","PrimaryButton","label","handleSave","LightButton"],"sourceRoot":""}