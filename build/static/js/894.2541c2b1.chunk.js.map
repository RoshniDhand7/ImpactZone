{"version":3,"file":"static/js/894.2541c2b1.chunk.js","mappings":"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","sources":["views/Settings/Inventory/CatalogItems/AddServices.jsx","views/Settings/MembersSetup/MembershipTypes/MembershipTypeForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CustomCard, { CustomFilterCard1, CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport { confirmDelete } from '../../../../utils/commonFunctions';\r\nimport CustomDialog from '../../../../shared/Overlays/CustomDialog';\r\nimport CustomTable from '../../../../shared/Table/CustomTable';\r\nimport PrimaryButton from '../../../../shared/Button/CustomButton';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCatalogItems } from '../../../../redux/actions/InventorySettings/catalogItemsAction';\r\n\r\nconst AddServices = ({ data, setData, id, loading }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getCatalogItems());\r\n    }, [dispatch]);\r\n    useEffect(() => {\r\n        if (id) {\r\n            if (open) {\r\n                setSelected(data?.services);\r\n            }\r\n        }\r\n    }, [data?.services, open, id]);\r\n\r\n    const { catalogServiceFilterItems } = useSelector((state) => state.catalogItems);\r\n\r\n    const columns = [\r\n        { selectionMode: 'multiple', headerStyle: '' },\r\n        { field: 'name', header: 'Item Name' },\r\n        { field: 'upc', header: 'Item UPC' },\r\n        { field: 'unitPrice', header: 'Price' },\r\n    ];\r\n\r\n    const columns1 = [\r\n        { field: 'name', header: 'Item Name' },\r\n        { field: 'upc', header: 'Item UPC' },\r\n        { field: 'unitPrice', header: 'Price' },\r\n    ];\r\n\r\n    const handleServiceDelete = (col) => {\r\n        confirmDelete(\r\n            () => {\r\n                setData((prev) => ({ ...prev, services: data?.services?.filter((item) => item._id !== col?._id) }));\r\n            },\r\n            `Do you want to delete this Service ?`,\r\n            'center',\r\n        );\r\n    };\r\n\r\n    const handleSave = () => {\r\n        setData((prev) => ({ ...prev, services: selected }));\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\" Add Services\">\r\n                <CustomFilterCard1 buttonTitle=\"Add\" onClick={() => setOpen(true)} extraClass=\"justify-content-end gap-2\">\r\n                    <div>\r\n                        <PrimaryButton\r\n                            label={'Remove All'}\r\n                            onClick={() => {\r\n                                setData((prev) => ({ ...prev, services: [] }));\r\n                                setSelected([]);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </CustomFilterCard1>\r\n                <CustomTable data={data?.services} columns={columns1} showSelectionElement={false} onDelete={handleServiceDelete} />\r\n            </CustomCard>\r\n            <CustomDialog\r\n                title={'Add Services'}\r\n                visible={open}\r\n                onCancel={() => {\r\n                    setOpen('');\r\n                }}\r\n                loading={loading}\r\n                onSave={handleSave}\r\n                width=\"auto\"\r\n            >\r\n                <CustomGridLayout>\r\n                    {open && (\r\n                        <CustomTable\r\n                            convertToboolean={false}\r\n                            data={open && catalogServiceFilterItems}\r\n                            columns={columns}\r\n                            selectedRow={selected}\r\n                            setSelectedRow={setSelected}\r\n                        />\r\n                    )}\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddServices;\r\n","import React, { useEffect, useState } from 'react';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport { CustomDropDown, CustomInput, CustomInputNumber, CustomInputSwitch } from '../../../../shared/Input/AllInputs';\r\nimport formValidation from '../../../../utils/validations';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SpecialRestrictionOptions, defaultDiscountOptions, yesNoOptions } from '../../../../utils/dropdownConstants';\r\nimport CustomPickList from '../../../../shared/Input/CustomPickList';\r\nimport { getClubs } from '../../../../redux/actions/BusinessSettings/clubsAction';\r\nimport { getIds, showFormErrors } from '../../../../utils/commonFunctions';\r\nimport { getAccessSchedules } from '../../../../redux/actions/MembersSettings/accessSchedule';\r\nimport { addMembershipType, editMembershipType, getMembershipType } from '../../../../redux/actions/MembersSettings/membershipTypes';\r\nimport AddServices from '../../Inventory/CatalogItems/AddServices';\r\n\r\nconst MembershipTypeForm = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        dispatch(getClubs());\r\n        dispatch(getAccessSchedules());\r\n    }, [dispatch]);\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        description: '',\r\n        discountType: 'None',\r\n        accessRestriction: 'false',\r\n        accessSchedule: null,\r\n        remotecheckin: '',\r\n        transferToAnotherType: null,\r\n        clubCreditAmount: '',\r\n        specialRestriction: '',\r\n        minimumAgeAllowed: 0,\r\n        maximumAgeAllowed: 0,\r\n        maximumDaysAllowed: 0,\r\n        maximumDistanceAllowed: 0,\r\n        club: [],\r\n        services: [],\r\n        isActive: true,\r\n    });\r\n\r\n    const { AccessScheduleDropdown } = useSelector((state) => state.accessSchedule);\r\n    let { MembershipTypesDropdown } = useSelector((state) => state.membershipTypes);\r\n    MembershipTypesDropdown = MembershipTypesDropdown?.filter((item) => item.name !== data?.name);\r\n\r\n    let { clubsDropdown } = useSelector((state) => state.clubs);\r\n    const history = useHistory();\r\n\r\n    const { loading } = useSelector((state) => state?.loader?.isLoading);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getMembershipType(id, (data) => {\r\n                    setData({\r\n                        name: data.name,\r\n                        description: data.description,\r\n                        discountType: data.discountType,\r\n                        accessRestriction: data.accessRestriction,\r\n                        accessSchedule: data.accessSchedule,\r\n                        remotecheckin: data.remotecheckin,\r\n                        transferToAnotherType: data.transferToAnotherType,\r\n                        clubCreditAmount: data.clubCreditAmount,\r\n                        specialRestriction: data.specialRestriction,\r\n                        minimumAgeAllowed: data.minimumAgeAllowed,\r\n                        maximumAgeAllowed: data.maximumAgeAllowed,\r\n                        maximumDaysAllowed: data.maximumDaysAllowed,\r\n                        maximumDistanceAllowed: data.maximumDistanceAllowed,\r\n                        club: data.club,\r\n                        services: data.services,\r\n                        isActive: true,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const discountTypeOptions = defaultDiscountOptions;\r\n\r\n    const onSave = () => {\r\n        let ignore = [];\r\n        switch (data?.specialRestriction) {\r\n            case 'By Age':\r\n                ignore = ['maximumDaysAllowed', 'maximumDistanceAllowed', 'services'];\r\n                break;\r\n            case 'By Location':\r\n                ignore = ['minimumAgeAllowed', 'maximumAgeAllowed', 'maximumDaysAllowed', 'services'];\r\n                break;\r\n            case 'By Days':\r\n                ignore = ['maximumAgeAllowed', 'minimumAgeAllowed', 'maximumDistanceAllowed', 'services'];\r\n                break;\r\n            default:\r\n                ignore = ['maximumDaysAllowed', 'maximumDistanceAllowed', 'minimumAgeAllowed', 'maximumAgeAllowed', 'services'];\r\n                break;\r\n        }\r\n        if (showFormErrors(data, setData, ignore)) {\r\n            if (id) {\r\n                dispatch(editMembershipType(id, { ...data, services: getIds(data.services) }, history));\r\n            } else {\r\n                dispatch(addMembershipType({ ...data, services: getIds(data.services) }, () => history.goBack()));\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <FormPage backText=\"Membership Types\">\r\n                <CustomCard col=\"12\" title=\"General\">\r\n                    <CustomInputSwitch name=\"isActive\" data={data} onChange={handleChange} />\r\n                    <CustomGridLayout>\r\n                        <CustomInput name=\"name\" data={data} onChange={handleChange} required />\r\n                        <CustomInput name=\"description\" data={data} onChange={handleChange} />\r\n                        <CustomDropDown name=\"discountType\" options={discountTypeOptions} onChange={handleChange} data={data} />\r\n                        <CustomDropDown name=\"accessRestriction\" options={yesNoOptions} onChange={handleChange} data={data} />\r\n                        {data?.accessRestriction === 'true' && (\r\n                            <CustomDropDown name=\"accessSchedule\" options={AccessScheduleDropdown} onChange={handleChange} data={data} />\r\n                        )}\r\n                        <CustomDropDown name=\"remotecheckin\" options={yesNoOptions} onChange={handleChange} data={data} />\r\n                        <CustomDropDown name=\"transferToAnotherType\" options={MembershipTypesDropdown} onChange={handleChange} data={data} />\r\n                        <CustomInputNumber prefix=\"$\" name=\"clubCreditAmount\" data={data} onChange={handleChange} col=\"4\" />\r\n                        <CustomDropDown name=\"specialRestriction\" options={SpecialRestrictionOptions} onChange={handleChange} data={data} />\r\n                        {data?.specialRestriction === 'By Age' && (\r\n                            <>\r\n                                <CustomInputNumber name=\"minimumAgeAllowed\" data={data} onChange={handleChange} col=\"4\" />\r\n                                <CustomInputNumber name=\"maximumAgeAllowed\" data={data} onChange={handleChange} col=\"4\" />\r\n                            </>\r\n                        )}\r\n                        {data?.specialRestriction === 'By Location' && (\r\n                            <>\r\n                                <CustomInputNumber name=\"maximumDistanceAllowed\" data={data} onChange={handleChange} col=\"4\" />\r\n                            </>\r\n                        )}\r\n                        {data?.specialRestriction === 'By Days' && (\r\n                            <>\r\n                                <CustomInputNumber name=\"maximumDaysAllowed\" data={data} onChange={handleChange} col=\"4\" />\r\n                            </>\r\n                        )}\r\n                    </CustomGridLayout>\r\n                </CustomCard>\r\n                <CustomCard col=\"12\" title=\" Clubs\">\r\n                    <CustomPickList name=\"club\" selected={data?.club} sourceData={clubsDropdown} onPickListChange={handleChange} />\r\n                </CustomCard>\r\n                <AddServices data={data} setData={setData} id={id} loading={loading} />\r\n                <CustomButtonGroup>\r\n                    <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={onSave} loading={loading} />\r\n                    <LightButton label=\"Cancel\" onClick={() => history.goBack()} />\r\n                </CustomButtonGroup>\r\n            </FormPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MembershipTypeForm;\r\n"],"names":["_ref","data","setData","id","loading","open","setOpen","useState","selected","setSelected","dispatch","useDispatch","useEffect","getCatalogItems","services","catalogServiceFilterItems","useSelector","state","catalogItems","_jsxs","_Fragment","children","CustomCard","col","title","_jsx","CustomFilterCard1","buttonTitle","onClick","extraClass","PrimaryButton","label","prev","CustomTable","columns","field","header","showSelectionElement","onDelete","confirmDelete","_data$services","filter","item","_id","CustomDialog","visible","onCancel","onSave","handleSave","width","CustomGridLayout","convertToboolean","selectionMode","headerStyle","selectedRow","setSelectedRow","MembershipTypeForm","_MembershipTypesDropd","useParams","getClubs","getAccessSchedules","name","description","discountType","accessRestriction","accessSchedule","remotecheckin","transferToAnotherType","clubCreditAmount","specialRestriction","minimumAgeAllowed","maximumAgeAllowed","maximumDaysAllowed","maximumDistanceAllowed","club","isActive","AccessScheduleDropdown","MembershipTypesDropdown","membershipTypes","clubsDropdown","clubs","history","useHistory","_state$loader","loader","isLoading","getMembershipType","handleChange","value","formErrors","formValidation","discountTypeOptions","defaultDiscountOptions","FormPage","backText","CustomInputSwitch","onChange","CustomInput","required","CustomDropDown","options","yesNoOptions","CustomInputNumber","prefix","SpecialRestrictionOptions","CustomPickList","sourceData","onPickListChange","AddServices","CustomButtonGroup","className","ignore","showFormErrors","editMembershipType","getIds","addMembershipType","goBack","LightButton"],"sourceRoot":""}