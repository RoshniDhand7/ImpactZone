{"version":3,"file":"static/js/293.d8ee2c35.chunk.js","mappings":"gQAUA,MA8CA,EA9C0BA,IAAkB,IAAjB,QAAEC,GAASD,EAClC,MAAME,GAAWC,EAAAA,EAAAA,OACVC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,CAC7BC,KAAM,MAEVC,EAAAA,EAAAA,YAAU,KACNN,GAASO,EAAAA,EAAAA,KAAmB,GAC7B,CAACP,IACJ,IAAI,QAAEQ,IAAYC,EAAAA,EAAAA,KAAaC,IAAK,IAAAC,EAAA,OAAU,OAALD,QAAK,IAALA,GAAe,QAAVC,EAALD,EAAOE,gBAAQ,IAAAD,OAAV,EAALA,EAAiBE,QAAQ,KAElEP,EAAAA,EAAAA,YAAU,KACFE,GACAL,EAAQ,CACJE,KAAa,OAAPG,QAAO,IAAPA,GAAAA,EAASH,KAAO,CAAQ,OAAPG,QAAO,IAAPA,OAAO,EAAPA,EAASH,MAAQ,IAEhD,GAED,IAEH,MAAOS,EAASC,IAAcX,EAAAA,EAAAA,WAAS,GAYvC,OACIY,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAACC,SAAS,gBAAeH,SAAA,EAC9BF,EAAAA,EAAAA,KAACM,EAAAA,GAAU,CAACC,IAAI,KAAKC,MAAM,gBAAeN,UACtCF,EAAAA,EAAAA,KAACS,EAAAA,EAAe,CAACC,KAAK,OAAOxB,KAAMA,EAAMyB,YAAU,EAACC,cAd/CC,IAAsB,IAArB,KAAEH,EAAI,MAAEI,GAAOD,EACjC,MAAME,GAAaC,EAAAA,EAAAA,GAAeN,EAAMI,EAAO5B,GAC/CC,GAAS8B,IAAI,IAAWA,EAAM,CAACP,GAAOI,EAAOC,gBAAc,OAcnDZ,EAAAA,EAAAA,MAACe,EAAAA,GAAiB,CAAAhB,SAAA,EACdF,EAAAA,EAAAA,KAACmB,EAAAA,GAAa,CAACC,MAAM,OAAOC,UAAU,OAAOC,QAb1CC,MACXC,EAAAA,EAAAA,IAAetC,EAAMC,IACrBH,GAASyC,EAAAA,EAAAA,GAAYjC,EAAQkC,IAAKxC,EAAMa,EAAYhB,GACxD,EAU8Ee,QAASA,KAC3EE,EAAAA,EAAAA,KAAC2B,EAAAA,GAAW,CAACP,MAAM,SAASE,QAASA,IAAMvC,EAAQ6C,QAAQ,mDAGpE,C","sources":["views/Settings/Business/Customization/CustomizationForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard from '../../../../shared/Cards/CustomCard';\r\nimport CustomLogoImage from '../../../../shared/Image/LogoImage';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport formValidation from '../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../utils/commonFunctions';\r\nimport { editCompany, getCompanyDetail } from '../../../../redux/actions/Settings/Business/companyActions';\r\n\r\nconst CustomizationForm = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const [data, setData] = useState({\r\n        logo: [],\r\n    });\r\n    useEffect(() => {\r\n        dispatch(getCompanyDetail());\r\n    }, [dispatch]);\r\n    let { company } = useSelector((state) => state?.settings?.business);\r\n\r\n    useEffect(() => {\r\n        if (company) {\r\n            setData({\r\n                logo: company?.logo ? [company?.logo] : [],\r\n            });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            dispatch(editCompany(company._id, data, setLoading, history));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FormPage backText=\"Customization\">\r\n                <CustomCard col=\"12\" title=\"Customization\">\r\n                    <CustomLogoImage name=\"logo\" data={data} removeable onFilesChange={handleChange} />\r\n                </CustomCard>\r\n                <CustomButtonGroup>\r\n                    <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={handleSave} loading={loading} />\r\n                    <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/business/?tab=customization/')} />\r\n                </CustomButtonGroup>\r\n            </FormPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CustomizationForm;\r\n"],"names":["_ref","history","dispatch","useDispatch","data","setData","useState","logo","useEffect","getCompanyDetail","company","useSelector","state","_state$settings","settings","business","loading","setLoading","_jsx","_Fragment","children","_jsxs","FormPage","backText","CustomCard","col","title","CustomLogoImage","name","removeable","onFilesChange","_ref2","value","formErrors","formValidation","prev","CustomButtonGroup","PrimaryButton","label","className","onClick","handleSave","showFormErrors","editCompany","_id","LightButton","replace"],"sourceRoot":""}