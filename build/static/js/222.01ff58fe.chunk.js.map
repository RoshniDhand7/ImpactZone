{"version":3,"file":"static/js/222.01ff58fe.chunk.js","mappings":"qLAIe,SAASA,EAAQC,GAAkC,IAAjC,SAAEC,EAAQ,SAAEC,EAAQ,OAAEC,GAAQH,EAC3D,MAAMI,GAAUC,EAAAA,EAAAA,MAEVC,EAASA,KACPH,EACAC,EAAQG,QAAQJ,GAEhBC,EAAQI,QACZ,EAEJ,OACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAgB,CAAAT,SAAA,CACZC,GACGO,EAAAA,EAAAA,MAAA,OAAKE,UAAU,2BAA0BV,SAAA,EACrCW,EAAAA,EAAAA,KAAA,KAAGD,UAAU,2CAA2CE,QAASP,KACjEG,EAAAA,EAAAA,MAAA,OAAKE,UAAU,gDAAgDE,QAASP,EAAOL,SAAA,CAAC,WACnEC,QAGjB,MACJU,EAAAA,EAAAA,KAAAE,EAAAA,SAAA,CAAAb,SAAGA,MAGf,C,2GC3BO,MAAMc,EAAe,CACxB,CACIC,KAAM,MACNC,MAAO,QAEX,CACID,KAAM,KACNC,MAAO,UAIFC,EAAoB,CAC7B,CACIF,KAAM,IACNC,MAAO,SAEX,CACID,KAAM,IACNC,MAAO,eAGFE,EAA0B,CAAC,WAAY,WAAY,aAAaC,KAAKJ,IAAI,CAAQA,OAAMC,MAAOD,MAE9FK,EAAsB,CAC/B,CACIL,KAAM,WACNC,MAAO,aAIf,IAAK,IAAIK,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC1B,MAAMC,EAAS,CACXP,KAAK,GAADQ,OAAKF,GACTL,MAAM,GAADO,OAAKF,IAEdD,EAAoBI,KAAKF,EAC7B,CACO,MAAMG,EAAa,CACtB,CACIV,KAAM,gBACNC,MAAO,iBAEX,CACID,KAAM,kBACNC,MAAO,mBAEX,CACID,KAAM,kBACNC,MAAO,mBAEX,CACID,KAAM,yBACNC,MAAO,0BAEX,CACID,KAAM,yBACNC,MAAO,0BAEX,CACID,KAAM,iBACNC,MAAO,kBAEX,CACID,KAAM,gBACNC,MAAO,kBAIFU,EAAqB,CAC9B,CACIX,KAAM,OACNC,MAAO,QAEX,CACID,KAAM,UACNC,MAAO,YAIFW,EAAc,GAE3B,IAAK,IAAIN,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC1B,MAAMC,EAAS,CACXP,KAAK,GAADQ,OAAKF,EAAC,SACVL,MAAM,GAADO,OAAKF,EAAC,UAEfM,EAAYH,KAAKF,EACrB,CAEO,MAAMM,EAAe,GAE5B,IAAK,IAAIP,EAAI,GAAIA,GAAK,GAAIA,GAAK,GAAI,CAC/B,MAAMC,EAAS,CACXP,KAAK,GAADQ,OAAKF,EAAC,UACVL,MAAM,GAADO,OAAKF,EAAC,WAEfO,EAAaJ,KAAKF,EACtB,CAEO,MAAMO,EAAwB,CACjC,iBACA,iCACA,mBACA,eACA,sBACA,oBACA,eACA,mBACA,UACA,OACA,aACFV,KAAKJ,IAAI,CAAQA,OAAMC,MAAOD,K,6LCjGhC,MAuEA,EAvEsBe,KAClB,MAAM3B,GAAUC,EAAAA,EAAAA,OACV,GAAE2B,IAAOC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,OACVC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IACvCC,EAAAA,EAAAA,YAAU,KACNL,GAASM,EAAAA,EAAAA,OACTN,GAASO,EAAAA,EAAAA,MAAe,GACzB,CAACP,IACJ,MAAM,iBAAEQ,IAAqBC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,aACpD,qBAAEC,IAAyBH,EAAAA,EAAAA,KAAaC,GAAUA,EAAMG,gBAC9DR,EAAAA,EAAAA,YAAU,KACFP,GACAE,GACIc,EAAAA,EAAAA,IAAYhB,GAAKiB,IACbC,EAAQ,CACJlC,KAAMiC,EAAKjC,KACX+B,aAAcE,EAAKF,aACnBI,SAAUF,EAAKE,SACfC,kBAAmBH,EAAKG,kBACxBC,aAAcJ,EAAKI,aACnBC,QAASL,EAAKK,QACdC,SAAUN,EAAKM,UACjB,IAGd,GACD,CAACvB,EAAIE,IACR,MAAOe,EAAMC,IAAWZ,EAAAA,EAAAA,UAAS,CAC7BtB,KAAM,GACN+B,aAAc,GACdI,SAAU,GACVC,kBAAmB,GACnBC,aAAc,GACdC,QAAS,GACTC,UAAU,IAERC,EAAexD,IAAsB,IAArB,KAAEgB,EAAI,MAAEC,GAAOjB,EACjC,MAAMyD,GAAaC,EAAAA,EAAAA,GAAe1C,EAAMC,EAAOgC,GAC/CC,GAASS,IAAI,IAAWA,EAAM,CAAC3C,GAAOC,EAAOwC,gBAAc,EAW/D,OACIhD,EAAAA,EAAAA,MAACV,EAAAA,EAAQ,CAACG,SAAS,YAAWD,SAAA,EAC1BW,EAAAA,EAAAA,KAACgD,EAAAA,GAAU,CAACC,IAAI,KAAKC,MAAM,WAAU7D,UACjCQ,EAAAA,EAAAA,MAACsD,EAAAA,GAAgB,CAAA9D,SAAA,EACbW,EAAAA,EAAAA,KAACoD,EAAAA,GAAW,CAAChD,KAAK,OAAOiC,KAAMA,EAAMgB,SAAUT,EAAcU,UAAQ,KACrEtD,EAAAA,EAAAA,KAACuD,EAAAA,GAAc,CAACnD,KAAK,eAAeoD,QAAStB,EAAsBG,KAAMA,EAAMgB,SAAUT,EAAcU,UAAQ,KAC/GtD,EAAAA,EAAAA,KAACuD,EAAAA,GAAc,CAACnD,KAAK,WAAWoD,QAAS1B,EAAkBO,KAAMA,EAAMgB,SAAUT,EAAcU,UAAQ,KACvGtD,EAAAA,EAAAA,KAACoD,EAAAA,GAAW,CAAChD,KAAK,oBAAoBiC,KAAMA,EAAMgB,SAAUT,KAC5D5C,EAAAA,EAAAA,KAACoD,EAAAA,GAAW,CAAChD,KAAK,eAAeiC,KAAMA,EAAMgB,SAAUT,KACvD5C,EAAAA,EAAAA,KAACuD,EAAAA,GAAc,CAACnD,KAAK,UAAUoD,QAASvC,EAAAA,GAAcoB,KAAMA,EAAMgB,SAAUT,EAAcU,UAAQ,KAClGtD,EAAAA,EAAAA,KAACyD,EAAAA,GAAiB,CAACrD,KAAK,WAAWiC,KAAMA,EAAMgB,SAAUT,UAGjE/C,EAAAA,EAAAA,MAAC6D,EAAAA,GAAiB,CAAArE,SAAA,EACdW,EAAAA,EAAAA,KAAC2D,EAAAA,GAAa,CAACC,MAAM,OAAO7D,UAAU,OAAOE,QAvBtC4D,MACXC,EAAAA,EAAAA,IAAezB,EAAMC,IAEjBhB,EADAF,GACS2C,EAAAA,EAAAA,IAAa3C,EAAIiB,EAAMZ,EAAYjC,IAEnCwE,EAAAA,EAAAA,IAAY3B,EAAMZ,EAAYjC,GAE/C,EAgB0EgC,QAASA,KAC3ExB,EAAAA,EAAAA,KAACiE,EAAAA,GAAW,CAACL,MAAM,SAAS3D,QAASA,IAAMT,EAAQI,gBAEhD,C","sources":["shared/Layout/FormPage.jsx","utils/dropdownConstants.js","views/Settings/MembersSetup/Resources/ResourcesForm.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomTransition from '../Transitions/CustomTransition';\r\n\r\nexport default function FormPage({ children, backText, backTo }) {\r\n    const history = useHistory();\r\n\r\n    const onBack = () => {\r\n        if (backTo) {\r\n            history.replace(backTo);\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    };\r\n    return (\r\n        <CustomTransition>\r\n            {backText ? (\r\n                <div className=\"flex mb-3 text-dark-gray\">\r\n                    <i className=\"pi pi-angle-left text-2xl cursor-pointer\" onClick={onBack}></i>\r\n                    <div className=\" my-auto font-semibold text-lg cursor-pointer\" onClick={onBack}>\r\n                        Back to {backText}\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            <>{children}</>\r\n        </CustomTransition>\r\n    );\r\n}\r\n","export const yesNoOptions = [\r\n    {\r\n        name: 'Yes',\r\n        value: 'true',\r\n    },\r\n    {\r\n        name: 'No',\r\n        value: 'false',\r\n    },\r\n];\r\n\r\nexport const amountTypeOptions = [\r\n    {\r\n        name: '$',\r\n        value: 'FIXED',\r\n    },\r\n    {\r\n        name: '%',\r\n        value: 'PERCENTAGE',\r\n    },\r\n];\r\nexport const CommissionGpTypeOptions = ['Products', 'Services', 'Agreement'].map((name) => ({ name, value: name }));\r\n\r\nexport const checkInLimitOptions = [\r\n    {\r\n        name: 'No Limit',\r\n        value: 'No Limit',\r\n    },\r\n];\r\n\r\nfor (let i = 1; i <= 50; i++) {\r\n    const option = {\r\n        name: `${i}`,\r\n        value: `${i}`,\r\n    };\r\n    checkInLimitOptions.push(option);\r\n}\r\nexport const perOptions = [\r\n    {\r\n        name: 'Week (7 days)',\r\n        value: 'Week (7 Days)',\r\n    },\r\n    {\r\n        name: 'Month (30 days)',\r\n        value: 'Month (30 days)',\r\n    },\r\n    {\r\n        name: 'Year (365 days)',\r\n        value: 'Year (365 days)',\r\n    },\r\n    {\r\n        name: 'Calendar Week (sunday)',\r\n        value: 'Calendar Week (sunday)',\r\n    },\r\n    {\r\n        name: 'Calendar Week (monday)',\r\n        value: 'Calendar Week (monday)',\r\n    },\r\n    {\r\n        name: 'Calendar Month',\r\n        value: 'Calendar Month',\r\n    },\r\n    {\r\n        name: 'Calendar Year',\r\n        value: 'Calendar Year',\r\n    },\r\n];\r\n\r\nexport const restrictionOptions = [\r\n    {\r\n        name: 'Club',\r\n        value: 'Club',\r\n    },\r\n    {\r\n        name: 'Company',\r\n        value: 'Company',\r\n    },\r\n];\r\n\r\nexport const daysOptions = [];\r\n\r\nfor (let i = 1; i <= 30; i++) {\r\n    const option = {\r\n        name: `${i} days`,\r\n        value: `${i} days`,\r\n    };\r\n    daysOptions.push(option);\r\n}\r\n\r\nexport const hoursOptions = [];\r\n\r\nfor (let i = 12; i <= 72; i += 12) {\r\n    const option = {\r\n        name: `${i} hours`,\r\n        value: `${i} hours`,\r\n    };\r\n    hoursOptions.push(option);\r\n}\r\n\r\nexport const reasonCodeTypeOptions = [\r\n    'Agreement Hold',\r\n    'Cancel Pending POS Transaction',\r\n    'Cancel Agreement',\r\n    'Cancel Price',\r\n    'Commission Override',\r\n    'Drawer Adjustment',\r\n    'Event Status',\r\n    'Freeze Agreement',\r\n    'No Sale',\r\n    'Void',\r\n    'Waive Tax',\r\n].map((name) => ({ name, value: name }));\r\n\r\n// export const reasonCodeTypeOptions = [\r\n//     {\r\n//         name: 'Agreement Hold',\r\n//         value: 'Agreement Hold',\r\n//     },\r\n//     {\r\n//         name: 'Cancel Pending POS Transaction',\r\n//         value: 'Cancel Pending POS Transaction',\r\n//     },\r\n//     {\r\n//         name: 'Cancel Agreement',\r\n//         value: 'Cancel Agreement',\r\n//     },\r\n//     {\r\n//         name: 'Cancel Price',\r\n//         value: 'Cancel Price',\r\n//     },\r\n//     {\r\n//         name: 'Commission Override',\r\n//         value: 'Commission Override',\r\n//     },\r\n//     {\r\n//         name: 'Drawer Adjustment',\r\n//         value: 'Drawer Adjustment',\r\n//     },\r\n//     {\r\n//         name: 'Event Status',\r\n//         value: 'Event Status',\r\n//     },\r\n//     {\r\n//         name: 'Freeze Agreement',\r\n//         value: 'Freeze Agreement',\r\n//     },\r\n//     {\r\n//         name: 'No Sale',\r\n//         value: 'No Sale',\r\n//     },\r\n//     {\r\n//         name: 'Void',\r\n//         value: 'Void',\r\n//     },\r\n//     {\r\n//         name: 'Waive Tax',\r\n//         value: 'Waive Tax',\r\n//     },\r\n// ];\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CustomDropDown, CustomInput, CustomInputSwitch, CustomTextArea } from '../../../../shared/Input/AllInputs';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport formValidation from '../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../utils/commonFunctions';\r\nimport { getResourceTypes } from '../../../../redux/actions/MembersSettings/resourceType';\r\nimport { addResource, editResource, getResource } from '../../../../redux/actions/MembersSettings/resources';\r\nimport { getLocations } from '../../../../redux/actions/ScheduleSettings/locationsActions';\r\nimport { hoursOptions } from '../../../../utils/dropdownConstants';\r\n\r\nconst ResourcesForm = () => {\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        dispatch(getResourceTypes());\r\n        dispatch(getLocations());\r\n    }, [dispatch]);\r\n    const { locationDropdown } = useSelector((state) => state.locations);\r\n    const { resourceTypeDropdown } = useSelector((state) => state.resourceType);\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getResource(id, (data) => {\r\n                    setData({\r\n                        name: data.name,\r\n                        resourceType: data.resourceType,\r\n                        location: data.location,\r\n                        availableQuantity: data.availableQuantity,\r\n                        usedInEvents: data.usedInEvents,\r\n                        pastDue: data.pastDue,\r\n                        isActive: data.isActive,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        resourceType: '',\r\n        location: '',\r\n        availableQuantity: '',\r\n        usedInEvents: '',\r\n        pastDue: '',\r\n        isActive: false,\r\n    });\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (id) {\r\n                dispatch(editResource(id, data, setLoading, history));\r\n            } else {\r\n                dispatch(addResource(data, setLoading, history));\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <FormPage backText=\"Resources\">\r\n            <CustomCard col=\"12\" title=\"Resource\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"name\" data={data} onChange={handleChange} required />\r\n                    <CustomDropDown name=\"resourceType\" options={resourceTypeDropdown} data={data} onChange={handleChange} required />\r\n                    <CustomDropDown name=\"location\" options={locationDropdown} data={data} onChange={handleChange} required />\r\n                    <CustomInput name=\"availableQuantity\" data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"usedInEvents\" data={data} onChange={handleChange} />\r\n                    <CustomDropDown name=\"pastDue\" options={hoursOptions} data={data} onChange={handleChange} required />\r\n                    <CustomInputSwitch name=\"isActive\" data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={handleSave} loading={loading} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.goBack()} />\r\n            </CustomButtonGroup>\r\n        </FormPage>\r\n    );\r\n};\r\n\r\nexport default ResourcesForm;\r\n"],"names":["FormPage","_ref","children","backText","backTo","history","useHistory","onBack","replace","goBack","_jsxs","CustomTransition","className","_jsx","onClick","_Fragment","yesNoOptions","name","value","amountTypeOptions","CommissionGpTypeOptions","map","checkInLimitOptions","i","option","concat","push","perOptions","restrictionOptions","daysOptions","hoursOptions","reasonCodeTypeOptions","ResourcesForm","id","useParams","dispatch","useDispatch","loading","setLoading","useState","useEffect","getResourceTypes","getLocations","locationDropdown","useSelector","state","locations","resourceTypeDropdown","resourceType","getResource","data","setData","location","availableQuantity","usedInEvents","pastDue","isActive","handleChange","formErrors","formValidation","prev","CustomCard","col","title","CustomGridLayout","CustomInput","onChange","required","CustomDropDown","options","CustomInputSwitch","CustomButtonGroup","PrimaryButton","label","handleSave","showFormErrors","editResource","addResource","LightButton"],"sourceRoot":""}