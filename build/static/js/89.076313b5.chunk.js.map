{"version":3,"file":"static/js/89.076313b5.chunk.js","mappings":"uQAWA,MAkDA,EAlDkBA,KACd,MAAMC,GAAUC,EAAAA,EAAAA,OACV,GAAEC,IAAOC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,OACVC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IACvCC,EAAAA,EAAAA,YAAU,KACFP,GACAE,GACIM,EAAAA,EAAAA,IAASR,GAAKS,IACVC,EAAQ,CACJC,KAAMF,EAAKE,KACXC,SAAUH,EAAKG,UACjB,IAGd,GACD,CAACZ,EAAIE,IACR,MAAOO,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,CAC7BK,KAAM,GACNC,UAAU,IAERC,EAAeC,IAAsB,IAArB,KAAEH,EAAI,MAAEI,GAAOD,EACjC,MAAME,GAAaC,EAAAA,EAAAA,GAAeN,EAAMI,EAAON,GAC/CC,GAASQ,IAAI,IAAWA,EAAM,CAACP,GAAOI,EAAOC,gBAAa,EAW9D,OACQG,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAACC,SAAS,SAAQC,SAAA,EACvBC,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAACC,IAAI,KAAKC,MAAM,WAAUJ,UACjCH,EAAAA,EAAAA,MAACQ,EAAAA,GAAgB,CAAAL,SAAA,EACbC,EAAAA,EAAAA,KAACK,EAAAA,GAAW,CAACjB,KAAK,OAAOF,KAAMA,EAAMoB,SAAUhB,EAAciB,UAAQ,KACrEP,EAAAA,EAAAA,KAACQ,EAAAA,GAAiB,CAACpB,KAAK,WAAWF,KAAMA,EAAMoB,SAAUhB,UAGjEM,EAAAA,EAAAA,MAACa,EAAAA,GAAiB,CAAAV,SAAA,EACdC,EAAAA,EAAAA,KAACU,EAAAA,GAAa,CAACC,MAAM,OAAOC,UAAU,OAAOC,QAlB1CC,MACXC,EAAAA,EAAAA,IAAe7B,EAAMC,IAErBR,EADAF,GACSuC,EAAAA,EAAAA,IAAUvC,EAAIS,EAAMJ,EAAYP,IAEhC0C,EAAAA,EAAAA,IAAS/B,EAAMJ,EAAYP,GAE5C,EAWkFM,QAASA,KAC3EmB,EAAAA,EAAAA,KAACkB,EAAAA,GAAW,CAACP,MAAM,SAASE,QAASA,IAAMtC,EAAQ4C,gBAEhD,C","sources":["views/Settings/ScheduleSetup/Level/LevelForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { CustomInput, CustomInputSwitch } from '../../../../shared/Input/AllInputs';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { useHistory ,useParams} from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addLevel, editLevel, getLevel } from '../../../../redux/actions/ScheduleSettings/levelActions';\r\nimport formValidation from '../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../utils/commonFunctions';\r\n\r\nconst LevelForm = () => {\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getLevel(id, (data) => {\r\n                    setData({\r\n                        name: data.name,\r\n                        isActive: data.isActive,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        isActive: false,\r\n    });\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value ,formErrors}));\r\n    };\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n        if (id) {\r\n            dispatch(editLevel(id, data, setLoading, history));\r\n        } else {\r\n            dispatch(addLevel(data, setLoading, history));\r\n        }\r\n    }\r\n    };\r\n    return (\r\n            <FormPage backText=\"Levels\">\r\n                <CustomCard col=\"12\" title=\"Personal\">\r\n                    <CustomGridLayout>\r\n                        <CustomInput name=\"name\" data={data} onChange={handleChange} required/>\r\n                        <CustomInputSwitch name=\"isActive\" data={data} onChange={handleChange} />\r\n                    </CustomGridLayout>\r\n                </CustomCard>\r\n                <CustomButtonGroup>\r\n                    <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={handleSave} loading={loading} />\r\n                    <LightButton label=\"Cancel\" onClick={() => history.goBack()} />\r\n                </CustomButtonGroup>\r\n            </FormPage>\r\n    );\r\n};\r\n\r\nexport default LevelForm;\r\n"],"names":["LevelForm","history","useHistory","id","useParams","dispatch","useDispatch","loading","setLoading","useState","useEffect","getLevel","data","setData","name","isActive","handleChange","_ref","value","formErrors","formValidation","prev","_jsxs","FormPage","backText","children","_jsx","CustomCard","col","title","CustomGridLayout","CustomInput","onChange","required","CustomInputSwitch","CustomButtonGroup","PrimaryButton","label","className","onClick","handleSave","showFormErrors","editLevel","addLevel","LightButton","goBack"],"sourceRoot":""}