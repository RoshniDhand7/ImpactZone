{"version":3,"file":"static/js/874.8c1facb0.chunk.js","mappings":"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","sources":["shared/Layout/FormPage.jsx","utils/dropdownConstants.js","views/Settings/Employees/Departments/DepartmentsForm.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomTransition from '../Transitions/CustomTransition';\r\n\r\nexport default function FormPage({ children, backText, backTo }) {\r\n    const history = useHistory();\r\n\r\n    const onBack = () => {\r\n        if (backTo) {\r\n            history.replace(backTo);\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    };\r\n    return (\r\n        <CustomTransition>\r\n            {backText ? (\r\n                <div className=\"flex mb-3 text-dark-gray\">\r\n                    <i className=\"pi pi-angle-left text-2xl cursor-pointer\" onClick={onBack}></i>\r\n                    <div className=\" my-auto font-semibold text-lg cursor-pointer\" onClick={onBack}>\r\n                        Back to {backText}\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            <>{children}</>\r\n        </CustomTransition>\r\n    );\r\n}\r\n","export const yesNoOptions = [\r\n    {\r\n        name: 'Yes',\r\n        value: 'true',\r\n    },\r\n    {\r\n        name: 'No',\r\n        value: 'false',\r\n    },\r\n];\r\n\r\nexport const amountTypeOptions = [\r\n    {\r\n        name: '$',\r\n        value: 'FIXED',\r\n    },\r\n    {\r\n        name: '%',\r\n        value: 'PERCENTAGE',\r\n    },\r\n];\r\nexport const CommissionGpTypeOptions = ['Products', 'Services', 'Agreement'].map((name) => ({ name, value: name }));\r\n\r\nexport const checkInLimitOptions = [\r\n    {\r\n        name: 'No Limit',\r\n        value: 'No Limit',\r\n    },\r\n];\r\n\r\nfor (let i = 1; i <= 50; i++) {\r\n    const option = {\r\n        name: `${i}`,\r\n        value: `${i}`,\r\n    };\r\n    checkInLimitOptions.push(option);\r\n}\r\nexport const perOptions = [\r\n    {\r\n        name: 'Week (7 days)',\r\n        value: 'Week (7 Days)',\r\n    },\r\n    {\r\n        name: 'Month (30 days)',\r\n        value: 'Month (30 days)',\r\n    },\r\n    {\r\n        name: 'Year (365 days)',\r\n        value: 'Year (365 days)',\r\n    },\r\n    {\r\n        name: 'Calendar Week (sunday)',\r\n        value: 'Calendar Week (sunday)',\r\n    },\r\n    {\r\n        name: 'Calendar Week (monday)',\r\n        value: 'Calendar Week (monday)',\r\n    },\r\n    {\r\n        name: 'Calendar Month',\r\n        value: 'Calendar Month',\r\n    },\r\n    {\r\n        name: 'Calendar Year',\r\n        value: 'Calendar Year',\r\n    },\r\n];\r\n\r\nexport const restrictionOptions = [\r\n    {\r\n        name: 'Club',\r\n        value: 'Club',\r\n    },\r\n    {\r\n        name: 'Company',\r\n        value: 'Company',\r\n    },\r\n];\r\n\r\nexport const daysOptions = [];\r\n\r\nfor (let i = 1; i <= 30; i++) {\r\n    const option = {\r\n        name: `${i} days`,\r\n        value: `${i} days`,\r\n    };\r\n    daysOptions.push(option);\r\n}\r\n\r\nexport const hoursOptions = [];\r\n\r\nfor (let i = 12; i <= 72; i += 12) {\r\n    const option = {\r\n        name: `${i} hours`,\r\n        value: `${i} hours`,\r\n    };\r\n    hoursOptions.push(option);\r\n}\r\n\r\nexport const reasonCodeTypeOptions = [\r\n    'Agreement Hold',\r\n    'Cancel Pending POS Transaction',\r\n    'Cancel Agreement',\r\n    'Cancel Price',\r\n    'Commission Override',\r\n    'Drawer Adjustment',\r\n    'Event Status',\r\n    'Freeze Agreement',\r\n    'No Sale',\r\n    'Void',\r\n    'Waive Tax',\r\n].map((name) => ({ name, value: name }));\r\n\r\n// export const reasonCodeTypeOptions = [\r\n//     {\r\n//         name: 'Agreement Hold',\r\n//         value: 'Agreement Hold',\r\n//     },\r\n//     {\r\n//         name: 'Cancel Pending POS Transaction',\r\n//         value: 'Cancel Pending POS Transaction',\r\n//     },\r\n//     {\r\n//         name: 'Cancel Agreement',\r\n//         value: 'Cancel Agreement',\r\n//     },\r\n//     {\r\n//         name: 'Cancel Price',\r\n//         value: 'Cancel Price',\r\n//     },\r\n//     {\r\n//         name: 'Commission Override',\r\n//         value: 'Commission Override',\r\n//     },\r\n//     {\r\n//         name: 'Drawer Adjustment',\r\n//         value: 'Drawer Adjustment',\r\n//     },\r\n//     {\r\n//         name: 'Event Status',\r\n//         value: 'Event Status',\r\n//     },\r\n//     {\r\n//         name: 'Freeze Agreement',\r\n//         value: 'Freeze Agreement',\r\n//     },\r\n//     {\r\n//         name: 'No Sale',\r\n//         value: 'No Sale',\r\n//     },\r\n//     {\r\n//         name: 'Void',\r\n//         value: 'Void',\r\n//     },\r\n//     {\r\n//         name: 'Waive Tax',\r\n//         value: 'Waive Tax',\r\n//     },\r\n// ];\r\n","import React, { useState, useEffect } from 'react';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { CustomDropDown, CustomInput } from '../../../../shared/Input/AllInputs';\r\nimport formValidation from '../../../../utils/validations';\r\nimport { yesNoOptions } from '../../../../utils/dropdownConstants';\r\nimport { showFormErrors } from '../../../../utils/commonFunctions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport { addDepartment, editDepartment, getDepartment } from '../../../../redux/actions/EmployeeSettings/departmentsAction';\r\n\r\nconst DepartmentsForm = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        showInCalender: '',\r\n        visibleOnline: '',\r\n        salesPersonOnline: '',\r\n        departmentCode: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getDepartment(id, (data) => {\r\n                    setData({\r\n                        name: data.name,\r\n                        showInCalender: data.showInCalender.toString(),\r\n                        visibleOnline: data.visibleOnline.toString(),\r\n                        salesPersonOnline: data.salesPersonOnline.toString(),\r\n                        departmentCode: data.departmentCode,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n    const [loading, setLoading] = useState(false);\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (id) {\r\n                dispatch(editDepartment(id, data, setLoading, history));\r\n            } else {\r\n                dispatch(addDepartment(data, setLoading, history));\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FormPage backText=\"Departments\">\r\n                <CustomCard col=\"12\" title=\"General\">\r\n                    <CustomGridLayout>\r\n                        <CustomInput data={data} name=\"name\" onChange={handleChange} col={3} />\r\n                        <CustomDropDown name=\"showInCalender\" options={yesNoOptions} onChange={handleChange} data={data} />\r\n                        <CustomDropDown name=\"visibleOnline\" options={yesNoOptions} onChange={handleChange} data={data} />\r\n                        <CustomDropDown name=\"salesPersonOnline\" options={yesNoOptions} onChange={handleChange} data={data} />\r\n                        <CustomInput data={data} name=\"departmentCode\" onChange={handleChange} col={3} />\r\n                    </CustomGridLayout>\r\n                </CustomCard>\r\n\r\n                <CustomButtonGroup>\r\n                    <PrimaryButton label=\"Save\" className=\"mx-2\" loading={loading} onClick={handleSave} />\r\n                    <LightButton label=\"Cancel\" onClick={() => history.goBack()} />\r\n                </CustomButtonGroup>\r\n            </FormPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DepartmentsForm;\r\n"],"names":["FormPage","_ref","children","backText","backTo","history","useHistory","onBack","replace","goBack","_jsxs","CustomTransition","className","_jsx","onClick","_Fragment","yesNoOptions","name","value","amountTypeOptions","CommissionGpTypeOptions","map","checkInLimitOptions","i","option","concat","push","perOptions","restrictionOptions","daysOptions","hoursOptions","reasonCodeTypeOptions","DepartmentsForm","dispatch","useDispatch","id","useParams","data","setData","useState","showInCalender","visibleOnline","salesPersonOnline","departmentCode","useEffect","getDepartment","toString","loading","setLoading","handleChange","formErrors","formValidation","prev","CustomCard","col","title","CustomGridLayout","CustomInput","onChange","CustomDropDown","options","CustomButtonGroup","PrimaryButton","label","handleSave","showFormErrors","editDepartment","addDepartment","LightButton"],"sourceRoot":""}