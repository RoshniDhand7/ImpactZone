{"version":3,"file":"static/js/894.b7327df1.chunk.js","mappings":"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","sources":["views/Settings/MembersSetup/MembershipTypes/MembershipTypeForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport { CustomDropDown, CustomInput, CustomInputNumber, CustomInputSwitch } from '../../../../shared/Input/AllInputs';\r\nimport formValidation from '../../../../utils/validations';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SpecialRestrictionOptions, defaultDiscountOptions, yesNoOptions } from '../../../../utils/dropdownConstants';\r\nimport CustomPickList from '../../../../shared/Input/CustomPickList';\r\nimport { getIds, showFormErrors } from '../../../../utils/commonFunctions';\r\nimport AddServices from '../../Inventory/CatalogItems/AddServices';\r\nimport useGetClubs from '../../../../hooks/useGetClubs';\r\nimport useDiscount from '../../../../hooks/useDiscount';\r\nimport { addMembershipType, editMembershipType, getMembershipType } from '../../../../redux/actions/Settings/MembershipSetup/membershipTypeAction';\r\nimport { getAccessSchedules } from '../../../../redux/actions/Settings/MembershipSetup/AccessScheduleAction';\r\n\r\nconst MembershipTypeForm = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        dispatch(getAccessSchedules());\r\n    }, [dispatch]);\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        description: '',\r\n        discount: 'NONE',\r\n        accessRestriction: false,\r\n        accessSchedule: null,\r\n        remoteCheckin: false,\r\n        transferToAnotherType: null,\r\n        clubCreditAmount: '',\r\n        specialResrictions: 'NONE',\r\n        minimumAgeAllowed: 0,\r\n        maximumAgeAllowed: 0,\r\n        maximumDaysAllowed: 0,\r\n        maximumDistanceAllowed: 0,\r\n        clubs: [],\r\n        services: [],\r\n        isActive: true,\r\n    });\r\n    const { assessScheduleDropdown } = useSelector((state) => state?.settings?.members);\r\n\r\n    let { membershipTypesDropdown } = useSelector((state) => state.settings.members);\r\n    membershipTypesDropdown = membershipTypesDropdown?.filter((item) => item.name !== data?.name);\r\n\r\n    const { clubsDropdown } = useGetClubs();\r\n    const { allDiscountDropdown } = useDiscount();\r\n\r\n    const history = useHistory();\r\n\r\n    const { isTableLoading } = useSelector((state) => state?.tableLoader);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getMembershipType(id, (data) => {\r\n                    setData({\r\n                        name: data.name,\r\n                        description: data.description,\r\n                        discount: data.discount === null ? 'NONE' : data.discount,\r\n                        accessRestriction: data.accessRestriction,\r\n                        accessSchedule: data.accessSchedule,\r\n                        remoteCheckin: data.remoteCheckin,\r\n                        transferToAnotherType: data.transferToAnotherType,\r\n                        clubCreditAmount: data.clubCreditAmount,\r\n                        specialResrictions: data.specialResrictions,\r\n                        minimumAgeAllowed: data.minimumAgeAllowed,\r\n                        maximumAgeAllowed: data.maximumAgeAllowed,\r\n                        maximumDaysAllowed: data.maximumDaysAllowed,\r\n                        maximumDistanceAllowed: data.maximumDistanceAllowed,\r\n                        clubs: data.clubs,\r\n                        services: data.services,\r\n                        isActive: true,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const discountTypeOptions = [...defaultDiscountOptions, ...allDiscountDropdown];\r\n\r\n    const onSave = () => {\r\n        let ignore = [];\r\n        switch (data?.specialResrictions) {\r\n            case 'By Age':\r\n                ignore = ['maximumDaysAllowed', 'maximumDistanceAllowed', 'services'];\r\n                break;\r\n            case 'By Location':\r\n                ignore = ['minimumAgeAllowed', 'maximumAgeAllowed', 'maximumDaysAllowed', 'services'];\r\n                break;\r\n            case 'By Days':\r\n                ignore = ['maximumAgeAllowed', 'minimumAgeAllowed', 'maximumDistanceAllowed', 'services'];\r\n                break;\r\n            default:\r\n                ignore = ['maximumDaysAllowed', 'maximumDistanceAllowed', 'minimumAgeAllowed', 'maximumAgeAllowed', 'services', 'clubs'];\r\n                break;\r\n        }\r\n        if (showFormErrors(data, setData, ignore)) {\r\n            if (id) {\r\n                dispatch(\r\n                    editMembershipType(id, { ...data, services: getIds(data.services), discount: data.discount === 'NONE' ? null : data.discount }, history),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addMembershipType({ ...data, services: getIds(data.services), discount: data.discount === 'NONE' ? null : data.discount }, () =>\r\n                        history.goBack(),\r\n                    ),\r\n                );\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <FormPage backText=\"Membership Types\">\r\n                <CustomCard col=\"12\" title=\"General\">\r\n                    <CustomInputSwitch name=\"isActive\" data={data} onChange={handleChange} />\r\n                    <CustomGridLayout>\r\n                        <CustomInput name=\"name\" data={data} onChange={handleChange} required />\r\n                        <CustomInput name=\"description\" data={data} onChange={handleChange} />\r\n                        <CustomDropDown name=\"discount\" options={discountTypeOptions} onChange={handleChange} data={data} />\r\n                        <CustomDropDown name=\"accessRestriction\" options={yesNoOptions} onChange={handleChange} data={data} />\r\n                        {data?.accessRestriction && (\r\n                            <CustomDropDown name=\"accessSchedule\" options={assessScheduleDropdown} onChange={handleChange} data={data} />\r\n                        )}\r\n                        <CustomDropDown name=\"remoteCheckin\" options={yesNoOptions} onChange={handleChange} data={data} />\r\n                        <CustomDropDown name=\"transferToAnotherType\" options={membershipTypesDropdown} onChange={handleChange} data={data} />\r\n                        <CustomInputNumber prefix=\"$\" name=\"clubCreditAmount\" data={data} onChange={handleChange} col=\"4\" />\r\n                        <CustomDropDown name=\"specialResrictions\" options={SpecialRestrictionOptions} onChange={handleChange} data={data} />\r\n                        {data?.specialResrictions === 'BY_AGE' && (\r\n                            <>\r\n                                <CustomInputNumber name=\"minimumAgeAllowed\" data={data} onChange={handleChange} col=\"4\" />\r\n                                <CustomInputNumber name=\"maximumAgeAllowed\" data={data} onChange={handleChange} col=\"4\" />\r\n                            </>\r\n                        )}\r\n                        {data?.specialResrictions === 'BY_LOCATION' && (\r\n                            <>\r\n                                <CustomInputNumber name=\"maximumDistanceAllowed\" data={data} onChange={handleChange} col=\"4\" />\r\n                            </>\r\n                        )}\r\n                        {data?.specialResrictions === 'BY_DAYS' && (\r\n                            <>\r\n                                <CustomInputNumber name=\"maximumDaysAllowed\" data={data} onChange={handleChange} col=\"4\" />\r\n                            </>\r\n                        )}\r\n                    </CustomGridLayout>\r\n                </CustomCard>\r\n                <CustomCard col=\"12\" title=\" Clubs\">\r\n                    <CustomPickList name=\"clubs\" selected={data?.clubs} sourceData={clubsDropdown} onPickListChange={handleChange} />\r\n                </CustomCard>\r\n                <AddServices data={data} setData={setData} id={id} loading={isTableLoading} name=\"Add Services\" />\r\n                <CustomButtonGroup>\r\n                    <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={onSave} loading={isTableLoading} />\r\n                    <LightButton label=\"Cancel\" onClick={() => history.goBack()} />\r\n                </CustomButtonGroup>\r\n            </FormPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MembershipTypeForm;\r\n"],"names":["MembershipTypeForm","_membershipTypesDropd","dispatch","useDispatch","id","useParams","useEffect","getAccessSchedules","data","setData","useState","name","description","discount","accessRestriction","accessSchedule","remoteCheckin","transferToAnotherType","clubCreditAmount","specialResrictions","minimumAgeAllowed","maximumAgeAllowed","maximumDaysAllowed","maximumDistanceAllowed","clubs","services","isActive","assessScheduleDropdown","useSelector","state","_state$settings","settings","members","membershipTypesDropdown","filter","item","clubsDropdown","useGetClubs","allDiscountDropdown","useDiscount","history","useHistory","isTableLoading","tableLoader","getMembershipType","handleChange","_ref","value","formErrors","formValidation","prev","_objectSpread","discountTypeOptions","defaultDiscountOptions","_jsx","_Fragment","children","_jsxs","FormPage","backText","CustomCard","col","title","CustomInputSwitch","onChange","CustomGridLayout","CustomInput","required","CustomDropDown","options","yesNoOptions","CustomInputNumber","prefix","SpecialRestrictionOptions","CustomPickList","selected","sourceData","onPickListChange","AddServices","loading","CustomButtonGroup","PrimaryButton","label","className","onClick","onSave","ignore","showFormErrors","editMembershipType","getIds","addMembershipType","goBack","LightButton"],"sourceRoot":""}