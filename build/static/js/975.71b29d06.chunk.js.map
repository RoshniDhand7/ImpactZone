{"version":3,"file":"static/js/975.71b29d06.chunk.js","mappings":"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","sources":["redux/actions/EmployeeSettings/certificationAction.js","views/Settings/Employees/ManageEmployee/AddEmployee/Certifications/CertificationForm.jsx"],"sourcesContent":["import api from '../../../services/api';\r\nimport EndPoints from '../../../services/endPoints';\r\nimport { types } from '../../types/types';\r\nimport { hideLoaderAction, showLoaderAction } from '../loaderAction';\r\nimport { showToast } from '../toastAction';\r\nimport { dateConversions, uploadFiles } from '../../../utils/commonFunctions';\r\n\r\nconst getCertificates = (id, setLoading) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const params = { employee: id };\r\n    const res = await api('get', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES, {}, params);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            dispatch({\r\n                type: types.CHANGE_MANAGE_EMPLOYEE_CERTIFICATES,\r\n                payload: res.data,\r\n            });\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\nconst addCertificates =\r\n    (data, setLoading, history, tab = '') =>\r\n    async (dispatch) => {\r\n        setLoading(true);\r\n        if (data.certificate?.length) {\r\n            let durls = await uploadFiles(data.certificate);\r\n            data.certificate = durls[0].path;\r\n            data.certificateName = durls[0].originalname;\r\n            data.certificateSize = durls[0].size;\r\n        } else {\r\n            data.certificate = '';\r\n        }\r\n\r\n        const payload = {\r\n            ...data,\r\n            acquiredDate: dateConversions(data?.acquiredDate),\r\n            expirationDate: dateConversions(data.expirationDate),\r\n        };\r\n\r\n        const res = await api('post', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES, payload);\r\n        if (res.success) {\r\n            if (tab) {\r\n                history.replace(`/settings/employee/manage-employee/edit/${res.data._id}/${tab}`);\r\n            } else {\r\n                history.goBack();\r\n            }\r\n            dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        }\r\n        setLoading(false);\r\n    };\r\nconst getCertificate = (id, returnData) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n    const res = await api('get', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES + id);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\nconst editCertificates =\r\n    (id, data, setLoading, history, tab = '') =>\r\n    async (dispatch) => {\r\n        setLoading(true);\r\n        if (data.certificate?.length) {\r\n            let durls = await uploadFiles(data.certificate);\r\n            data.certificate = durls[0].path;\r\n            data.certificateName = durls[0].originalname;\r\n            data.certificateSize = durls[0].size;\r\n        } else {\r\n            data.certificate = '';\r\n        }\r\n\r\n        const payload = {\r\n            ...data,\r\n            acquiredDate: dateConversions(data?.acquiredDate),\r\n            expirationDate: dateConversions(data?.expirationDate),\r\n        };\r\n        const res = await api('put', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES + id, payload);\r\n        if (res.success) {\r\n            if (tab) {\r\n                history.replace(`/settings/employee/manage-employee/edit/${res.data._id}/${tab}`);\r\n            } else {\r\n                history.goBack();\r\n            }\r\n            dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        }\r\n        setLoading(false);\r\n    };\r\nconst deleteCertificates = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES + id);\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nconst getEmployeeNotes = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.NOTES, '', { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeNotes = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.NOTES, data);\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\nexport { getCertificates, addCertificates, editCertificates, deleteCertificates, getCertificate, getEmployeeNotes, addEmployeeNotes };\r\n","import React, { useEffect, useState } from 'react';\r\nimport FormPage from '../../../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport { CustomCalenderInput, CustomInput, CustomTextArea } from '../../../../../../shared/Input/AllInputs';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../../../shared/Button/CustomButton';\r\nimport { addCertificates, editCertificates, getCertificate } from '../../../../../../redux/actions/EmployeeSettings/certificationAction';\r\nimport CustomFilesInput from '../../../../../../shared/Input/CustomFilesInput';\r\n\r\nconst CertificationForm = () => {\r\n    const { id, employeeId } = useParams();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        certificationNumber: '',\r\n        issuer: '',\r\n        acquiredDate: '',\r\n        expirationDate: '',\r\n        certificate: [],\r\n        employee: '',\r\n        certificateSize: '',\r\n        certificateName: '',\r\n    });\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getCertificate(id, (data) => {\r\n                    setData({\r\n                        name: data.name,\r\n                        certificationNumber: data.certificationNumber,\r\n                        issuer: data.issuer,\r\n                        acquiredDate: data.acquiredDate ? new Date() : '',\r\n                        expirationDate: data.expirationDate ? new Date() : '',\r\n                        certificate: data.certificate ? [data.certificate] : [],\r\n                        description: data.description,\r\n                        employee: employeeId,\r\n                        certificateName: data?.certificateName ? data?.certificateName : '',\r\n                        certificateSize: data?.certificateSize ? data?.certificateSize : '',\r\n                    });\r\n                }),\r\n            );\r\n        } else {\r\n            setData({ ...data, employee: employeeId });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [id, dispatch]);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const handleChange = ({ name, value }) => {\r\n        setData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n    const handleSave = () => {\r\n        if (id) {\r\n            dispatch(editCertificates(id, data, setLoading, history));\r\n        } else {\r\n            dispatch(addCertificates(data, setLoading, history));\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <FormPage backText=\"Certifications\">\r\n                <CustomCard col=\"12\" title=\"Personal\">\r\n                    <CustomGridLayout>\r\n                        <CustomInput name=\"name\" data={data} onChange={handleChange} />\r\n                        <CustomInput name=\"certificationNumber\" data={data} onChange={handleChange} />\r\n                        <CustomInput name=\"issuer\" data={data} onChange={handleChange} />\r\n                        <CustomCalenderInput name=\"acquiredDate\" data={data} onChange={handleChange} />\r\n                        <CustomCalenderInput name=\"expirationDate\" data={data} onChange={handleChange} />\r\n                        <CustomTextArea name=\"description\" data={data} onChange={handleChange} />\r\n                        <CustomFilesInput\r\n                            data={data}\r\n                            onFilesChange={handleChange}\r\n                            name=\"certificate\"\r\n                            label=\"Upload Certificate\"\r\n                            accept=\"image/*,.pdf\"\r\n                            disabled={false}\r\n                            col=\"6\"\r\n                            uploadType=\"Image/Pdf\"\r\n                            originalName={data?.certificateName}\r\n                            fileSize={data.certificateSize}\r\n                        />\r\n                    </CustomGridLayout>\r\n                </CustomCard>\r\n                <CustomButtonGroup>\r\n                    <PrimaryButton label=\"Save\" className=\"mx-2\" loading={loading} onClick={handleSave} />\r\n                    <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/employee')} />\r\n                </CustomButtonGroup>\r\n            </FormPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CertificationForm;\r\n"],"names":["getCertificates","id","setLoading","async","params","employee","res","api","EndPoints","MANAGE_EMPLOYEE_CERTIFICATES","success","data","dispatch","type","types","CHANGE_MANAGE_EMPLOYEE_CERTIFICATES","payload","addCertificates","history","tab","arguments","length","undefined","_data$certificate","certificate","durls","uploadFiles","path","certificateName","originalname","certificateSize","size","acquiredDate","dateConversions","expirationDate","replace","concat","_id","goBack","showToast","severity","summary","message","getCertificate","returnData","showLoaderAction","hideLoaderAction","editCertificates","_data$certificate2","deleteCertificates","next","getEmployeeNotes","NOTES","addEmployeeNotes","CertificationForm","employeeId","useParams","useDispatch","useHistory","setData","useState","name","certificationNumber","issuer","useEffect","Date","description","loading","handleChange","_ref","value","prev","_jsx","_Fragment","children","_jsxs","FormPage","backText","CustomCard","col","title","CustomGridLayout","CustomInput","onChange","CustomCalenderInput","CustomTextArea","CustomFilesInput","onFilesChange","label","accept","disabled","uploadType","originalName","fileSize","CustomButtonGroup","PrimaryButton","className","onClick","handleSave","LightButton"],"sourceRoot":""}