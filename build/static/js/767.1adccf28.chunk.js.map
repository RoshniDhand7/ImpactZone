{"version":3,"file":"static/js/767.1adccf28.chunk.js","mappings":"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","sources":["views/Settings/Inventory/CatalogItems/SelectCatalogItems.jsx","views/Settings/Inventory/CommissionGroup/CommissionGroupForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CustomCard, { CustomFilterCard1, CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport { confirmDelete } from '../../../../utils/commonFunctions';\r\nimport PrimaryButton from '../../../../shared/Button/CustomButton';\r\nimport CustomTable from '../../../../shared/Table/CustomTable';\r\nimport CustomDialog from '../../../../shared/Overlays/CustomDialog';\r\nimport useCatalogItems from '../../../../hooks/Inventory/useCatalogItems';\r\n\r\nconst SelectCatalogItems = ({ data, setData, id, loading, name }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const { CatalogItemsList } = useCatalogItems();\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            if (open) {\r\n                setSelected(data?.catalogs);\r\n            }\r\n        }\r\n    }, [data?.catalogs, open, id]);\r\n\r\n    const columns = [\r\n        { selectionMode: 'multiple', headerStyle: '' },\r\n        { field: 'name', header: ' Name' },\r\n        { field: 'upc', header: 'UPC' },\r\n        { field: 'unitPrice', header: 'Price' },\r\n    ];\r\n\r\n    const columns1 = [\r\n        { field: 'name', header: 'Name' },\r\n        { field: 'upc', header: 'UPC' },\r\n        { field: 'unitPrice', header: 'Price' },\r\n    ];\r\n\r\n    const handleServiceDelete = (col) => {\r\n        confirmDelete(\r\n            () => {\r\n                setData((prev) => ({ ...prev, catalogs: data?.catalogs?.filter((item) => item._id !== col?._id) }));\r\n            },\r\n            `Do you want to delete this Catalog Item ?`,\r\n            'center',\r\n        );\r\n    };\r\n\r\n    const handleSave = () => {\r\n        setData((prev) => ({ ...prev, catalogs: selected }));\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title={name}>\r\n                <CustomFilterCard1 buttonTitle=\"Add\" onClick={() => setOpen(true)} extraClass=\"justify-content-end gap-2\">\r\n                    <div>\r\n                        <PrimaryButton\r\n                            label={'Remove All'}\r\n                            onClick={() => {\r\n                                setData((prev) => ({ ...prev, catalogs: [] }));\r\n                                setSelected([]);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </CustomFilterCard1>\r\n                <CustomTable data={data?.catalogs} columns={columns1} showSelectionElement={false} onDelete={handleServiceDelete} />\r\n            </CustomCard>\r\n            <CustomDialog\r\n                title={'Add Catlog Item'}\r\n                visible={open}\r\n                onCancel={() => {\r\n                    setOpen('');\r\n                }}\r\n                loading={loading}\r\n                onSave={handleSave}\r\n                width=\"auto\"\r\n            >\r\n                <CustomGridLayout>\r\n                    {open && (\r\n                        <CustomTable convertToboolean={false} data={CatalogItemsList} columns={columns} selectedRow={selected} setSelectedRow={setSelected} />\r\n                    )}\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SelectCatalogItems;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CustomDropDown, CustomInput, CustomInputSwitch } from '../../../../shared/Input/AllInputs';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport formValidation from '../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../utils/commonFunctions';\r\nimport { catalogProductTypeOptions } from '../../../../utils/dropdownConstants';\r\nimport SelectCatalogItems from '../CatalogItems/SelectCatalogItems';\r\nimport { addCommissionGroups, editCommissionGroups, getCommissionGroup } from '../../../../redux/actions/Settings/InventorySetup/commissionGroupAction';\r\n\r\nconst CommissionGroupForm = () => {\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getCommissionGroup(id, (data) => {\r\n                    setData({\r\n                        name: data.name,\r\n                        type: data.type,\r\n                        isActive: data.isActive,\r\n                        catalogs: data?.catalogs,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        type: 'PRODUCTS',\r\n        isActive: true,\r\n        catalogs: [],\r\n    });\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (id) {\r\n                dispatch(editCommissionGroups(id, data, setLoading, history));\r\n            } else {\r\n                dispatch(addCommissionGroups(data, setLoading, history));\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <FormPage backText=\"CommissionGroup\">\r\n            <CustomCard col=\"12\" title=\"Add New Commission Group\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"name\" data={data} onChange={handleChange} required />\r\n                    <CustomDropDown name=\"type\" options={catalogProductTypeOptions} data={data} onChange={handleChange} />\r\n                    <CustomInputSwitch name=\"isActive\" data={data} onChange={handleChange} col={4} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <SelectCatalogItems data={data} setData={setData} id={id} loading={loading} name=\"Catalog Items\" />\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={handleSave} loading={loading} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.goBack()} />\r\n            </CustomButtonGroup>\r\n        </FormPage>\r\n    );\r\n};\r\n\r\nexport default CommissionGroupForm;\r\n"],"names":["_ref","data","setData","id","loading","name","open","setOpen","useState","selected","setSelected","CatalogItemsList","useCatalogItems","useEffect","catalogs","_jsxs","_Fragment","children","CustomCard","col","title","_jsx","CustomFilterCard1","buttonTitle","onClick","extraClass","PrimaryButton","label","prev","_objectSpread","CustomTable","columns","field","header","showSelectionElement","onDelete","confirmDelete","_data$catalogs","filter","item","_id","CustomDialog","visible","onCancel","onSave","handleSave","width","CustomGridLayout","convertToboolean","selectionMode","headerStyle","selectedRow","setSelectedRow","CommissionGroupForm","history","useHistory","useParams","dispatch","useDispatch","setLoading","getCommissionGroup","type","isActive","handleChange","value","formErrors","formValidation","FormPage","backText","CustomInput","onChange","required","CustomDropDown","options","catalogProductTypeOptions","CustomInputSwitch","SelectCatalogItems","CustomButtonGroup","className","showFormErrors","editCommissionGroups","addCommissionGroups","LightButton","goBack"],"sourceRoot":""}