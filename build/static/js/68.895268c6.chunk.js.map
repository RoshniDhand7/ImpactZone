{"version":3,"file":"static/js/68.895268c6.chunk.js","mappings":"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","sources":["redux/actions/EmployeeSettings/certificationAction.js","views/Settings/Employees/ManageEmployee/AddEmployee/Security.jsx","shared/Input/DragDropFiles.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/General.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Clubs.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Notes.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Certifications/Certifications.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/EmployeeDepartments.jsx","redux/actions/EmployeeSettings/classesAction.js","views/Settings/Employees/ManageEmployee/AddEmployee/Classes/AddandEditClasses.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Classes/PaySetup.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Classes/SubstituteOptionSetup.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Classes/ClassesSetup.jsx","redux/actions/EmployeeSettings/appointmentAction.js","views/Settings/Employees/ManageEmployee/AddEmployee/AppointmentSetup/AddandEditAppointmentPay.js","views/Settings/Employees/ManageEmployee/AddEmployee/AppointmentSetup/PaySetup.jsx","redux/actions/EmployeeSettings/salesCommssionAction.js","views/Settings/Employees/ManageEmployee/AddEmployee/AppointmentSetup/BonusSetup.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/AppointmentSetup/AppointmentSetup.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/SalesCommission/ItemCommission.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/SalesCommission/SalesCommission.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/EmployeeForm.jsx"],"sourcesContent":["import moment from 'moment/moment';\r\nimport api from '../../../services/api';\r\nimport EndPoints from '../../../services/endPoints';\r\nimport { types } from '../../types/types';\r\nimport { hideLoaderAction, showLoaderAction } from '../loaderAction';\r\nimport { showToast } from '../toastAction';\r\n\r\nconst getCertificates = (id, setLoading) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const params = { employee: id };\r\n    const res = await api('get', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES, {}, params);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            dispatch({\r\n                type: types.CHANGE_MANAGE_EMPLOYEE_CERTIFICATES,\r\n                payload: res.data,\r\n            });\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\nconst addCertificates =\r\n    (data, setLoading, history, tab = '') =>\r\n    async (dispatch) => {\r\n        setLoading(true);\r\n        const payload = {\r\n            ...data,\r\n            acquiredDate: moment(data.acquiredDate).format('MM/DD/YYYY'),\r\n            expirationDate: moment(data.expirationDate).format('MM/DD/YYYY'),\r\n        };\r\n\r\n        const res = await api('post', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES, payload);\r\n        if (res.success) {\r\n            if (tab) {\r\n                history.replace(`/settings/employee/manage-employee/edit/${res.data._id}/${tab}`);\r\n            } else {\r\n                history.goBack();\r\n            }\r\n            dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        }\r\n        setLoading(false);\r\n    };\r\nconst getCertificate = (id, returnData) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n    const res = await api('get', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES + id);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\nconst editCertificates =\r\n    (id, data, setLoading, history, tab = '') =>\r\n    async (dispatch) => {\r\n        setLoading(true);\r\n        const payload = {\r\n            ...data,\r\n            acquiredDate: moment(data.acquiredDate).format('MM/DD/YYYY'),\r\n            expirationDate: moment(data.expirationDate).format('MM/DD/YYYY'),\r\n        };\r\n        const res = await api('put', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES + id, payload);\r\n        if (res.success) {\r\n            if (tab) {\r\n                history.replace(`/settings/employee/manage-employee/edit/${res.data._id}/${tab}`);\r\n            } else {\r\n                history.goBack();\r\n            }\r\n            dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        }\r\n        setLoading(false);\r\n    };\r\nconst deleteCertificates = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES + id);\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nconst getEmployeeNotes = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.NOTES, '', { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeNotes = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.NOTES, data);\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\nexport { getCertificates, addCertificates, editCertificates, deleteCertificates, getCertificate, getEmployeeNotes, addEmployeeNotes };\r\n","import React, { useEffect, useState } from 'react';\r\nimport CustomCard, { CustomGridLayout } from '../../../../../shared/Cards/CustomCard';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../../shared/Button/CustomButton';\r\nimport { CustomCalenderInput, CustomDropDown, CustomInput } from '../../../../../shared/Input/AllInputs';\r\nimport { yesNoOptions } from '../../../../../utils/dropdownConstants';\r\nimport CustomPickList from '../../../../../shared/Input/CustomPickList';\r\nimport formValidation from '../../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../../utils/commonFunctions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { addEmployees, editEmployee, getEmployee } from '../../../../../redux/actions/EmployeeSettings/employeesAction';\r\nimport { useParams } from 'react-router';\r\nimport { getJobDetails } from '../../../../../redux/actions/BusinessSettings/jobActions';\r\nimport { getSecurityRoles } from '../../../../../redux/actions/EmployeeSettings/securityRolesAction';\r\n\r\nconst Security = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        dispatch(getJobDetails());\r\n        dispatch(getSecurityRoles());\r\n    }, [dispatch]);\r\n\r\n    let { allSecurityRoles } = useSelector((state) => state?.securityRole);\r\n    allSecurityRoles = allSecurityRoles?.map((item) => ({ name: item.name, value: item._id }));\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getEmployee(id, (data) => {\r\n                    setData({\r\n                        firstName: data.firstName,\r\n                        lastName: data.lastName,\r\n                        middleInitial: data.middleInitial,\r\n                        jobTitle: data.jobTitle,\r\n                        dob: new Date(data.dob),\r\n                        socialSecurity: data.socialSecurity,\r\n                        barCode: data.barCode,\r\n                        accessCode: data.accessCode,\r\n                        email: data.email,\r\n                        multiClubClockIn: data.multiClubClockIn.toString(),\r\n                        securityRoles: data.securityRoles,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n\r\n    const { allJobTitle } = useSelector((state) => state.jobTitle);\r\n    const [data, setData] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        middleInitial: '',\r\n        jobTitle: '',\r\n        dob: '',\r\n        socialSecurity: '',\r\n        barCode: '',\r\n        accessCode: '',\r\n        email: '',\r\n        multiClubClockIn: '',\r\n        securityRoles: [],\r\n    });\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = (tab) => {\r\n        let ignore = ['jobTitle'];\r\n\r\n        if (showFormErrors(data, setData, ignore)) {\r\n            if (id) {\r\n                dispatch(editEmployee(id, data, setLoading, history, tab));\r\n            } else {\r\n                dispatch(addEmployees(data, setLoading, history, tab));\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"Personal\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"firstName\" required col={3} data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"middleInitial\" col={1} data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"lastName\" required data={data} onChange={handleChange} />\r\n                    <CustomDropDown\r\n                        name=\"jobTitle\"\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        options={allJobTitle?.map((item, index) => {\r\n                            return { label: item.jobTitle, value: item._id };\r\n                        })}\r\n                        optionLabel=\"label\"\r\n                    />\r\n                    <CustomCalenderInput name=\"dob\" data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"socialSecurity\" data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"System\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"barCode\" required data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"accessCode\" required data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"email\" required data={data} onChange={handleChange} />\r\n                    <CustomDropDown label=\"Allow Multi-Club Clock In/Out\" name=\"multiClubClockIn\" options={yesNoOptions} data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Select Roles\">\r\n                <div col={12}>\r\n                    <CustomPickList name=\"securityRoles\" selected={data?.securityRoles} sourceData={allSecurityRoles} onPickListChange={handleChange} />\r\n                </div>\r\n            </CustomCard>\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={() => handleSave('')} loading={loading} />\r\n                <PrimaryButton label=\"Save & Next\" className=\"mx-2\" onClick={() => handleSave('?tab=general')} loading={loading} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/employee')} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Security;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { Avatar } from 'primereact/avatar';\r\nimport { Badge } from 'primereact/badge';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { getImageURL } from '../../utils/imageUrl';\r\n\r\nconst PhotoUpload = ({ name, value, data, onDropChange, multiple = true }) => {\r\n    const [selectedImages, setSelectedImages] = useState(value || data?.[name] || []);\r\n\r\n    useEffect(() => {\r\n        if (value || data?.[name]) {\r\n            if (JSON.stringify(value || data?.[name]) !== JSON.stringify(selectedImages)) {\r\n                setSelectedImages(value || data?.[name]);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value || data?.[name]]);\r\n\r\n    useEffect(() => {\r\n        if (onDropChange) {\r\n            onDropChange({ name, value: selectedImages });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedImages, name]);\r\n\r\n    const onDrop = useCallback(\r\n        (acceptedFiles, rejectedFiles) => {\r\n            if (rejectedFiles.length > 0) {\r\n            } else {\r\n                acceptedFiles.forEach((file) => {\r\n                    const isFileAlreadySelected = selectedImages.some((selectedFile) => selectedFile.name === file.name);\r\n\r\n                    if (!isFileAlreadySelected) {\r\n                        setSelectedImages((prevState) => [...prevState, file]);\r\n                    } else {\r\n                        console.log(`File \"${file.name}\" is already selected.`);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        [selectedImages],\r\n    );\r\n\r\n    const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({\r\n        onDrop,\r\n        multiple,\r\n        // maxFiles: 1,\r\n        accept: {\r\n            'image/*': ['.png', '.gif', '.jpeg', '.jpg'],\r\n        },\r\n    });\r\n\r\n    const style = useMemo(\r\n        () => ({\r\n            ...(isDragAccept ? { borderColor: '#00e676' } : {}),\r\n            ...(isDragReject ? { borderColor: '#ff1744' } : {}),\r\n        }),\r\n        [isDragAccept, isDragReject],\r\n    );\r\n\r\n    const removeImage = (index) => {\r\n        setSelectedImages((prevState) => prevState.filter((_, i) => i !== index));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div {...getRootProps({ style })} style={dropzoneStyle}>\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                    isDragReject ? (\r\n                        <>\r\n                            <Avatar icon=\"pi pi-exclamation-triangle\" size=\"large\" className=\"bg-red-50\" style={{ color: '#252B42' }} shape=\"circle\" />\r\n                            <p className=\"text-color-secondary font-medium text-lg\">Only image files are allowed!</p>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <Avatar icon=\"pi pi-download\" size=\"large\" className=\"bg-green-50\" style={{ color: '#252B42' }} shape=\"circle\" />\r\n                            <p className=\"text-color-secondary font-medium text-lg\">Drop the photo here...</p>\r\n                        </>\r\n                    )\r\n                ) : (\r\n                    <>\r\n                        <Avatar icon=\"pi pi-file\" size=\"large\" style={{ backgroundColor: '#F2F5FE', color: '#252B42' }} shape=\"circle\" />\r\n                        <p className=\"text-color-secondary font-medium text-lg\">Drag your photo here or browse.</p>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <div className=\"flex flex-wrap my-2\">\r\n                {selectedImages?.length > 0 &&\r\n                    selectedImages?.map((image, index) => (\r\n                        <Avatar className=\"p-overlay-badge my-2 mr-3\" image={getImageURL(image)} size=\"xlarge\">\r\n                            <Badge value=\"X\" icon=\"pi pi-fast-forward\" severity=\"danger\" className=\"cursor-pointer\" onClick={() => removeImage(index)} />\r\n                        </Avatar>\r\n                    ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst dropzoneStyle = {\r\n    border: '2px dashed #eeeeee',\r\n    borderRadius: '4px',\r\n    padding: '60px',\r\n    textAlign: 'center',\r\n    cursor: 'pointer',\r\n    background: '#fff',\r\n};\r\n\r\nexport default PhotoUpload;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../../shared/Button/CustomButton';\r\nimport { CustomCalenderInput, CustomDropDown, CustomInput, CustomInputMask, CustomTextArea } from '../../../../../shared/Input/AllInputs';\r\nimport CustomCard, { CustomGridLayout } from '../../../../../shared/Cards/CustomCard';\r\nimport { getAllCountries, getCitiesByState, getStatesByCountry, showFormErrors } from '../../../../../utils/commonFunctions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { yesNoOptions } from '../../../../../utils/dropdownConstants';\r\nimport PhotoUpload from '../../../../../shared/Input/DragDropFiles';\r\nimport formValidation from '../../../../../utils/validations';\r\nimport { editEmployee, getEmployee } from '../../../../../redux/actions/EmployeeSettings/employeesAction';\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\nconst General = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const [states, setStates] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getAllCountries();\r\n        const updatedStates = getStatesByCountry('US');\r\n        setStates(updatedStates);\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getEmployee(id, (data) => {\r\n                    setData({\r\n                        hireDate: new Date(data.hireDate),\r\n                        terminationDate: data.terminationDate,\r\n                        adpId: data.adpId,\r\n                        primaryPhone: data.primaryPhone,\r\n                        workPhone: data.workPhone,\r\n                        workPhoneExt: data.workPhoneExt,\r\n                        mobilePhone: data.mobilePhone,\r\n                        faxPhone: data.faxPhone,\r\n                        emergencyPhone: data.emergencyPhone,\r\n                        emergencyPhoneExt: data.emergencyPhoneExt,\r\n                        street: data.street,\r\n                        city: data.city,\r\n                        state: data.state,\r\n                        zipCode: data.zipCode,\r\n                        emailNotification: data.emailNotification?.toString(),\r\n                        onlineNickName: data.onlineNickName,\r\n                        bio: data.bio,\r\n                        image: data.image ? [data.image] : [],\r\n                    });\r\n                    const cities = getCitiesByState('US', data.state);\r\n                    setCities(cities);\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n\r\n    const [data, setData] = useState({\r\n        hireDate: '',\r\n        terminationDate: '',\r\n        adpId: '',\r\n        primaryPhone: '',\r\n        workPhone: '',\r\n        workPhoneExt: '',\r\n        mobilePhone: '',\r\n        faxPhone: '',\r\n        emergencyPhone: '',\r\n        emergencyPhoneExt: '',\r\n        street: '',\r\n        city: '',\r\n        state: '',\r\n        zipCode: '',\r\n        emailNotification: true,\r\n        onlineNickName: '',\r\n        bio: '',\r\n        image: [],\r\n    });\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        if (name === 'state') {\r\n            const city = getCitiesByState('US', value);\r\n            setCities(city);\r\n            setData((prev) => ({ ...prev, [name]: value, city: '', formErrors }));\r\n        } else {\r\n            setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n        }\r\n    };\r\n    const handleSave = (tab) => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (id) {\r\n                dispatch(editEmployee(id, data, setLoading, history, tab));\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"Employement\">\r\n                <CustomGridLayout>\r\n                    <CustomCalenderInput id=\"hireDate\" name=\"hireDate\" onChange={handleChange} data={data} />\r\n                    <CustomInput name=\"adpId\" onChange={handleChange} data={data} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Contact\">\r\n                <CustomGridLayout>\r\n                    <CustomInputMask id=\"primaryPhone\" name=\"primaryPhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInputMask id=\"workPhone\" name=\"workPhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInputMask id=\"mobilePhone\" name=\"mobilePhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInputMask id=\"faxPhone\" name=\"faxPhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInputMask id=\"emergencyPhone\" name=\"emergencyPhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInput name=\"street\" onChange={handleChange} data={data} />\r\n                    <CustomDropDown name=\"state\" options={states} onChange={handleChange} data={data} />\r\n                    <CustomDropDown name=\"city\" options={cities} onChange={handleChange} data={data} />\r\n                    <CustomInput name=\"zipCode\" onChange={handleChange} data={data} />\r\n                    <CustomDropDown name=\"emailNotification\" options={yesNoOptions} onChange={handleChange} data={data} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Online\">\r\n                <CustomInput name=\"onlineNickName\" onChange={handleChange} data={data} />\r\n                <CustomTextArea name=\"bio\" onChange={handleChange} data={data} />\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Photo\">\r\n                <PhotoUpload name=\"image\" onDropChange={handleChange} data={data} multiple={false} />\r\n            </CustomCard>\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={() => handleSave('')} loading={loading} />\r\n                <PrimaryButton label=\"Save & Next\" className=\"mx-2\" onClick={() => handleSave('?tab=departments')} loading={loading} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/employee')} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default General;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CustomCard from '../../../../../shared/Cards/CustomCard';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../../shared/Button/CustomButton';\r\nimport CustomPickList from '../../../../../shared/Input/CustomPickList';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getClubs } from '../../../../../redux/actions/BusinessSettings/clubsAction';\r\nimport { editEmployee, getEmployee } from '../../../../../redux/actions/EmployeeSettings/employeesAction';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nconst Clubs = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        dispatch(getClubs());\r\n    }, [dispatch]);\r\n\r\n    let { clubsDropdown } = useSelector((state) => state.clubs);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getEmployee(id, (data) => {\r\n                    setData({\r\n                        reportDataAccess: data.reportDataAccess,\r\n                        clubs: data.clubs,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n    const [data, setData] = useState({\r\n        reportDataAccess: [],\r\n        clubs: [],\r\n    });\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        setData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n    const handleSave = () => {\r\n        if (id) {\r\n            dispatch(editEmployee(id, data, setLoading, history));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"Report Data Access\">\r\n                <CustomPickList name=\"reportDataAccess\" selected={data?.reportDataAccess} sourceData={clubsDropdown} onPickListChange={handleChange} />\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Clubs\">\r\n                <CustomPickList name=\"clubs\" selected={data?.clubs} sourceData={clubsDropdown} onPickListChange={handleChange} />\r\n            </CustomCard>\r\n\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" loading={loading} onClick={handleSave} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/employee')} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Clubs;\r\n","import React, { useState, useEffect } from 'react';\r\nimport CustomCard, { CustomFilterCard, CustomGridLayout } from '../../../../../shared/Cards/CustomCard';\r\nimport CustomEditor from '../../../../../shared/Input/CustomEditor';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CustomTable from '../../../../../shared/Table/CustomTable';\r\nimport CustomDialog from '../../../../../shared/Overlays/CustomDialog';\r\nimport { addEmployeeNotes, getEmployeeNotes } from '../../../../../redux/actions/EmployeeSettings/certificationAction';\r\nimport moment from 'moment';\r\nimport { CustomTextArea } from '../../../../../shared/Input/AllInputs';\r\nimport formValidation from '../../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../../utils/commonFunctions';\r\n\r\nconst Notes = () => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const user = useSelector((state) => state.profile.user);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setData({ ...data, takenBy: user.firstName, dateTime: new Date() });\r\n        }\r\n    }, [user]);\r\n    const [data, setData] = useState({\r\n        takenBy: user?.firstName,\r\n        dateTime: new Date(),\r\n        notes: '',\r\n    });\r\n    const [visible, setVisible] = useState(false);\r\n    const [notesData, setNotesData] = useState([]);\r\n    const funcGetNotes = (id) => {\r\n        dispatch(\r\n            getEmployeeNotes(id, setLoading, (data) => {\r\n                setNotesData(data);\r\n            }),\r\n        );\r\n    };\r\n    useEffect(() => {\r\n        if (id) {\r\n            funcGetNotes(id);\r\n        }\r\n    }, [id, dispatch]);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (id) {\r\n                dispatch(\r\n                    addEmployeeNotes({ ...data, employee: id }, setLoading, () => {\r\n                        funcGetNotes(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            }\r\n        }\r\n    };\r\n    const columns = [\r\n        { field: 'takenBy', header: 'Taken By' },\r\n        { field: 'dateTime', body: (r) => moment(r.dateTime).format('MM-DD-YYYY hh:mm a'), header: 'Date/Time' },\r\n        { field: 'notes', header: 'Notes' },\r\n    ];\r\n    const onClose = () => {\r\n        setData({ notes: '' });\r\n        setVisible(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} />\r\n            <CustomTable data={notesData} columns={columns} />\r\n            <CustomDialog width=\"100vh\" title={'Add Note'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomTextArea name=\"notes\" maxLength=\"266\" data={data} onChange={handleChange} inputClass=\"h-17rem\t\" />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notes;\r\n","import React, { useEffect } from 'react';\r\nimport { CustomFilterCard } from '../../../../../../shared/Cards/CustomCard';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { deleteCertificates, getCertificates } from '../../../../../../redux/actions/EmployeeSettings/certificationAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport { confirmDelete } from '../../../../../../utils/commonFunctions';\r\n\r\nconst Certifications = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(getCertificates(id));\r\n    }, [dispatch]);\r\n\r\n    const { allCertificates } = useSelector((state) => state.certificates);\r\n\r\n    const columns = [\r\n        { field: 'name', header: 'Name' },\r\n        { field: 'certificateNumber', header: 'Cerificate Number' },\r\n        { field: 'description', header: 'Description' },\r\n        { field: 'issuer', header: 'Issuer' },\r\n        { field: 'acquiredDate', header: 'Acquired Date' },\r\n        { field: 'expirationDate', header: 'Expiration Date' },\r\n    ];\r\n    const onEdit = (col) => {\r\n        history.push(`/settings/employee/manage-employee/edit/${col._id}/certifications/${id}`);\r\n    };\r\n    const onDelete = (col, position) => {\r\n        confirmDelete(\r\n            () => {\r\n                dispatch(\r\n                    deleteCertificates(col._id, () => {\r\n                        dispatch(getCertificates(id));\r\n                    }),\r\n                );\r\n            },\r\n            'Do you want to delete this Certificates ?',\r\n            position,\r\n        );\r\n    };\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add Certifications\" linkTo={`/settings/employee/manage-employee/add/certifications/${id}`} />\r\n            <CustomTable data={allCertificates} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Certifications;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CustomFilterCard, CustomGridLayout } from '../../../../../shared/Cards/CustomCard';\r\nimport CustomTable from '../../../../../shared/Table/CustomTable';\r\nimport CustomDialog from '../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomInputNumber, CustomMultiselect } from '../../../../../shared/Input/AllInputs';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    addEmployeeDepartment,\r\n    deleteEmployeeDepartment,\r\n    editEmployeeDepartment,\r\n    getDepartments,\r\n    getEmployeeDepartments,\r\n} from '../../../../../redux/actions/EmployeeSettings/departmentsAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport { confirmDelete } from '../../../../../utils/commonFunctions';\r\n\r\nexport default function EmployeeDepartments() {\r\n    const { id } = useParams();\r\n    let { departmentsDropdown } = useSelector((state) => state?.department);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getDepartments());\r\n        funcGetEmpDepartments(id);\r\n    }, [dispatch]);\r\n\r\n    const funcGetEmpDepartments = (id) => {\r\n        dispatch(\r\n            getEmployeeDepartments(id, setLoading, (data) => {\r\n                setEmployeeDepartments(data);\r\n            }),\r\n        );\r\n    };\r\n\r\n    const columns = [\r\n        { field: 'departmentName', header: 'Name' },\r\n        { field: 'wage', header: 'Wage' },\r\n    ];\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeDeptId, setEmployeeDeptId] = useState(null);\r\n    const [employeeDepartments, setEmployeeDepartments] = useState([]);\r\n    const [data, setData] = useState({\r\n        departments: [],\r\n        wage: 0,\r\n    });\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        setData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (employeeDeptId) {\r\n            dispatch(\r\n                editEmployeeDepartment(employeeDeptId, { wage: data.wage }, setLoading, () => {\r\n                    funcGetEmpDepartments(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        } else {\r\n            dispatch(\r\n                addEmployeeDepartment({ ...data, employee: id }, setLoading, () => {\r\n                    funcGetEmpDepartments(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }\r\n    };\r\n\r\n    const onEdit = (id) => {\r\n        setEmployeeDeptId(id);\r\n        let _empDeptData = employeeDepartments.find((item) => item._id === id);\r\n        setData({ departments: [_empDeptData.department], wage: _empDeptData.wage });\r\n        setVisible(true);\r\n    };\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deleteEmployeeDepartment(col._id, () => {\r\n                    funcGetEmpDepartments(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Employee Department?');\r\n    };\r\n    const onClose = () => {\r\n        setVisible(false);\r\n        setData({\r\n            departments: [],\r\n            wage: 0,\r\n        });\r\n        setEmployeeDeptId(null);\r\n    };\r\n    let filterdDepartmentsDropdown = departmentsDropdown.filter((item) => !employeeDepartments.map((ed) => ed.department).includes(item.value));\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add Department\" onClick={() => setVisible(true)} />\r\n            <CustomTable data={employeeDepartments} columns={columns} onEdit={(e) => onEdit(e._id)} onDelete={onDelete} />\r\n\r\n            <CustomDialog title=\"Add\" visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomMultiselect\r\n                        col=\"12\"\r\n                        name=\"departments\"\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        options={employeeDeptId ? departmentsDropdown : filterdDepartmentsDropdown}\r\n                        disabled={employeeDeptId ? true : false}\r\n                    />\r\n                    <CustomInputNumber col=\"12\" name=\"wage\" data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n}\r\n","import api from '../../../services/api';\r\nimport EndPoints from '../../../services/endPoints';\r\nimport { hideLoaderAction, showLoaderAction } from '../loaderAction';\r\nimport { showToast } from '../toastAction';\r\n\r\nconst getEmployeeClasses = (employee, isClassLevel, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.EMPLOYEE_CLASSES, '', { employee, isClassLevel });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeClasses = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.EMPLOYEE_CLASSES, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\nconst editEmployeeClasses = (id, data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.EMPLOYEE_CLASSES + id, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst getEmployeeClaases = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.EMPLOYEE_CLASSES + employee);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\nconst deleteEmployeeClasses = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.EMPLOYEE_CLASSES + id);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nconst getEmployeeSubstitutionOptions = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.SUSTITITION_OPTIONS, '', { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeSubstitutionOptions = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.SUSTITITION_OPTIONS, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst editEmployeeSubstitutionOptions = (id, data, setLoading, next) => async () => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.SUSTITITION_OPTIONS + id, data);\r\n    if (res.success) {\r\n        next();\r\n    }\r\n    setLoading(false);\r\n};\r\nconst getSubstitutionOption = (substitutionOptionsId, returnData) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n    const res = await api('get', EndPoints.SUSTITITION_OPTIONS + substitutionOptionsId);\r\n\r\n    if (res.success) {\r\n        dispatch(hideLoaderAction());\r\n\r\n        if (returnData) {\r\n            returnData(res.data);\r\n        }\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\n\r\nconst deleteSubstitutionOption = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.SUSTITITION_OPTIONS + id);\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nexport {\r\n    getEmployeeClasses,\r\n    addEmployeeClasses,\r\n    getEmployeeClaases,\r\n    editEmployeeClasses,\r\n    deleteEmployeeClasses,\r\n    getEmployeeSubstitutionOptions,\r\n    addEmployeeSubstitutionOptions,\r\n    getSubstitutionOption,\r\n    deleteSubstitutionOption,\r\n    editEmployeeSubstitutionOptions,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { CustomDropDown, CustomInputNumber } from '../../../../../../shared/Input/AllInputs';\r\nimport { classesPayTypeOptions } from '../../../../../../utils/dropdownConstants';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport { addEmployeeClasses, editEmployeeClasses, getEmployeeClaases } from '../../../../../../redux/actions/EmployeeSettings/classesAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport formValidation from '../../../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../../../utils/commonFunctions';\r\n\r\nconst AddandEditClasses = ({ visible, setVisible, id, employeeClassId, setEmployeeClassId }) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeClasses, setEmployeeClassesData] = useState({});\r\n    const dispatch = useDispatch();\r\n\r\n    const onClose = () => {\r\n        setVisible(false);\r\n        setData(incrementalPay);\r\n        setEmployeeClassId(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (employeeClassId) {\r\n            funcGetEmpDepartments(employeeClassId);\r\n        }\r\n    }, [employeeClassId]);\r\n\r\n    const funcGetEmpDepartments = (id) => {\r\n        dispatch(\r\n            getEmployeeClaases(id, setLoading, (data) => {\r\n                setEmployeeClassesData(data);\r\n            }),\r\n        );\r\n    };\r\n\r\n    const incrementalPay = {\r\n        payType: 'INCREMENTAL_PAY',\r\n        oneToFiveClients: 0,\r\n        sixToTenClients: 0,\r\n        elevenToFifteenClients: 0,\r\n        sixteenToTwentyClients: 0,\r\n        twentyOneToTwentyFiveClients: 0,\r\n        twentySixPlusClients: 0,\r\n        noRegistrationPay: 0,\r\n    };\r\n\r\n    const payperClassPayload = {\r\n        payType: 'PAY_PER_CLASS',\r\n        payPerClassRate: 0,\r\n        noRegistrationPay: 0,\r\n    };\r\n\r\n    const PayPerClient = {\r\n        payType: 'PAY_PER_CLIENT',\r\n        baseRate: 0,\r\n        payPerClientRate: 0,\r\n        eachClientOver: [\r\n            {\r\n                noOfClients: 0,\r\n                rate: 0,\r\n            },\r\n            {\r\n                noOfClients: 0,\r\n                rate: 0,\r\n            },\r\n            {\r\n                noOfClients: 0,\r\n                rate: 0,\r\n            },\r\n        ],\r\n        maxPayPerClient: 0,\r\n        noRegistrationPay: 0,\r\n    };\r\n\r\n    const percentageRate = {\r\n        payType: 'PERCENTAGE_RATE',\r\n        percentage: 0,\r\n        noRegistrationPay: 0,\r\n    };\r\n\r\n    const [data, setData] = useState(incrementalPay);\r\n\r\n    useEffect(() => {\r\n        if (!employeeClassId) {\r\n            if (data?.payType === 'INCREMENTAL_PAY') {\r\n                setData(incrementalPay);\r\n            } else if (data?.payType === 'PAY_PER_CLASS') {\r\n                setData(payperClassPayload);\r\n            } else if (data?.payType === 'PAY_PER_CLIENT') {\r\n                setData(PayPerClient);\r\n            } else if (data?.payType === 'PERCENTAGE_RATE') {\r\n                setData(percentageRate);\r\n            }\r\n        }\r\n    }, [data?.payType]);\r\n\r\n    useEffect(() => {\r\n        if (employeeClassId && employeeClasses) {\r\n            const {\r\n                oneToFiveClients,\r\n                sixToTenClients,\r\n                elevenToFifteenClients,\r\n                sixteenToTwentyClients,\r\n                twentyOneToTwentyFiveClients,\r\n                twentySixPlusClients,\r\n                noRegistrationPay,\r\n                payPerClassRate,\r\n                baseRate,\r\n                payPerClientRate,\r\n                maxPayPerClient,\r\n                percentage,\r\n            } = employeeClasses;\r\n            let newData = {};\r\n            switch (employeeClasses?.payType) {\r\n                case 'INCREMENTAL_PAY':\r\n                    newData = {\r\n                        payType: 'INCREMENTAL_PAY',\r\n                        oneToFiveClients,\r\n                        sixToTenClients,\r\n                        elevenToFifteenClients,\r\n                        sixteenToTwentyClients,\r\n                        twentyOneToTwentyFiveClients,\r\n                        twentySixPlusClients,\r\n                        noRegistrationPay,\r\n                    };\r\n                    break;\r\n                case 'PAY_PER_CLASS':\r\n                    newData = {\r\n                        payType: 'PAY_PER_CLASS',\r\n                        payPerClassRate,\r\n                        noRegistrationPay,\r\n                    };\r\n                    break;\r\n                case 'PAY_PER_CLIENT':\r\n                    newData = {\r\n                        payType: 'PAY_PER_CLIENT',\r\n                        baseRate,\r\n                        payPerClientRate,\r\n                        eachClientOver: employeeClasses.eachClientOver.map((item) => ({\r\n                            noOfClients: item.noOfClients,\r\n                            rate: item.rate,\r\n                        })),\r\n                        maxPayPerClient,\r\n                        noRegistrationPay,\r\n                    };\r\n                    break;\r\n                case 'PERCENTAGE_RATE':\r\n                    newData = {\r\n                        payType: 'PERCENTAGE_RATE',\r\n                        percentage,\r\n                        noRegistrationPay,\r\n                    };\r\n                    break;\r\n                default:\r\n                    newData = {};\r\n                    break;\r\n            }\r\n            setData(newData);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [employeeClasses]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const handleChange1 = (index, key, value) => {\r\n        const newList = [...data.eachClientOver]; // Use data instead of PayPerClient\r\n        newList[index][key] = value;\r\n        setData((prev) => ({ ...prev, eachClientOver: newList }));\r\n    };\r\n\r\n    const handleSave = () => {\r\n        let ignore = [];\r\n        if (data?.payType === 'INCREMENTAL_PAY') {\r\n            ignore = ['payPerClassRate', 'baseRate', 'payPerClientRate', 'maxPayPerClient', 'percentage'];\r\n        } else if (data?.payType === 'PAY_PER_CLASS') {\r\n            ignore = [\r\n                'oneToFiveClients',\r\n                'sixToTenClients',\r\n                'elevenToFifteenClients',\r\n                'sixteenToTwentyClients',\r\n                'twentyOneToTwentyFiveClients',\r\n                'twentySixPlusClients',\r\n                'baseRate',\r\n                'payPerClientRate',\r\n                'maxPayPerClient',\r\n                'percentage',\r\n            ];\r\n        } else if (data?.payType === 'PAY_PER_CLIENT') {\r\n            ignore = [\r\n                'oneToFiveClients',\r\n                'sixToTenClients',\r\n                'elevenToFifteenClients',\r\n                'sixteenToTwentyClients',\r\n                'twentyOneToTwentyFiveClients',\r\n                'twentySixPlusClients',\r\n                'percentage',\r\n                'payPerClassRate',\r\n            ];\r\n        } else {\r\n            ignore = [\r\n                'oneToFiveClients',\r\n                'sixToTenClients',\r\n                'elevenToFifteenClients',\r\n                'sixteenToTwentyClients',\r\n                'twentyOneToTwentyFiveClients',\r\n                'twentySixPlusClients',\r\n                'baseRate',\r\n                'payPerClientRate',\r\n                'maxPayPerClient',\r\n                'payPerClassRate',\r\n            ];\r\n        }\r\n        if (showFormErrors(data, setData, ignore)) {\r\n            if (employeeClassId) {\r\n                dispatch(\r\n                    editEmployeeClasses(employeeClassId, data, setLoading, () => {\r\n                        onClose();\r\n                    }),\r\n                );\r\n            }\r\n            dispatch(\r\n                addEmployeeClasses({ ...data, employee: id }, setLoading, () => {\r\n                    onClose();\r\n                }),\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <CustomDialog title={employeeClassId ? 'Edit' : 'Add'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomDropDown\r\n                        name=\"payType\"\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        options={classesPayTypeOptions}\r\n                        col={12}\r\n                        disabled={employeeClassId ? true : false}\r\n                    />\r\n                    {data?.payType === 'INCREMENTAL_PAY' && (\r\n                        <>\r\n                            <CustomInputNumber label=\"1-5 Clients\" name=\"oneToFiveClients\" data={data} onChange={handleChange} />\r\n                            <CustomInputNumber label=\"6-10 Clients\" name=\"sixToTenClients\" data={data} onChange={handleChange} />\r\n                            <CustomInputNumber label=\"11-15 Clients\" name=\"elevenToFifteenClients\" data={data} onChange={handleChange} />\r\n                            <CustomInputNumber label=\"16-20 Clients\" name=\"sixteenToTwentyClients\" data={data} onChange={handleChange} />\r\n                            <CustomInputNumber label=\"21-25 Clients\" data={data} name=\"twentyOneToTwentyFiveClients\" onChange={handleChange} />\r\n                            <CustomInputNumber label=\"26+ Clients\" data={data} name=\"twentySixPlusClients\" onChange={handleChange} />\r\n                            <CustomInputNumber name=\"noRegistrationPay\" data={data} onChange={handleChange} />\r\n                        </>\r\n                    )}\r\n\r\n                    {data?.payType === 'PAY_PER_CLASS' && (\r\n                        <>\r\n                            <CustomInputNumber data={data} name=\"payPerClassRate\" onChange={handleChange} />\r\n                            <CustomInputNumber name=\"noRegistrationPay\" data={data} onChange={handleChange} />\r\n                        </>\r\n                    )}\r\n                    {data?.payType === 'PAY_PER_CLIENT' && (\r\n                        <>\r\n                            <CustomInputNumber name=\"baseRate\" data={data} onChange={handleChange} />\r\n                            <CustomInputNumber name=\"payPerClientRate\" data={data} onChange={handleChange} />\r\n                            {data?.eachClientOver?.map((client, index) => (\r\n                                <div className=\" col-12 \" key={index}>\r\n                                    <div className=\"grid\">\r\n                                        <CustomInputNumber\r\n                                            name=\"noOfClients\"\r\n                                            value={client?.noOfClients}\r\n                                            onChange={(e) => handleChange1(index, 'noOfClients', e.value)}\r\n                                            col={6}\r\n                                        />\r\n                                        <CustomInputNumber name=\"rate\" value={client?.rate} onChange={(e) => handleChange1(index, 'rate', e.value)} col={6} />\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                            <CustomInputNumber data={data} name=\"noRegistrationPay\" onChange={handleChange} />\r\n                            <CustomInputNumber data={data} name=\"maxPayPerClient\" onChange={handleChange} />\r\n                        </>\r\n                    )}\r\n                    {data?.payType === 'PERCENTAGE_RATE' && (\r\n                        <>\r\n                            <CustomInputNumber data={data} name=\"percentage\" onChange={handleChange} />\r\n                            <CustomInputNumber name=\"noRegistrationPay\" data={data} onChange={handleChange} />\r\n                        </>\r\n                    )}\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddandEditClasses;\r\n","import React, { useState, useEffect, useId } from 'react';\r\nimport { DataView } from 'primereact/dataview';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CustomCard, { CustomFilterCard, CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport { deleteEmployeeClasses, editEmployeeClasses, getEmployeeClasses } from '../../../../../../redux/actions/EmployeeSettings/classesAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport AddandEditClasses from './AddandEditClasses';\r\nimport { confirmDelete } from '../../../../../../utils/commonFunctions';\r\nimport { CustomDropDown, CustomInputSwitch } from '../../../../../../shared/Input/AllInputs';\r\nimport PrimaryButton from '../../../../../../shared/Button/CustomButton';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { getEmployees } from '../../../../../../redux/actions/EmployeeSettings/employeesAction';\r\nimport { getLevels } from '../../../../../../redux/actions/ScheduleSettings/levelActions';\r\n\r\nexport default function PaySetup() {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n\r\n    const [openSimilar, setOpenSimilarTo] = useState(false);\r\n    const [data, setData] = useState({\r\n        isClassLevel: '',\r\n        isDefaultPay: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        funcGetEmpClasses(id, data?.isClassLevel);\r\n    }, [dispatch, data?.isClassLevel]);\r\n    useEffect(() => {\r\n        dispatch(getEmployees(0));\r\n    }, [dispatch]);\r\n    useEffect(() => {\r\n        dispatch(getLevels());\r\n    }, [dispatch]);\r\n\r\n    const { levelDropdown } = useSelector((state) => state.level);\r\n    const uniqueId = useId();\r\n\r\n    const { employeesDropdown } = useSelector((state) => state.employees);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        setData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    console.log(data, 'data');\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeClassId, setEmployeeClassId] = useState(null);\r\n    const [employeeClasses, setEmployeeClasses] = useState([]);\r\n    useEffect(() => {\r\n        setData((prev) => ({ ...prev, isClassLevel: employeeClasses?.isClassLevel }));\r\n    }, [employeeClasses?.isClassLevel]);\r\n    console.log(employeeClasses, 'employeeClasses');\r\n\r\n    const funcGetEmpClasses = (id, classLevel) => {\r\n        dispatch(\r\n            getEmployeeClasses(id, classLevel, setLoading, (data) => {\r\n                setEmployeeClasses(data);\r\n            }),\r\n        );\r\n    };\r\n\r\n    const onEdit = (id) => {\r\n        setEmployeeClassId(id?._id);\r\n        // let _empDeptData = employeeDepartments.find((item) => item._id === id);\r\n        // setData({ departments: [_empDeptData.department], wage: _empDeptData.wage });\r\n        setVisible(true);\r\n    };\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deleteEmployeeClasses(col._id, () => {\r\n                    funcGetEmpClasses(id, data?.isClassLevel);\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Employee Classes?');\r\n    };\r\n    const handleSwitchChange = (id, active) => {\r\n        setEmployeeClasses(\r\n            employeeClasses?.list?.map((item) => {\r\n                if (item._id === id) {\r\n                    dispatch(editEmployeeClasses(item?._id, { isDefaultPay: active }, setLoading, () => {}));\r\n                    return { ...item, isDefaultPay: active };\r\n                } else {\r\n                    return { ...item, isDefaultPay: false };\r\n                }\r\n            }),\r\n        );\r\n    };\r\n\r\n    const itemTemplate = (item) => {\r\n        return (\r\n            <div className=\"col-12 grid py-2\" key={uniqueId}>\r\n                <div className=\"col-10\">{renderRow(item)}</div>\r\n                <div className=\"col-1 my-auto\">\r\n                    <CustomInputSwitch\r\n                        name=\"isDefaultPay\"\r\n                        label=\"Default Pay\"\r\n                        checked={item?.isDefaultPay}\r\n                        onChange={(e) => handleSwitchChange(item._id, e.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"col-1 my-auto\">\r\n                    <i className=\"mx-3 cursor-pointer pi pi-pencil\" onClick={() => onEdit(item)} />\r\n                    <i className=\"mx-3 cursor-pointer pi pi-trash\" onClick={() => onDelete(item)} />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    const renderRow = (item) => {\r\n        switch (item.payType) {\r\n            case 'INCREMENTAL_PAY':\r\n                return (\r\n                    <div className=\"flex\">\r\n                        <div className=\"mx-3 flex w-2\">\r\n                            <div className=\"my-auto mr-4\">{item.index}</div>\r\n                            <div>\r\n                                <div className=\"font-medium\">Pay</div>\r\n                                <div>Incremental Pay</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium \">1-5 Clients</div>\r\n                            <div>${item?.oneToFiveClients}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">6-10 Clients</div>\r\n                            <div>${item?.sixToTenClients}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">11-15 Clients</div>\r\n                            <div>${item?.elevenToFifteenClients}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">16-20 Clients</div>\r\n                            <div>${item?.sixteenToTwentyClients}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">21-25 Clients</div>\r\n                            <div>${item?.twentyOneToTwentyFiveClients}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">26+ Clients</div>\r\n                            <div>${item?.twentySixPlusClients}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">No Registration Pay</div>\r\n                            <div>${item?.noRegistrationPay}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case 'PAY_PER_CLIENT':\r\n                return (\r\n                    <div className=\"flex\">\r\n                        <div className=\"mx-3 flex w-2\">\r\n                            <div className=\"my-auto mr-4\">{item.index}</div>\r\n                            <div>\r\n                                <div className=\"font-medium\">Pay</div>\r\n                                <div>Pay Per Client</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">Base Rate</div>\r\n                            <div>${item?.baseRate}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">Per Client</div>\r\n                            <div>${item?.payPerClientRate}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"ml-3\">\r\n                            <div className=\"font-medium\">For each client over</div>\r\n                            <div>{item?.eachClientOver[0].noOfClients}</div>\r\n                        </div>\r\n                        <div className=\"ml-1 mr-3\">\r\n                            <div className=\"font-medium\">Add</div>\r\n                            <div>${item?.eachClientOver[0].rate}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"ml-3\">\r\n                            <div className=\"font-medium\">For each client over</div>\r\n                            <div>{item?.eachClientOver[1].noOfClients}</div>\r\n                        </div>\r\n                        <div className=\"ml-1 mr-3\">\r\n                            <div className=\"font-medium\">Add</div>\r\n                            <div>${item?.eachClientOver[1].rate}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"ml-3\">\r\n                            <div className=\"font-medium\">For each client over</div>\r\n                            <div>{item?.eachClientOver[2].noOfClients}</div>\r\n                        </div>\r\n                        <div className=\"ml-1 mr-3\">\r\n                            <div className=\"font-medium\">Add</div>\r\n                            <div>${item?.eachClientOver[2].rate}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-2\">\r\n                            <div className=\"font-medium\">No Registration Pay</div>\r\n                            <div>${item?.noRegistrationPay}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-2\">\r\n                            <div className=\"font-medium\">Max Pay</div>\r\n                            <div>${item?.noRegistrationPay}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case 'PAY_PER_CLASS':\r\n                return (\r\n                    <div className=\"flex\">\r\n                        <div className=\"mx-3 flex w-2\">\r\n                            <div className=\"my-auto mr-4\">{item.index}</div>\r\n                            <div>\r\n                                <div className=\"font-medium\">Pay</div>\r\n                                <div>Pay Per Class</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mx-3 w-1\">\r\n                            <div className=\"font-medium\">Price</div>\r\n                            <div>${item?.payPerClassRate}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">No Registration Pay</div>\r\n                            <div>${item?.noRegistrationPay}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case 'PERCENTAGE_RATE':\r\n                return (\r\n                    <div className=\"flex\">\r\n                        <div className=\"mx-3 flex w-2\">\r\n                            <div className=\"my-auto mr-4\">{item.index}</div>\r\n                            <div>\r\n                                <div className=\"font-medium\">Pay</div>\r\n                                <div>% Rate</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mx-3 w-1\">\r\n                            <div className=\"font-medium\">Percentage</div>\r\n                            <div>{item?.percentage}%</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">No Registration Pay</div>\r\n                            <div>${item?.noRegistrationPay}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            default:\r\n                return (\r\n                    <div className=\"grid\">\r\n                        <div className=\"col-1\">{item.index}</div>\r\n                        <div className=\"col-11\">{item.payType}</div>\r\n                    </div>\r\n                );\r\n        }\r\n    };\r\n\r\n    const handleSave = () => {};\r\n    return (\r\n        <div>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} extraClass=\"align-items-end \">\r\n                <div className=\" flex justify-content-between align-items-end\">\r\n                    <CustomDropDown name=\"isClassLevel\" col={6} options={levelDropdown} optionLabel=\"name\" data={data} onChange={handleChange} />\r\n                    <PrimaryButton name=\"Similar To\" className=\"w-12rem\" label=\"Similar To\" onClick={() => setOpenSimilarTo(true)} />\r\n                </div>\r\n            </CustomFilterCard>\r\n            <CustomCard col=\"12\" title=\"Pay\">\r\n                <DataView value={employeeClasses?.list} itemTemplate={itemTemplate} paginator rows={5} />\r\n                <AddandEditClasses\r\n                    visible={visible}\r\n                    setVisible={setVisible}\r\n                    id={id}\r\n                    employeeClassId={employeeClassId}\r\n                    setEmployeeClassId={setEmployeeClassId}\r\n                />\r\n            </CustomCard>\r\n            <CustomDialog title={'Similar To'} visible={openSimilar} onCancel={() => setOpenSimilarTo(false)} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"employee\" col={12} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport CustomCard, { CustomFilterCard, CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport {\r\n    addEmployeeSubstitutionOptions,\r\n    deleteSubstitutionOption,\r\n    editEmployeeSubstitutionOptions,\r\n    getEmployeeSubstitutionOptions,\r\n    getSubstitutionOption,\r\n} from '../../../../../../redux/actions/EmployeeSettings/classesAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomDropDown, CustomInput } from '../../../../../../shared/Input/AllInputs';\r\nimport { substitutionPriorityOptions } from '../../../../../../utils/dropdownConstants';\r\nimport { confirmDelete, showFormErrors } from '../../../../../../utils/commonFunctions';\r\nimport formValidation from '../../../../../../utils/validations';\r\n\r\nexport default function SubstituteOptionSetup() {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    const [Substitute, setSubstitute] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [visible, setVisible] = useState(false);\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        priority: 'MEDIUM',\r\n    });\r\n\r\n    const [substitutionOptionsId, setSubstituteOptionsId] = useState('');\r\n    useEffect(() => {\r\n        funcGetEmpSubstitution(id);\r\n    }, []);\r\n    const funcGetEmpSubstitution = (id) => {\r\n        dispatch(\r\n            getEmployeeSubstitutionOptions(id, setLoading, (data) => {\r\n                setSubstitute(data);\r\n            }),\r\n        );\r\n    };\r\n    const onEdit = (col) => {\r\n        setSubstituteOptionsId(col?._id);\r\n        setVisible(true);\r\n    };\r\n    useEffect(() => {\r\n        if (substitutionOptionsId) {\r\n            dispatch(\r\n                getSubstitutionOption(substitutionOptionsId, (data) => {\r\n                    setData({\r\n                        name: data.name,\r\n                        priority: data.priority,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [substitutionOptionsId, dispatch]);\r\n\r\n    const columns = [\r\n        { field: 'name', header: 'Name' },\r\n        { field: 'priority', header: 'Priority' },\r\n    ];\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const onClose = () => {\r\n        setVisible(false);\r\n        setData({\r\n            name: '',\r\n            priority: 'MEDIUM',\r\n        });\r\n        setSubstituteOptionsId(null);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (substitutionOptionsId) {\r\n                dispatch(\r\n                    editEmployeeSubstitutionOptions(substitutionOptionsId, { ...data, employee: id }, setLoading, () => {\r\n                        funcGetEmpSubstitution(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addEmployeeSubstitutionOptions({ ...data, employee: id }, setLoading, () => {\r\n                        funcGetEmpSubstitution(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deleteSubstitutionOption(col._id, () => {\r\n                    funcGetEmpSubstitution(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Substitution Option?');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} />\r\n            <CustomCard col=\"12\" title=\"Classes\">\r\n                <CustomTable data={Substitute} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n            </CustomCard>\r\n            <CustomDialog title={substitutionOptionsId ? 'Edit' : 'Add'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomInput col=\"12\" name=\"name\" data={data} onChange={handleChange} />\r\n                    <CustomDropDown name=\"priority\" data={data} onChange={handleChange} options={substitutionPriorityOptions} col={12} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport CustomTabView from '../../../../../../shared/TabView/CustomTabView';\r\nimport PaySetup from './PaySetup';\r\nimport SubstituteOptionSetup from './SubstituteOptionSetup';\r\n\r\nconst ClassesSetup = () => {\r\n    const tabs = [\r\n        { title: 'Pay', content: <PaySetup /> },\r\n        { title: 'Substitute Option', content: <SubstituteOptionSetup /> },\r\n    ];\r\n    return (\r\n        <>\r\n            <CustomTabView name=\"classes\" tabs={tabs} useIndex={true} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ClassesSetup;\r\n","import api from '../../../services/api';\r\nimport EndPoints from '../../../services/endPoints';\r\nimport { hideLoaderAction, showLoaderAction } from '../loaderAction';\r\nimport { showToast } from '../toastAction';\r\n\r\nconst getEmployeeAppointmentPay = (employee, isClassLevel, type, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.EMPLOYEE_APPOINTMENT, '', { employee, type: type, isClassLevel });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeAppointmentPay = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.EMPLOYEE_APPOINTMENT, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\nconst isDefaultAppointmentPay = (data, next) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n\r\n    const res = await api('post', EndPoints.EMPLOYEE_APPOINTMENT_IS_DEFAULT, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\nconst editEmployeeAppointmentPay = (id, data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.EMPLOYEE_APPOINTMENT + id, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst getEmployeeAppartment = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.EMPLOYEE_APPOINTMENT + employee);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\nconst deletetEmployeeAppartment = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.EMPLOYEE_APPOINTMENT + id);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nconst getEmployeeSubstitutionOptions = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.SUSTITITION_OPTIONS, '', { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeBonus = (type, data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n    let res;\r\n    if (type === 'appointment') {\r\n        res = await api('post', EndPoints.EMPLOYEE_APPOINTMENT, data);\r\n    } else {\r\n        res = await api('post', EndPoints.SALES_COMMISSION, data);\r\n    }\r\n\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst editEmployeeBonus = (type, id, data, setLoading, next) => async () => {\r\n    setLoading(true);\r\n    let res;\r\n    if (type === 'appointment') {\r\n        res = await api('put', EndPoints.EMPLOYEE_APPOINTMENT + id, data);\r\n    } else {\r\n        res = await api('put', EndPoints.SALES_COMMISSION + id, data);\r\n    }\r\n\r\n    if (res.success) {\r\n        next();\r\n    }\r\n    setLoading(false);\r\n};\r\nconst getEmployeeBonus = (type, id, returnData) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n    let res;\r\n    if (type === 'appointment') {\r\n        res = await api('get', EndPoints.EMPLOYEE_APPOINTMENT + id);\r\n    } else {\r\n        res = await api('get', EndPoints.SALES_COMMISSION + id);\r\n    }\r\n\r\n    if (res.success) {\r\n        dispatch(hideLoaderAction());\r\n\r\n        if (returnData) {\r\n            returnData(res.data);\r\n        }\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\n\r\nconst deleteEmployeeBonus = (type, id, next) => async (dispatch) => {\r\n    let res;\r\n    if (type === 'appointment') {\r\n        res = await api('delete', EndPoints.EMPLOYEE_APPOINTMENT + id);\r\n    } else {\r\n        res = await api('delete', EndPoints.SALES_COMMISSION + id);\r\n    }\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nexport {\r\n    getEmployeeAppointmentPay,\r\n    addEmployeeAppointmentPay,\r\n    getEmployeeAppartment,\r\n    editEmployeeAppointmentPay,\r\n    deletetEmployeeAppartment,\r\n    getEmployeeSubstitutionOptions,\r\n    addEmployeeBonus,\r\n    getEmployeeBonus,\r\n    deleteEmployeeBonus,\r\n    editEmployeeBonus,\r\n    isDefaultAppointmentPay,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    addEmployeeAppointmentPay,\r\n    editEmployeeAppointmentPay,\r\n    getEmployeeAppartment,\r\n} from '../../../../../../redux/actions/EmployeeSettings/appointmentAction';\r\nimport formValidation from '../../../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../../../utils/commonFunctions';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport { CustomDropDown, CustomInput, CustomInputNumber } from '../../../../../../shared/Input/AllInputs';\r\nimport { AppointmentPayPriorityOptions, amountTypeOptions } from '../../../../../../utils/dropdownConstants';\r\n\r\nconst AddandEditAppointmentPay = ({ funcGetEmpAppointment, id, setVisible, visible }) => {\r\n    const dispatch = useDispatch();\r\n    const initialState = {\r\n        name: '',\r\n        priority: 'PER-EVENT',\r\n        type: 'PAY',\r\n        pay: 0,\r\n        amountType: 'FIXED',\r\n    };\r\n    const [data, setData] = useState(initialState);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeAppartId, setEmployeeAppartId] = useState(null);\r\n    useEffect(() => {\r\n        if (employeeAppartId) {\r\n            dispatch(\r\n                getEmployeeAppartment(employeeAppartId, setLoading, (data) => {\r\n                    setData({\r\n                        name: data.name,\r\n                        priority: data.priority,\r\n                        type: 'PAY',\r\n                        pay: data.pay,\r\n                        amountType: data.amountType,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [employeeAppartId, dispatch]);\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (employeeAppartId) {\r\n                dispatch(\r\n                    editEmployeeAppointmentPay(employeeAppartId, { ...data }, setLoading, () => {\r\n                        funcGetEmpAppointment(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addEmployeeAppointmentPay({ ...data, employee: id }, setLoading, () => {\r\n                        funcGetEmpAppointment(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            }\r\n        }\r\n    };\r\n    const onClose = () => {\r\n        setEmployeeAppartId(null);\r\n        setData(initialState);\r\n        setVisible(false);\r\n    };\r\n    return (\r\n        <>\r\n            <CustomDialog title={employeeAppartId ? 'Edit' : 'Add'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomInput col=\"12\" name=\"name\" data={data} onChange={handleChange} />\r\n                    <CustomDropDown name=\"priority\" data={data} onChange={handleChange} options={AppointmentPayPriorityOptions} col={12} />\r\n                    <CustomInputNumber col={8} name=\"pay\" data={data} onChange={handleChange} />\r\n                    <CustomDropDown label=\"\" name=\"amountType\" options={amountTypeOptions} data={data} onChange={handleChange} col={4} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddandEditAppointmentPay;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CustomFilterCard, CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { useParams } from 'react-router-dom';\r\nimport { CustomDropDown, CustomInputNumber } from '../../../../../../shared/Input/AllInputs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    deletetEmployeeAppartment,\r\n    editEmployeeAppointmentPay,\r\n    getEmployeeAppointmentPay,\r\n    isDefaultAppointmentPay,\r\n} from '../../../../../../redux/actions/EmployeeSettings/appointmentAction';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport { confirmDelete } from '../../../../../../utils/commonFunctions';\r\nimport formValidation from '../../../../../../utils/validations';\r\nimport { getLevels } from '../../../../../../redux/actions/ScheduleSettings/levelActions';\r\nimport PrimaryButton from '../../../../../../shared/Button/CustomButton';\r\nimport AddandEditAppointmentPay from './AddandEditAppointmentPay';\r\n\r\nconst PaySetup = () => {\r\n    const dispatch = useDispatch();\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeAppartId, setEmployeeAppartId] = useState(null);\r\n    const [appointmentData, setAppointmentData] = useState([]);\r\n\r\n    const [defaultPay, setDefaultPay] = useState(false);\r\n\r\n    const { id } = useParams();\r\n    const [data, setData] = useState({\r\n        isDefaultPay: '',\r\n        isClassLevel: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        funcGetEmpAppointment(id);\r\n    }, [data?.isClassLevel]);\r\n    const funcGetEmpAppointment = (id) => {\r\n        dispatch(\r\n            getEmployeeAppointmentPay(id, data?.isClassLevel, 'PAY', setLoading, (data) => {\r\n                setAppointmentData(data);\r\n            }),\r\n        );\r\n    };\r\n    useEffect(() => {\r\n        dispatch(getLevels());\r\n    }, [dispatch]);\r\n    useEffect(() => {\r\n        setData((prev) => ({ ...prev, isClassLevel: appointmentData?.isClassLevel }));\r\n    }, [appointmentData?.isClassLevel]);\r\n    const { levelDropdown } = useSelector((state) => state.level);\r\n\r\n    const onClose = () => {\r\n        setData((prev) => ({ ...prev, isDefaultPay: '' }));\r\n        setDefaultPay(false);\r\n    };\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const columns = [\r\n        { field: 'name', header: 'Name' },\r\n        { field: 'priority', header: 'Priority' },\r\n        { field: 'pay', header: 'Pay' },\r\n    ];\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deletetEmployeeAppartment(col._id, () => {\r\n                    funcGetEmpAppointment(id);\r\n                    setVisible(false);\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Appartment Pay?');\r\n    };\r\n    const onEdit = (col) => {\r\n        setEmployeeAppartId(col?._id);\r\n        setVisible(true);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        setAppointmentData((prevData) => ({\r\n            ...prevData,\r\n            list: prevData.list.map((item) => ({\r\n                ...item,\r\n                pay: data?.isDefaultPay,\r\n            })),\r\n        }));\r\n        dispatch(\r\n            isDefaultAppointmentPay({ pay: data.isDefaultPay }, () => {\r\n                funcGetEmpAppointment(id);\r\n                onClose();\r\n            }),\r\n        );\r\n    };\r\n\r\n    console.log('data>>', appointmentData?.list);\r\n\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} extraClass=\"align-items-end\">\r\n                <div className=\"flex align-items-end\">\r\n                    <CustomDropDown name=\"isClassLevel\" col={6} options={levelDropdown} optionLabel=\"name\" data={data} onChange={handleChange} />\r\n                    <PrimaryButton name=\"\" className=\"w-12rem\" label=\"Default Pay\" onClick={() => setDefaultPay(true)} />\r\n                </div>\r\n            </CustomFilterCard>\r\n            <CustomTable data={appointmentData?.list} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n            <AddandEditAppointmentPay funcGetEmpAppointment={funcGetEmpAppointment} id={id} setVisible={setVisible} visible={visible} />\r\n            <CustomDialog title=\"Default Pay\" visible={defaultPay} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomInputNumber col=\"12\" name=\"isDefaultPay\" label=\"Default\" data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PaySetup;\r\n","import api from '../../../services/api';\r\nimport EndPoints from '../../../services/endPoints';\r\nimport { hideLoaderAction, showLoaderAction } from '../loaderAction';\r\nimport { showToast } from '../toastAction';\r\n\r\nconst getEmployeeSalesItem = (employee, type, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.SALES_COMMISSION, '', { employee, type: type });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeSalesItem = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.SALES_COMMISSION, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\nconst editEmployeeSalesItem = (id, data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.SALES_COMMISSION + id, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst getEmployeeSaleItem = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.SALES_COMMISSION + employee);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\nconst deletetEmployeeSaleItem = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.SALES_COMMISSION + id);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nconst getEmployeeSubstitutionOptions = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.SUSTITITION_OPTIONS, '', { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeAppartmentBonus = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.EMPLOYEE_APPOINTMENT, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst editEmployeeSubstitutionOptions = (id, data, setLoading, next) => async () => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.EMPLOYEE_APPOINTMENT + id, data);\r\n    if (res.success) {\r\n        next();\r\n    }\r\n    setLoading(false);\r\n};\r\nconst getEmployeeAppartmentBonus = (id, returnData) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n    const res = await api('get', EndPoints.EMPLOYEE_APPOINTMENT + id);\r\n\r\n    if (res.success) {\r\n        dispatch(hideLoaderAction());\r\n\r\n        if (returnData) {\r\n            returnData(res.data);\r\n        }\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\n\r\nconst deleteSubstitutionOption = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.SUSTITITION_OPTIONS + id);\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nexport {\r\n    getEmployeeSalesItem,\r\n    addEmployeeSalesItem,\r\n    getEmployeeSaleItem,\r\n    editEmployeeSalesItem,\r\n    deletetEmployeeSaleItem,\r\n    getEmployeeSubstitutionOptions,\r\n    addEmployeeAppartmentBonus,\r\n    getEmployeeAppartmentBonus,\r\n    deleteSubstitutionOption,\r\n    editEmployeeSubstitutionOptions,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { CustomFilterCard, CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomDropDown, CustomInput, CustomInputNumber, CustomMultiselect } from '../../../../../../shared/Input/AllInputs';\r\nimport { amountTypeOptions, bonusTypeConstantsOptions, durationOptions, servicesOptions } from '../../../../../../utils/dropdownConstants';\r\nimport {\r\n    addEmployeeBonus,\r\n    deleteEmployeeBonus,\r\n    editEmployeeBonus,\r\n    getEmployeeAppointmentPay,\r\n    getEmployeeBonus,\r\n} from '../../../../../../redux/actions/EmployeeSettings/appointmentAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport formValidation from '../../../../../../utils/validations';\r\nimport { confirmDelete, showFormErrors } from '../../../../../../utils/commonFunctions';\r\nimport { getEmployeeSalesItem } from '../../../../../../redux/actions/EmployeeSettings/salesCommssionAction';\r\n\r\nconst BonusSetup = ({ type }) => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n\r\n    const initialState = {\r\n        bonusType: 'SERVICE_VALUE', //SINGLE_CLIENT,SERVICE_VALUE\r\n        sessionsValue: 0,\r\n        ofSessions: 0, //sessionsValue,ofSessions\r\n        over: 0,\r\n        duration: 'DAYS',\r\n        bonusAmount: 0,\r\n        type: 'BONUS',\r\n        amountType: 'FIXED',\r\n        services: ['Private Sessions'],\r\n    };\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeAppartBonusId, setemployeeAppartBonusId] = useState(null);\r\n    const [appointmentData, setAppointmentData] = useState([]);\r\n\r\n    const [data, setData] = useState(initialState);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        funcGetEmpAppointment(id);\r\n    }, []);\r\n    const funcGetEmpAppointment = (id) => {\r\n        if (type === 'appointment') {\r\n            dispatch(\r\n                getEmployeeAppointmentPay(id, '', 'BONUS', setLoading, (data) => {\r\n                    setAppointmentData(data);\r\n                }),\r\n            );\r\n        } else {\r\n            dispatch(\r\n                getEmployeeSalesItem(id, 'BONUS', setLoading, (data) => {\r\n                    setAppointmentData(data);\r\n                }),\r\n            );\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (employeeAppartBonusId) {\r\n            dispatch(\r\n                getEmployeeBonus(type, employeeAppartBonusId, (data) => {\r\n                    setData({\r\n                        bonusType: data.bonusType,\r\n                        sessionsValue: data.sessionsValue,\r\n                        ofSessions: data.ofSessions,\r\n                        over: data.selectTimeframe.over,\r\n                        duration: data.selectTimeframe.duration,\r\n                        bonusAmount: data.bonusAmount,\r\n                        type: 'BONUS',\r\n                        amountType: data.amountType,\r\n                        services: data.services,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [employeeAppartBonusId, dispatch]);\r\n\r\n    const onClose = () => {\r\n        setemployeeAppartBonusId(null);\r\n        setData(initialState);\r\n        setVisible(false);\r\n    };\r\n\r\n    const onEdit = (col) => {\r\n        setemployeeAppartBonusId(col?._id);\r\n        setVisible(true);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        let ignore = [];\r\n        if (data?.bonusType === 'SINGLE_CLIENT') {\r\n            ignore = ['sessionsValue'];\r\n        } else {\r\n            ignore = ['ofSessions'];\r\n        }\r\n        if (showFormErrors(data, setData, ignore)) {\r\n            const { over, duration, ...rest } = data;\r\n            if (employeeAppartBonusId) {\r\n                dispatch(\r\n                    editEmployeeBonus(\r\n                        type,\r\n                        employeeAppartBonusId,\r\n                        {\r\n                            ...rest,\r\n                            selectTimeframe: {\r\n                                over,\r\n                                duration,\r\n                            },\r\n                        },\r\n                        setLoading,\r\n                        () => {\r\n                            funcGetEmpAppointment(id);\r\n                            onClose();\r\n                        },\r\n                    ),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addEmployeeBonus(\r\n                        type,\r\n                        {\r\n                            ...rest,\r\n                            selectTimeframe: {\r\n                                over,\r\n                                duration,\r\n                            },\r\n                            employee: id,\r\n                        },\r\n                        setLoading,\r\n                        () => {\r\n                            funcGetEmpAppointment(id);\r\n                            onClose();\r\n                        },\r\n                    ),\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deleteEmployeeBonus(type, col._id, () => {\r\n                    funcGetEmpAppointment(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Bonus?');\r\n    };\r\n    const columns = [\r\n        { field: 'bonusType', body: (r) => (r.bonusType === 'SERVICE_VALUE' ? 'Service Value' : 'Single Client'), header: 'Bonus Type' },\r\n        { field: 'Session', body: (r) => (r.bonusType === 'SERVICE_VALUE' ? r.sessionsValue : r.ofSessions), header: 'Value' },\r\n        { field: 'selectTimeframe.over', body: (r) => r.selectTimeframe.over + ' ' + r.selectTimeframe.duration.toLowerCase(), header: 'Time Frame' },\r\n        { field: 'bonusAmount', body: (r) => (r.amountType === 'FIXED' ? '$' + r.bonusAmount : r.bonusAmount + '%'), header: 'Bonus Amount' },\r\n\r\n        { field: 'services', body: (r) => r.services.join(','), header: 'Services' },\r\n    ];\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} />\r\n            <CustomTable data={type === 'appointment' ? appointmentData?.list : appointmentData} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n\r\n            <CustomDialog\r\n                title={employeeAppartBonusId ? 'Edit' : 'Add'}\r\n                visible={visible}\r\n                onCancel={onClose}\r\n                loading={loading}\r\n                onSave={handleSave}\r\n                width=\"90vh\"\r\n            >\r\n                <CustomGridLayout>\r\n                    <CustomDropDown label=\"\" name=\"bonusType\" data={data} onChange={handleChange} options={bonusTypeConstantsOptions} col={6} />\r\n                    {data?.bonusType === 'SINGLE_CLIENT' ? (\r\n                        <CustomInputNumber col={6} label=\"No of Sessions\" name=\"ofSessions\" data={data} onChange={handleChange} />\r\n                    ) : (\r\n                        <CustomInputNumber col={6} name=\"sessionsValue\" data={data} onChange={handleChange} />\r\n                    )}\r\n                    <CustomInputNumber col=\"6\" name=\"over\" data={data} onChange={handleChange} />\r\n                    <CustomDropDown label=\"\" name=\"duration\" data={data} onChange={handleChange} col={6} options={durationOptions} />\r\n                    <CustomInputNumber col={8} name=\"bonusAmount\" data={data} onChange={handleChange} />\r\n                    <CustomDropDown label=\"\" name=\"amountType\" options={amountTypeOptions} data={data} onChange={handleChange} col={4} />\r\n                    <CustomMultiselect col=\"12\" name=\"services\" data={data} onChange={handleChange} options={servicesOptions} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BonusSetup;\r\n","import React from 'react';\r\nimport CustomTabView from '../../../../../../shared/TabView/CustomTabView';\r\nimport PaySetup from './PaySetup';\r\nimport BonusSetup from './BonusSetup';\r\n\r\nconst AppointmentSetup = () => {\r\n    const tabs = [\r\n        { title: 'Pay', content: <PaySetup /> },\r\n        { title: 'Bonus', content: <BonusSetup type=\"appointment\" /> },\r\n        { title: 'Calendar Default', content: <></> },\r\n    ];\r\n    return (\r\n        <>\r\n            <CustomTabView name=\"appointment\" tabs={tabs} useIndex={true} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppointmentSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CustomFilterCard, CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { useParams } from 'react-router-dom';\r\nimport { CustomDropDown, CustomInputNumber } from '../../../../../../shared/Input/AllInputs';\r\nimport { EmployeeCommissionType, amountTypeOptions } from '../../../../../../utils/dropdownConstants';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport { confirmDelete, showFormErrors } from '../../../../../../utils/commonFunctions';\r\nimport {\r\n    addEmployeeSalesItem,\r\n    deletetEmployeeSaleItem,\r\n    editEmployeeSalesItem,\r\n    getEmployeeSaleItem,\r\n    getEmployeeSalesItem,\r\n} from '../../../../../../redux/actions/EmployeeSettings/salesCommssionAction';\r\nimport { getCommissionGroups } from '../../../../../../redux/actions/InventorySettings/commissionGroupAction';\r\nimport formValidation from '../../../../../../utils/validations';\r\n\r\nconst ItemCommission = () => {\r\n    const dispatch = useDispatch();\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeSalesItemId, setEmployeeSalesItemId] = useState(null);\r\n    const [itemCommissionData, setItemCommissionData] = useState([]);\r\n\r\n    const initialState = {\r\n        commissionGroup: '',\r\n        type: 'ITEM_COMMISSION', //ITEM_COMMISSION, BONUS\r\n        commissionType: 'PER_ITEM', //PER_SALE,PER_ITEM\r\n        amountType: 'FIXED', //PERCENTAGE,FIXED\r\n        pay: '0',\r\n    };\r\n\r\n    const [data, setData] = useState(initialState);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        funcGetEmpSalesItem(id);\r\n        dispatch(getCommissionGroups());\r\n    }, []);\r\n\r\n    const { commissionGroupsDropdown } = useSelector((state) => state?.commissionGroup);\r\n    const funcGetEmpSalesItem = (id) => {\r\n        dispatch(\r\n            getEmployeeSalesItem(id, 'ITEM_COMMISSION', setLoading, (data) => {\r\n                setItemCommissionData(data);\r\n            }),\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (employeeSalesItemId) {\r\n            dispatch(\r\n                getEmployeeSaleItem(employeeSalesItemId, setLoading, (data) => {\r\n                    setData({\r\n                        commissionGroup: data.commissionGroup,\r\n                        type: data.type,\r\n                        commissionType: data.commissionType,\r\n                        amountType: data.amountType,\r\n                        pay: data.pay,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [employeeSalesItemId, dispatch]);\r\n\r\n    const onClose = () => {\r\n        setEmployeeSalesItemId(null);\r\n        setData(initialState);\r\n        setVisible(false);\r\n    };\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const columns = [\r\n        { field: 'commissionGroup', header: 'Commission Group' },\r\n        { field: 'commissionType', header: 'Commission Type' },\r\n        { field: 'pay', header: 'Pay' },\r\n    ];\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deletetEmployeeSaleItem(col._id, () => {\r\n                    funcGetEmpSalesItem(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Item Commission?');\r\n    };\r\n    const onEdit = (col) => {\r\n        setEmployeeSalesItemId(col?._id);\r\n        setVisible(true);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (employeeSalesItemId) {\r\n                dispatch(\r\n                    editEmployeeSalesItem(employeeSalesItemId, { ...data }, setLoading, () => {\r\n                        funcGetEmpSalesItem(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addEmployeeSalesItem({ ...data, employee: id }, setLoading, () => {\r\n                        funcGetEmpSalesItem(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} />\r\n            <CustomTable data={itemCommissionData} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n\r\n            <CustomDialog title={employeeSalesItemId ? 'Edit' : 'Add'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"commissionGroup\" data={data} onChange={handleChange} options={commissionGroupsDropdown} optionLabel=\"name\" col={12} />\r\n                    <CustomDropDown name=\"commissionType\" data={data} onChange={handleChange} options={EmployeeCommissionType} col={12} />\r\n                    <CustomInputNumber col={8} name=\"pay\" data={data} onChange={handleChange} />\r\n                    <CustomDropDown label=\"\" name=\"amountType\" options={amountTypeOptions} data={data} onChange={handleChange} col={4} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ItemCommission;\r\n","import React from 'react';\r\nimport CustomTabView from '../../../../../../shared/TabView/CustomTabView';\r\nimport ItemCommission from './ItemCommission';\r\nimport BonusSetup from '../AppointmentSetup/BonusSetup';\r\n\r\nconst SalesCommission = () => {\r\n    const tabs = [\r\n        { title: 'Item Commission', content: <ItemCommission /> },\r\n        { title: 'Bonus', content: <BonusSetup type=\"salesCommission\" /> },\r\n    ];\r\n    return (\r\n        <>\r\n            <CustomTabView name=\"sales-commission\" tabs={tabs} useIndex={true} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SalesCommission;\r\n","import React, { useState } from 'react';\r\nimport FormPage from '../../../../../shared/Layout/FormPage';\r\nimport CustomTabView from '../../../../../shared/TabView/CustomTabView';\r\nimport Security from './Security';\r\nimport General from './General';\r\nimport Clubs from './Clubs';\r\nimport Notes from './Notes';\r\nimport Certifications from './Certifications/Certifications';\r\nimport { useParams } from 'react-router-dom';\r\nimport EmployeeDepartments from './EmployeeDepartments';\r\nimport ClassesSetup from './Classes/ClassesSetup';\r\nimport AppointmentSetup from './AppointmentSetup/AppointmentSetup';\r\nimport SalesCommission from './SalesCommission/SalesCommission';\r\n\r\nconst EmployeeForm = () => {\r\n    const { id } = useParams();\r\n    const tabs = [\r\n        { title: 'Security', content: <Security /> },\r\n        { title: 'General', content: <General /> },\r\n        { title: 'Departments', content: <EmployeeDepartments /> },\r\n        { title: 'Clubs', content: <Clubs /> },\r\n        { title: 'Classes Setup', content: <ClassesSetup /> },\r\n        { title: 'Appointment Setup', content: <AppointmentSetup /> },\r\n        { title: 'Sales Commision', content: <SalesCommission /> },\r\n        { title: 'Time Sheet', content: <h1>Tab 8</h1> },\r\n        { title: 'Notes', content: <Notes /> },\r\n        {\r\n            title: 'Certifications',\r\n            content: <Certifications />,\r\n        },\r\n    ];\r\n    return (\r\n        <>\r\n            <FormPage backText=\"Manage Employees\" backTo=\"/settings/employee\">\r\n                <CustomTabView tabs={tabs} disabledTabIndices={id ? [] : [1, 2, 3, 4, 5, 6, 7, 8, 9]} scrollable={true} />\r\n            </FormPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EmployeeForm;\r\n"],"names":["getCertificates","id","setLoading","async","params","employee","res","api","EndPoints","MANAGE_EMPLOYEE_CERTIFICATES","success","data","dispatch","type","types","CHANGE_MANAGE_EMPLOYEE_CERTIFICATES","payload","addCertificates","history","tab","arguments","length","undefined","acquiredDate","moment","format","expirationDate","replace","concat","_id","goBack","showToast","severity","summary","message","getCertificate","returnData","showLoaderAction","hideLoaderAction","editCertificates","deleteCertificates","next","getEmployeeNotes","NOTES","addEmployeeNotes","Security","_allSecurityRoles","useDispatch","useParams","useHistory","loading","useState","useEffect","getJobDetails","getSecurityRoles","allSecurityRoles","useSelector","state","securityRole","map","item","name","value","getEmployee","setData","firstName","lastName","middleInitial","jobTitle","dob","Date","socialSecurity","barCode","accessCode","email","multiClubClockIn","toString","securityRoles","allJobTitle","handleChange","_ref","formErrors","formValidation","prev","handleSave","showFormErrors","editEmployee","addEmployees","_jsxs","_Fragment","children","_jsx","CustomCard","col","title","CustomGridLayout","CustomInput","required","onChange","CustomDropDown","options","index","label","optionLabel","CustomCalenderInput","yesNoOptions","CustomPickList","selected","sourceData","onPickListChange","CustomButtonGroup","PrimaryButton","className","onClick","LightButton","dropzoneStyle","border","borderRadius","padding","textAlign","cursor","background","onDropChange","multiple","selectedImages","setSelectedImages","JSON","stringify","onDrop","useCallback","acceptedFiles","rejectedFiles","forEach","file","some","selectedFile","console","log","prevState","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useDropzone","accept","style","useMemo","borderColor","Avatar","icon","size","color","shape","backgroundColor","image","getImageURL","Badge","filter","_","i","removeImage","General","states","setStates","cities","setCities","getAllCountries","updatedStates","getStatesByCountry","_data$emailNotificati","hireDate","terminationDate","adpId","primaryPhone","workPhone","workPhoneExt","mobilePhone","faxPhone","emergencyPhone","emergencyPhoneExt","street","city","zipCode","emailNotification","onlineNickName","bio","getCitiesByState","CustomInputMask","mask","placeholder","CustomTextArea","PhotoUpload","Clubs","getClubs","clubsDropdown","clubs","reportDataAccess","Notes","user","profile","takenBy","dateTime","notes","visible","setVisible","notesData","setNotesData","funcGetNotes","columns","field","header","body","r","onClose","CustomFilterCard","buttonTitle","CustomTable","CustomDialog","width","onCancel","onSave","maxLength","inputClass","Certifications","allCertificates","certificates","linkTo","onEdit","push","onDelete","position","confirmDelete","EmployeeDepartments","departmentsDropdown","department","getDepartments","funcGetEmpDepartments","getEmployeeDepartments","setEmployeeDepartments","employeeDeptId","setEmployeeDeptId","employeeDepartments","departments","wage","filterdDepartmentsDropdown","ed","includes","e","_empDeptData","find","deleteEmployeeDepartment","editEmployeeDepartment","addEmployeeDepartment","CustomMultiselect","disabled","CustomInputNumber","editEmployeeClasses","EMPLOYEE_CLASSES","_data$eachClientOver","employeeClassId","setEmployeeClassId","employeeClasses","setEmployeeClassesData","incrementalPay","getEmployeeClaases","payType","oneToFiveClients","sixToTenClients","elevenToFifteenClients","sixteenToTwentyClients","twentyOneToTwentyFiveClients","twentySixPlusClients","noRegistrationPay","payperClassPayload","payPerClassRate","PayPerClient","baseRate","payPerClientRate","eachClientOver","noOfClients","rate","maxPayPerClient","percentageRate","percentage","newData","_ref2","handleChange1","key","newList","ignore","addEmployeeClasses","classesPayTypeOptions","client","PaySetup","openSimilar","setOpenSimilarTo","isClassLevel","isDefaultPay","funcGetEmpClasses","getEmployees","getLevels","levelDropdown","level","uniqueId","useId","employeesDropdown","employees","setEmployeeClasses","classLevel","getEmployeeClasses","deleteEmployeeClasses","renderRow","extraClass","DataView","list","itemTemplate","CustomInputSwitch","checked","handleSwitchChange","active","_employeeClasses$list","paginator","rows","AddandEditClasses","SubstituteOptionSetup","Substitute","setSubstitute","priority","substitutionOptionsId","setSubstituteOptionsId","funcGetEmpSubstitution","getEmployeeSubstitutionOptions","SUSTITITION_OPTIONS","getSubstitutionOption","deleteSubstitutionOption","editEmployeeSubstitutionOptions","addEmployeeSubstitutionOptions","substitutionPriorityOptions","ClassesSetup","tabs","content","CustomTabView","useIndex","getEmployeeAppointmentPay","EMPLOYEE_APPOINTMENT","funcGetEmpAppointment","initialState","pay","amountType","employeeAppartId","setEmployeeAppartId","getEmployeeAppartment","editEmployeeAppointmentPay","addEmployeeAppointmentPay","AppointmentPayPriorityOptions","amountTypeOptions","appointmentData","setAppointmentData","defaultPay","setDefaultPay","deletetEmployeeAppartment","AddandEditAppointmentPay","prevData","isDefaultAppointmentPay","EMPLOYEE_APPOINTMENT_IS_DEFAULT","getEmployeeSalesItem","SALES_COMMISSION","bonusType","sessionsValue","ofSessions","over","duration","bonusAmount","services","employeeAppartBonusId","setemployeeAppartBonusId","getEmployeeBonus","selectTimeframe","toLowerCase","join","deleteEmployeeBonus","rest","editEmployeeBonus","addEmployeeBonus","bonusTypeConstantsOptions","durationOptions","servicesOptions","AppointmentSetup","BonusSetup","ItemCommission","employeeSalesItemId","setEmployeeSalesItemId","itemCommissionData","setItemCommissionData","commissionGroup","commissionType","funcGetEmpSalesItem","getCommissionGroups","commissionGroupsDropdown","getEmployeeSaleItem","deletetEmployeeSaleItem","editEmployeeSalesItem","addEmployeeSalesItem","EmployeeCommissionType","SalesCommission","EmployeeForm","FormPage","backText","backTo","disabledTabIndices","scrollable"],"sourceRoot":""}