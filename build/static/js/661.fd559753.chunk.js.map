{"version":3,"file":"static/js/661.fd559753.chunk.js","mappings":"mRAYe,SAASA,EAAcC,GAAe,IAAd,QAAEC,GAASD,EAC9C,MAAME,GAAWC,EAAAA,EAAAA,OACX,GAAEC,IAAOC,EAAAA,EAAAA,MACRC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,CAC7BC,eAAgB,GAChBC,WAAY,GACZC,UAAU,KAEdC,EAAAA,EAAAA,YAAU,KACFR,GACAF,GACIW,EAAAA,EAAAA,IAAcT,GAAKE,IACfC,EAAQ,CACJE,eAAgBH,EAAKG,eACrBC,WAAYJ,EAAKI,WACjBC,SAAUL,EAAKK,UACjB,IAGd,GACD,CAACP,EAAIF,IAER,MAAMY,EAAeC,IAAsB,IAArB,KAAEC,EAAI,MAAEC,GAAOF,EACjC,MAAMG,GAAaC,EAAAA,EAAAA,GAAeH,EAAMC,EAAOX,GAC/CC,GAASa,IAAI,IAAWA,EAAM,CAACJ,GAAOC,EAAOC,gBAAc,GAExDG,EAASC,IAAcd,EAAAA,EAAAA,WAAS,GAWvC,OACIe,EAAAA,EAAAA,KAAA,OAAAC,UACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAACC,SAAS,eAAcH,SAAA,EAC7BD,EAAAA,EAAAA,KAACK,EAAAA,GAAU,CAACC,IAAI,KAAKC,MAAM,cAAaN,UACpCC,EAAAA,EAAAA,MAACM,EAAAA,EAAgB,CAAAP,SAAA,EACbD,EAAAA,EAAAA,KAACS,EAAAA,GAAc,CAAChB,KAAK,iBAAiBiB,QAASC,EAAAA,GAAuB5B,KAAMA,EAAM6B,SAAUrB,EAAcsB,UAAQ,KAClHb,EAAAA,EAAAA,KAACc,EAAAA,GAAW,CAACrB,KAAK,aAAaV,KAAMA,EAAM6B,SAAUrB,EAAcsB,UAAQ,KAC3Eb,EAAAA,EAAAA,KAACe,EAAAA,GAAiB,CAACtB,KAAK,WAAWV,KAAMA,EAAM6B,SAAUrB,UAGjEW,EAAAA,EAAAA,MAACc,EAAAA,GAAiB,CAAAf,SAAA,EACdD,EAAAA,EAAAA,KAACiB,EAAAA,GAAa,CAACC,MAAM,OAAOpB,QAASA,EAASqB,UAAU,OAAOC,QApB5DC,MACXC,EAAAA,EAAAA,IAAevC,EAAMC,IAEjBL,EADAE,GACS0C,EAAAA,EAAAA,IAAe1C,EAAIE,EAAMgB,EAAYrB,IAErC8C,EAAAA,EAAAA,IAAczC,EAAMgB,EAAYrB,GAEjD,KAcYsB,EAAAA,EAAAA,KAACyB,EAAAA,GAAW,CAACP,MAAM,SAASE,QAASA,IAAM1C,EAAQgD,QAAQ,gDAK/E,C","sources":["views/Settings/Business/ReasonCode/ReasonCodeForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport { CustomDropDown, CustomInput, CustomInputSwitch } from '../../../../shared/Input/AllInputs';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { reasonCodeTypeOptions } from '../../../../utils/dropdownConstants';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport formValidation from '../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../utils/commonFunctions';\r\nimport { addReasonCode, editReasonCode, getReasonCode } from '../../../../redux/actions/Settings/Business/reasonActions';\r\n\r\nexport default function ReasonCodeForm({ history }) {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const [data, setData] = useState({\r\n        reasonCodeType: '',\r\n        reasonCode: '',\r\n        isActive: true,\r\n    });\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getReasonCode(id, (data) => {\r\n                    setData({\r\n                        reasonCodeType: data.reasonCodeType,\r\n                        reasonCode: data.reasonCode,\r\n                        isActive: data.isActive,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (id) {\r\n                dispatch(editReasonCode(id, data, setLoading, history));\r\n            } else {\r\n                dispatch(addReasonCode(data, setLoading, history));\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <FormPage backText=\"Reason Codes\">\r\n                <CustomCard col=\"12\" title=\"Reason Code\">\r\n                    <CustomGridLayout>\r\n                        <CustomDropDown name=\"reasonCodeType\" options={reasonCodeTypeOptions} data={data} onChange={handleChange} required />\r\n                        <CustomInput name=\"reasonCode\" data={data} onChange={handleChange} required />\r\n                        <CustomInputSwitch name=\"isActive\" data={data} onChange={handleChange} />\r\n                    </CustomGridLayout>\r\n                </CustomCard>\r\n                <CustomButtonGroup>\r\n                    <PrimaryButton label=\"Save\" loading={loading} className=\"mx-2\" onClick={handleSave} />\r\n                    <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/business/?tab=reason-code')} />\r\n                </CustomButtonGroup>\r\n            </FormPage>\r\n        </div>\r\n    );\r\n}\r\n"],"names":["ReasonCodeForm","_ref","history","dispatch","useDispatch","id","useParams","data","setData","useState","reasonCodeType","reasonCode","isActive","useEffect","getReasonCode","handleChange","_ref2","name","value","formErrors","formValidation","prev","loading","setLoading","_jsx","children","_jsxs","FormPage","backText","CustomCard","col","title","CustomGridLayout","CustomDropDown","options","reasonCodeTypeOptions","onChange","required","CustomInput","CustomInputSwitch","CustomButtonGroup","PrimaryButton","label","className","onClick","handleSave","showFormErrors","editReasonCode","addReasonCode","LightButton","replace"],"sourceRoot":""}