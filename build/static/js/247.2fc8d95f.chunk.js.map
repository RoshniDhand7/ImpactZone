{"version":3,"file":"static/js/247.2fc8d95f.chunk.js","mappings":"oRAeA,MAyDA,EAzDgCA,KAC5B,MAAMC,GAAUC,EAAAA,EAAAA,OACV,GAAEC,IAAOC,EAAAA,EAAAA,KACTC,GAAWC,EAAAA,EAAAA,OACVC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAEvCC,EAAAA,EAAAA,YAAU,KACFP,GACAE,GACIM,EAAAA,EAAAA,IAAqBR,GAAKS,IAAU,IAADC,EAC/BC,EAAQ,CACJC,KAAMH,EAAKG,KACXC,cAAiC,QAApBH,EAAED,EAAKI,qBAAa,IAAAH,EAAAA,EAAI,GACrCI,SAAUL,EAAKK,UACjB,IAGd,GACD,CAACd,EAAIE,IACR,MAAOO,EAAME,IAAWL,EAAAA,EAAAA,UAAS,CAC7BM,KAAM,GACNC,cAAe,GACfC,UAAU,IAERC,EAAeC,IAAsB,IAArB,KAAEJ,EAAI,MAAEK,GAAOD,EACjC,MAAME,GAAaC,EAAAA,EAAAA,GAAeP,EAAMK,EAAOR,GAC/CE,GAASS,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAE,CAACR,GAAOK,EAAOC,gBAAc,EAY/D,OACII,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAACC,SAAS,uBAAsBH,SAAA,EACrCF,EAAAA,EAAAA,KAACM,EAAAA,GAAU,CAACC,IAAI,KAAKC,MAAM,iBAAgBN,UACvCC,EAAAA,EAAAA,MAACM,EAAAA,EAAgB,CAAAP,SAAA,EACbF,EAAAA,EAAAA,KAACU,EAAAA,GAAW,CAACpB,KAAK,OAAOH,KAAMA,EAAMwB,SAAUlB,EAAcmB,UAAQ,KACrEZ,EAAAA,EAAAA,KAACa,EAAAA,GAAe,CAAC1B,KAAMA,EAAMG,KAAK,gBAAgBqB,SAAUlB,EAAcc,IAAK,MAC/EP,EAAAA,EAAAA,KAACc,EAAAA,GAAiB,CAACxB,KAAK,WAAWH,KAAMA,EAAMwB,SAAUlB,UAGjEU,EAAAA,EAAAA,MAACY,EAAAA,GAAiB,CAAAb,SAAA,EACdF,EAAAA,EAAAA,KAACgB,EAAAA,GAAa,CAACC,MAAM,OAAOC,UAAU,OAAOC,QArB1CC,MACXC,EAAAA,EAAAA,IAAelC,EAAME,IAEjBT,EADAF,GACS4C,EAAAA,EAAAA,IAAwB5C,EAAIS,EAAMJ,EAAYP,IAE9C+C,EAAAA,EAAAA,IAAuBpC,EAAMJ,EAAYP,GAE1D,EAc8EM,QAASA,KAC3EkB,EAAAA,EAAAA,KAACwB,EAAAA,GAAW,CAACP,MAAM,SAASE,QAASA,IAAM3C,EAAQiD,kBAG5D,C","sources":["views/Settings/Agreement/AgreementCategories/AgreementCategoriesForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport { CustomChipInput, CustomInput, CustomInputSwitch } from '../../../../shared/Input/AllInputs';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { useDispatch } from 'react-redux';\r\nimport formValidation from '../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../utils/commonFunctions';\r\nimport {\r\n    addAgreementCategories,\r\n    editAgreementCategories,\r\n    getAgreementCategory,\r\n} from '../../../../redux/actions/Settings/AgreementSetup/agreementCategoriesAction';\r\n\r\nconst AgreementCategoriesForm = () => {\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getAgreementCategory(id, (data) => {\r\n                    setData({\r\n                        name: data.name,\r\n                        subCategories: data.subCategories ?? [],\r\n                        isActive: data.isActive,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        subCategories: [],\r\n        isActive: true,\r\n    });\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (id) {\r\n                dispatch(editAgreementCategories(id, data, setLoading, history));\r\n            } else {\r\n                dispatch(addAgreementCategories(data, setLoading, history));\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FormPage backText=\"Agreement Categories\">\r\n                <CustomCard col=\"12\" title=\"Add Agreements\">\r\n                    <CustomGridLayout>\r\n                        <CustomInput name=\"name\" data={data} onChange={handleChange} required />\r\n                        <CustomChipInput data={data} name=\"subCategories\" onChange={handleChange} col={12} />\r\n                        <CustomInputSwitch name=\"isActive\" data={data} onChange={handleChange} />\r\n                    </CustomGridLayout>\r\n                </CustomCard>\r\n                <CustomButtonGroup>\r\n                    <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={handleSave} loading={loading} />\r\n                    <LightButton label=\"Cancel\" onClick={() => history.goBack()} />\r\n                </CustomButtonGroup>\r\n            </FormPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AgreementCategoriesForm;\r\n"],"names":["AgreementCategoriesForm","history","useHistory","id","useParams","dispatch","useDispatch","loading","setLoading","useState","useEffect","getAgreementCategory","data","_data$subCategories","setData","name","subCategories","isActive","handleChange","_ref","value","formErrors","formValidation","prev","_objectSpread","_jsx","_Fragment","children","_jsxs","FormPage","backText","CustomCard","col","title","CustomGridLayout","CustomInput","onChange","required","CustomChipInput","CustomInputSwitch","CustomButtonGroup","PrimaryButton","label","className","onClick","handleSave","showFormErrors","editAgreementCategories","addAgreementCategories","LightButton","goBack"],"sourceRoot":""}