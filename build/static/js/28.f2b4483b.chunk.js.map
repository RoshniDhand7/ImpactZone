{"version":3,"file":"static/js/28.f2b4483b.chunk.js","mappings":"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","sources":["shared/Layout/FormPage.jsx","shared/Tree/CustomTree.js","views/Settings/Employees/SecurityRoles/Permissions.jsx","views/Settings/Employees/SecurityRoles/SecurityRolesForm.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomTransition from '../Transitions/CustomTransition';\r\n\r\nexport default function FormPage({ children, backText, backTo }) {\r\n    const history = useHistory();\r\n\r\n    const onBack = () => {\r\n        if (backTo) {\r\n            history.replace(backTo);\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    };\r\n    return (\r\n        <CustomTransition>\r\n            {backText ? (\r\n                <div className=\"flex mb-3 text-dark-gray\">\r\n                    <i className=\"pi pi-angle-left text-2xl cursor-pointer\" onClick={onBack}></i>\r\n                    <div className=\" my-auto font-semibold text-lg cursor-pointer\" onClick={onBack}>\r\n                        Back to {backText}\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            <>{children}</>\r\n        </CustomTransition>\r\n    );\r\n}\r\n","import { Tree } from 'primereact/tree';\r\nimport React from 'react';\r\n\r\nconst CustomTree = ({ values, expandedKeys, selectionKeys, onSelectionChange }) => {\r\n    return (\r\n        <Tree\r\n            selectionMode=\"checkbox\"\r\n            value={values}\r\n            expandedKeys={expandedKeys}\r\n            selectionKeys={selectionKeys}\r\n            onSelectionChange={(e) => onSelectionChange(e.value)}\r\n        />\r\n    );\r\n};\r\nexport default CustomTree;\r\n","import React from 'react';\r\nimport CustomTree from '../../../../shared/Tree/CustomTree';\r\nimport { allPermissions } from '../../../../utils/permissions';\r\nimport CustomCard from '../../../../shared/Cards/CustomCard';\r\n\r\nexport default function Permissions({ selected, setSelected }) {\r\n    const renderPermissionTabs = () => {\r\n        return allPermissions.map(({ department, expended, permissions }, i) => (\r\n            <CustomCard key={i} col=\"4\" title={department}>\r\n                <CustomTree expandedKeys={expended} values={permissions} selectionKeys={selected} onSelectionChange={setSelected} />\r\n            </CustomCard>\r\n        ));\r\n    };\r\n    return (\r\n        <>\r\n            <h3 className=\"font-bold\">Permissions</h3>\r\n            <div className=\"grid\">{renderPermissionTabs()}</div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport { CustomInput, CustomTextArea } from '../../../../shared/Input/AllInputs';\r\nimport Permissions from './Permissions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addSecurityRole, editSecurityRole, getPermissions, getSecurityRole } from '../../../../redux/actions/EmployeeSettings/securityRolesAction';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { showToast } from '../../../../redux/actions/toastAction';\r\nimport { showFormErrors } from '../../../../utils/commonFunctions';\r\nimport formValidation from '../../../../utils/validations';\r\n\r\nconst SecurityRolesForm = () => {\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getSecurityRole(id, (data) => {\r\n                    setSelectedPermissions(data.rawPermissions);\r\n                    setData({\r\n                        name: data.name,\r\n                        description: data.description,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getPermissions());\r\n    }, [dispatch]);\r\n\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        description: '',\r\n    });\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [selectedPermissions, setSelectedPermissions] = useState({});\r\n    const handlePermissionSelection = (selections) => {\r\n        setSelectedPermissions(selections);\r\n    };\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (Object.keys(selectedPermissions).length) {\r\n                if (id) {\r\n                    dispatch(editSecurityRole(id, data, selectedPermissions, setLoading, history));\r\n                } else {\r\n                    dispatch(addSecurityRole(data, selectedPermissions, setLoading, history));\r\n                }\r\n            } else {\r\n                dispatch(\r\n                    showToast({\r\n                        severity: 'error',\r\n                        summary: 'Permission Matrix',\r\n                        detail: 'Select atleast one permission',\r\n                    }),\r\n                );\r\n            }\r\n        } else {\r\n            dispatch(\r\n                showToast({\r\n                    severity: 'error',\r\n                    summary: 'Personal Information',\r\n                    detail: 'Missing information',\r\n                }),\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FormPage backText=\"Security Roles\">\r\n                <CustomCard col=\"12\" title=\"General\">\r\n                    <CustomGridLayout>\r\n                        <CustomInput data={data} name=\"name\" onChange={handleChange} required col={3} />\r\n                        <CustomTextArea data={data} onChange={handleChange} name=\"description\" />\r\n                    </CustomGridLayout>\r\n                </CustomCard>\r\n\r\n                <Permissions selected={selectedPermissions} setSelected={handlePermissionSelection} />\r\n\r\n                <CustomButtonGroup>\r\n                    <PrimaryButton label=\"Save\" className=\"mx-2\" loading={loading} onClick={handleSave} />\r\n                    <LightButton label=\"Cancel\" onClick={() => history.goBack()} />\r\n                </CustomButtonGroup>\r\n            </FormPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SecurityRolesForm;\r\n"],"names":["FormPage","_ref","children","backText","backTo","history","useHistory","onBack","replace","goBack","_jsxs","CustomTransition","className","_jsx","onClick","_Fragment","values","expandedKeys","selectionKeys","onSelectionChange","Tree","selectionMode","value","e","Permissions","selected","setSelected","allPermissions","map","_ref2","i","department","expended","permissions","CustomCard","col","title","CustomTree","SecurityRolesForm","id","useParams","dispatch","useDispatch","useEffect","getSecurityRole","data","setSelectedPermissions","rawPermissions","setData","name","description","getPermissions","useState","loading","setLoading","selectedPermissions","handleChange","formErrors","formValidation","prev","CustomGridLayout","CustomInput","onChange","required","CustomTextArea","selections","CustomButtonGroup","PrimaryButton","label","handleSave","showFormErrors","Object","keys","length","editSecurityRole","addSecurityRole","showToast","severity","summary","detail","LightButton"],"sourceRoot":""}