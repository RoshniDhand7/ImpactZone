{"version":3,"file":"static/js/199.0670032d.chunk.js","mappings":"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","sources":["shared/Layout/FormPage.jsx","views/Settings/Business/Company/General.jsx","views/Settings/Business/Company/Online.jsx","views/Settings/Business/Company/CompanyForm.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomTransition from '../Transitions/CustomTransition';\r\n\r\nexport default function FormPage({ children, backText, backTo }) {\r\n    const history = useHistory();\r\n\r\n    const onBack = () => {\r\n        if (backTo) {\r\n            history.replace(backTo);\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    };\r\n    return (\r\n        <CustomTransition>\r\n            {backText ? (\r\n                <div className=\"flex mb-3 text-dark-gray\">\r\n                    <i className=\"pi pi-angle-left text-2xl cursor-pointer\" onClick={onBack}></i>\r\n                    <div className=\" my-auto font-semibold text-lg cursor-pointer\" onClick={onBack}>\r\n                        Back to {backText}\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            <>{children}</>\r\n        </CustomTransition>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport { CustomDropDown, CustomInput, CustomInputMask } from '../../../../shared/Input/AllInputs';\r\nimport { checkInLimitOptions, perOptions, restrictionOptions, yesNoOptions } from '../../../../utils/dropdownConstants';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getAllCountries, getCitiesByState, getStatesByCountry, showFormErrors } from '../../../../utils/commonFunctions';\r\nimport { editCompany } from '../../../../redux/actions/BusinessSettings/companyActions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport formValidation from '../../../../utils/validations';\r\n\r\nconst General = (allCompany) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (allCompany) {\r\n            setData({\r\n                companyId: allCompany?._id,\r\n                billingCountry: allCompany?.billingCountry,\r\n                companyName: allCompany?.companyName,\r\n                multiClubInOut: allCompany?.multiClubInOut,\r\n                clockInRequired: allCompany?.clockInRequired,\r\n                country: allCompany?.country,\r\n                address1: allCompany?.address1,\r\n                address2: allCompany?.address2,\r\n                city: allCompany?.city,\r\n                state: allCompany?.state,\r\n                zipCode: allCompany?.zipCode,\r\n                workNumber: allCompany?.workNumber,\r\n                workExtention: allCompany?.workExtention,\r\n                faxNumber: allCompany?.faxNumber,\r\n                primaryEmail: allCompany?.primaryEmail,\r\n                alternateEmail: allCompany?.alternateEmail,\r\n                companyUrl: allCompany?.companyUrl,\r\n                companyCode: allCompany?.companyCode,\r\n                batchId: allCompany?.batchId,\r\n                checkInLimit: allCompany?.checkInLimit,\r\n                per: allCompany?.per,\r\n                restrictionType: allCompany?.restrictionType,\r\n            });\r\n            if (allCompany?.country === 'US') {\r\n                const cities = getCitiesByState(allCompany.country, allCompany.state);\r\n                setCities(cities);\r\n            }\r\n        }\r\n    }, [allCompany]);\r\n\r\n    const [data, setData] = useState({\r\n        companyId: '',\r\n        billingCountry: '',\r\n        companyName: '',\r\n        multiClubInOut: false,\r\n        clockInRequired: false,\r\n        country: '',\r\n        address1: '',\r\n        address2: '',\r\n        city: '',\r\n        state: '',\r\n        zipCode: '',\r\n        workNumber: '',\r\n        workExtention: '',\r\n        faxNumber: '',\r\n        primaryEmail: '',\r\n        alternateEmail: '',\r\n        companyUrl: '',\r\n        companyCode: '',\r\n        batchId: '',\r\n        checkInLimit: 'No Limit',\r\n        per: 'Week (7 Days)',\r\n        restrictionType: 'Company',\r\n    });\r\n\r\n    const [country, setCountry] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const allCountryList = getAllCountries();\r\n        const updatedStates = getStatesByCountry('US');\r\n        setStates(updatedStates);\r\n        setCountry(allCountryList);\r\n    }, [dispatch]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n\r\n        if (name === 'state') {\r\n            const city = getCitiesByState('US', value);\r\n            setCities(city);\r\n            setData((prev) => ({ ...prev, [name]: value, city: '', formErrors }));\r\n        } else {\r\n            setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n        }\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            dispatch(editCompany(data, setLoading, history));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"General\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"companyId\" data={data} onChange={handleChange} disabled={true} required />\r\n                    <CustomInput name=\"billingCountry\" data={data} onChange={handleChange} required />\r\n                    <CustomInput name=\"companyName\" data={data} onChange={handleChange} required />\r\n                    <CustomDropDown\r\n                        label=\"Allow Multi-Club Clock In/Out\"\r\n                        name=\"multiClubInOut\"\r\n                        options={yesNoOptions}\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <CustomDropDown\r\n                        label=\"Clock In Department Required\"\r\n                        name=\"clockInRequired\"\r\n                        options={yesNoOptions}\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Address\">\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"country\" options={country} data={data} disabled={true} required />\r\n                    <CustomInput name=\"address1\" data={data} onChange={handleChange} required />\r\n                    <CustomInput name=\"address2\" data={data} onChange={handleChange} required />\r\n                    <CustomDropDown name=\"state\" options={states} data={data} onChange={handleChange} required />\r\n                    <CustomDropDown name=\"city\" options={cities} data={data} onChange={handleChange} required />\r\n                    <CustomInput name=\"zipCode\" data={data} onChange={handleChange} required />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Contact Information\">\r\n                <CustomGridLayout>\r\n                    <CustomInputMask name=\"workNumber\" id=\"phone\" mask=\"(999) 999-9999\" data={data} placeholder=\"\" onChange={handleChange} required />\r\n                    <CustomInput name=\"workExtention\" data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"faxNumber\" data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"primaryEmail\" data={data} onChange={handleChange} required />\r\n                    <CustomInput name=\"alternateEmail\" data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"companyUrl\" data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Data Export\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"companyCode\" data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"batchId\" data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Remote Check Ins\">\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"checkInLimit\" options={checkInLimitOptions} data={data} onChange={handleChange} />\r\n                    <CustomDropDown name=\"per\" options={perOptions} data={data} onChange={handleChange} disabled={data?.checkInLimit ? false : true} />\r\n                    <CustomDropDown\r\n                        name=\"restrictionType\"\r\n                        options={restrictionOptions}\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        disabled={data?.per ? false : true}\r\n                    />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={handleSave} loading={loading} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/business')} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default General;\r\n","import React, { useState, useEffect } from 'react';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport { CustomDropDown } from '../../../../shared/Input/AllInputs';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { daysOptions, hoursOptions, yesNoOptions } from '../../../../utils/dropdownConstants';\r\nimport { editCompany } from '../../../../redux/actions/BusinessSettings/companyActions';\r\nimport { useDispatch } from 'react-redux';\r\nimport formValidation from '../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../utils/commonFunctions';\r\n\r\nconst Online = (allCompany) => {\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        if (allCompany) {\r\n            setData({\r\n                bookOutFrom: allCompany?.bookOutFrom,\r\n                bookOutTo: allCompany?.bookOutTo,\r\n                allowCancelOnline: allCompany?.allowCancelOnline,\r\n                timeBeforeEvent: allCompany?.timeBeforeEvent,\r\n            });\r\n        }\r\n    }, [allCompany]);\r\n    const [data, setData] = useState({\r\n        bookOutFrom: '',\r\n        bookOutTo: '',\r\n        allowCancelOnline: false,\r\n        timeBeforeEvent: '',\r\n    });\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            dispatch(editCompany(data, setLoading, history));\r\n        }\r\n    };\r\n    // console.log('data>>', data);\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"Booking\">\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"bookOutFrom\" options={daysOptions} data={data} onChange={handleChange} required />\r\n                    <CustomDropDown name=\"bookOutTo\" options={daysOptions} data={data} onChange={handleChange} required />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Cancellation\">\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"allowCancelOnline\" options={yesNoOptions} data={data} onChange={handleChange} required />\r\n                    <CustomDropDown name=\"timeBeforeEvent\" options={hoursOptions} data={data} onChange={handleChange} required />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={handleSave} loading={loading} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/business')} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Online;\r\n","import React, { useEffect } from 'react';\r\nimport CustomTabView from '../../../../shared/TabView/CustomTabView';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport General from './General';\r\nimport Online from './Online';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCompanyDetails } from '../../../../redux/actions/BusinessSettings/companyActions';\r\n\r\nexport default function CompanyForm() {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getCompanyDetails());\r\n    }, [dispatch]);\r\n    let { allCompany } = useSelector((state) => state?.company);\r\n\r\n    const tabs = [\r\n        { title: 'General', content: General(allCompany) },\r\n        { title: 'Online', content: Online(allCompany) },\r\n    ];\r\n\r\n    return (\r\n        <FormPage backText=\"Company\">\r\n            <CustomTabView tabs={tabs} />\r\n        </FormPage>\r\n    );\r\n}\r\n"],"names":["FormPage","_ref","children","backText","backTo","history","useHistory","onBack","replace","goBack","_jsxs","CustomTransition","className","_jsx","onClick","_Fragment","allCompany","dispatch","useDispatch","loading","setLoading","useState","useEffect","setData","companyId","_id","billingCountry","companyName","multiClubInOut","clockInRequired","country","address1","address2","city","state","zipCode","workNumber","workExtention","faxNumber","primaryEmail","alternateEmail","companyUrl","companyCode","batchId","checkInLimit","per","restrictionType","cities","getCitiesByState","setCities","data","setCountry","states","setStates","allCountryList","getAllCountries","updatedStates","getStatesByCountry","handleChange","name","value","formErrors","formValidation","prev","CustomCard","col","title","CustomGridLayout","CustomInput","onChange","disabled","required","CustomDropDown","label","options","yesNoOptions","CustomInputMask","id","mask","placeholder","checkInLimitOptions","perOptions","restrictionOptions","CustomButtonGroup","PrimaryButton","handleSave","showFormErrors","editCompany","LightButton","bookOutFrom","bookOutTo","allowCancelOnline","timeBeforeEvent","daysOptions","hoursOptions","CompanyForm","getCompanyDetails","useSelector","company","tabs","content","General","Online","CustomTabView"],"sourceRoot":""}