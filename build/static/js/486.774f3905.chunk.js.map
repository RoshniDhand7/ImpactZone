{"version":3,"file":"static/js/486.774f3905.chunk.js","mappings":"yQAWA,MAwDA,EAxDmBA,KACf,MAAMC,GAAUC,EAAAA,EAAAA,OACV,GAAEC,IAAOC,EAAAA,EAAAA,KACTC,GAAWC,EAAAA,EAAAA,OACVC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAEvCC,EAAAA,EAAAA,YAAU,KACFP,GACAE,GACIM,EAAAA,EAAAA,IAAUR,GAAKS,IACXC,EAAQ,CACJC,KAAMF,EAAKE,KACXC,SAAUH,EAAKG,SACfC,SAAUJ,EAAKI,UACjB,IAGd,GACD,CAACb,EAAIE,IACR,MAAOO,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,CAC7BK,KAAM,GACNC,SAAU,EACVC,UAAU,IAERC,EAAeC,IAAsB,IAArB,KAAEJ,EAAI,MAAEK,GAAOD,EACjC,MAAME,GAAaC,EAAAA,EAAAA,GAAeP,EAAMK,EAAOP,GAC/CC,GAASS,IAAI,IAAWA,EAAM,CAACR,GAAOK,EAAOC,gBAAc,EAY/D,OACIG,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAACC,SAAS,UAASC,SAAA,EACxBC,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAACC,IAAI,KAAKC,MAAM,UAASJ,UAChCH,EAAAA,EAAAA,MAACQ,EAAAA,EAAgB,CAAAL,SAAA,EACbC,EAAAA,EAAAA,KAACK,EAAAA,GAAW,CAAClB,KAAK,OAAOF,KAAMA,EAAMqB,SAAUhB,EAAciB,UAAQ,KACrEP,EAAAA,EAAAA,KAACQ,EAAAA,GAAiB,CAACC,OAAO,IAAIxB,KAAMA,EAAMqB,SAAUhB,EAAcH,KAAK,WAAWuB,MAAM,SAASH,UAAQ,KACzGP,EAAAA,EAAAA,KAACW,EAAAA,GAAiB,CAACxB,KAAK,WAAWF,KAAMA,EAAMqB,SAAUhB,UAIjEM,EAAAA,EAAAA,MAACgB,EAAAA,GAAiB,CAAAb,SAAA,EACdC,EAAAA,EAAAA,KAACa,EAAAA,GAAa,CAACH,MAAM,OAAOI,UAAU,OAAOC,QArBtCC,MACXC,EAAAA,EAAAA,IAAehC,EAAMC,IAEjBR,EADAF,GACS0C,EAAAA,EAAAA,IAAW1C,EAAIS,EAAMJ,EAAYP,IAEjC6C,EAAAA,EAAAA,IAAUlC,EAAMJ,EAAYP,GAE7C,EAc0EM,QAASA,KAC3EoB,EAAAA,EAAAA,KAACoB,EAAAA,GAAW,CAACV,MAAM,SAASK,QAASA,IAAMzC,EAAQ+C,gBAEhD,C","sources":["views/Settings/Inventory/PrePays/PrePayForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { CustomInput, CustomInputNumber, CustomInputSwitch } from '../../../../shared/Input/AllInputs';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport formValidation from '../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../utils/commonFunctions';\r\nimport { addPrePay, editPrePay, getPrePay } from '../../../../redux/actions/Settings/InventorySetup/prePayActions';\r\n\r\nconst PrePayForm = () => {\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getPrePay(id, (data) => {\r\n                    setData({\r\n                        name: data.name,\r\n                        netPrice: data.netPrice,\r\n                        isActive: data.isActive,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        netPrice: 0,\r\n        isActive: true,\r\n    });\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (id) {\r\n                dispatch(editPrePay(id, data, setLoading, history));\r\n            } else {\r\n                dispatch(addPrePay(data, setLoading, history));\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormPage backText=\"Pre Pay\">\r\n            <CustomCard col=\"12\" title=\"General\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"name\" data={data} onChange={handleChange} required />\r\n                    <CustomInputNumber prefix=\"$\" data={data} onChange={handleChange} name=\"netPrice\" label=\"Amount\" required />\r\n                    <CustomInputSwitch name=\"isActive\" data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={handleSave} loading={loading} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.goBack()} />\r\n            </CustomButtonGroup>\r\n        </FormPage>\r\n    );\r\n};\r\n\r\nexport default PrePayForm;\r\n"],"names":["PrePayForm","history","useHistory","id","useParams","dispatch","useDispatch","loading","setLoading","useState","useEffect","getPrePay","data","setData","name","netPrice","isActive","handleChange","_ref","value","formErrors","formValidation","prev","_jsxs","FormPage","backText","children","_jsx","CustomCard","col","title","CustomGridLayout","CustomInput","onChange","required","CustomInputNumber","prefix","label","CustomInputSwitch","CustomButtonGroup","PrimaryButton","className","onClick","handleSave","showFormErrors","editPrePay","addPrePay","LightButton","goBack"],"sourceRoot":""}