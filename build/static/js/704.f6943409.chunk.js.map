{"version":3,"file":"static/js/704.f6943409.chunk.js","mappings":"iTAMA,MAAMA,EAAsBC,GAAeC,UACnCD,GACAA,GAAW,GAEf,MAAME,QAAYC,EAAAA,EAAAA,GAAI,MAAOC,EAAAA,EAAUC,iBAQ/B,IAADC,EAPHJ,EAAIK,QACAL,EAAIM,MACJC,EAAS,CACLC,KAAMC,EAAAA,EAAMC,uBACZC,QAASX,EAAIM,OAIrBC,GAASK,EAAAA,EAAAA,GAAU,CAAEC,SAAU,QAASC,QAAoB,QAAbV,EAAEJ,EAAIe,eAAO,IAAAX,EAAAA,EAAIJ,KAEhEF,GACAA,GAAW,EACf,E,qDCNJ,MAoJA,EApJ2BkB,KAAO,IAADC,EAC7B,MAAMV,GAAWW,EAAAA,EAAAA,OACX,GAAEC,IAAOC,EAAAA,EAAAA,MACfC,EAAAA,EAAAA,YAAU,KACNd,EAASV,IAAqB,GAC/B,CAACU,IACJ,MAAOD,EAAMgB,IAAWC,EAAAA,EAAAA,UAAS,CAC7BC,KAAM,GACNC,YAAa,GACbC,SAAU,OACVC,mBAAmB,EACnBC,eAAgB,KAChBC,eAAe,EACfC,sBAAuB,KACvBC,iBAAkB,GAClBC,mBAAoB,OACpBC,kBAAmB,EACnBC,kBAAmB,EACnBC,mBAAoB,EACpBC,uBAAwB,EACxBC,MAAO,GACPC,SAAU,GACVC,UAAU,KAGR,uBAAEC,IAA2BC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMd,iBAChE,IAAI,wBAAEe,IAA4BF,EAAAA,EAAAA,KAAaC,GAAUA,EAAME,SAASC,UACxEF,EAAiD,QAA1B1B,EAAG0B,SAAuB,IAAA1B,OAAA,EAAvBA,EAAyB6B,QAAQC,GAASA,EAAKvB,QAAa,OAAJlB,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,QAExF,MAAM,cAAEwB,IAAkBC,EAAAA,EAAAA,MACpB,oBAAEC,IAAwBC,EAAAA,EAAAA,KAE1BC,GAAUC,EAAAA,EAAAA,OAEV,eAAEC,IAAmBb,EAAAA,EAAAA,KAAaC,GAAe,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOa,eAEzDlC,EAAAA,EAAAA,YAAU,KACFF,GACAZ,GACIiD,EAAAA,EAAAA,IAAkBrC,GAAKb,IACnBgB,EAAQ,CACJE,KAAMlB,EAAKkB,KACXC,YAAanB,EAAKmB,YAClBC,SAA4B,OAAlBpB,EAAKoB,SAAoB,OAASpB,EAAKoB,SACjDC,kBAAmBrB,EAAKqB,kBACxBC,eAAgBtB,EAAKsB,eACrBC,cAAevB,EAAKuB,cACpBC,sBAAuBxB,EAAKwB,sBAC5BC,iBAAkBzB,EAAKyB,iBACvBC,mBAAoB1B,EAAK0B,mBACzBC,kBAAmB3B,EAAK2B,kBACxBC,kBAAmB5B,EAAK4B,kBACxBC,mBAAoB7B,EAAK6B,mBACzBC,uBAAwB9B,EAAK8B,uBAC7BC,MAAO/B,EAAK+B,MACZC,SAAUhC,EAAKgC,SACfC,UAAU,GACZ,IAGd,GACD,CAACpB,EAAIZ,IAER,MAAMkD,EAAeC,IAAsB,IAArB,KAAElC,EAAI,MAAEmC,GAAOD,EACjC,MAAME,GAAaC,EAAAA,EAAAA,GAAerC,EAAMmC,EAAOrD,GAC/CgB,GAASwC,IAAI,IAAWA,EAAM,CAACtC,GAAOmC,EAAOC,gBAAc,EAGzDG,EAAsB,IAAIC,EAAAA,MAA2Bd,GAgC3D,OACIe,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAACC,SAAS,mBAAkBH,SAAA,EACjCC,EAAAA,EAAAA,MAACG,EAAAA,GAAU,CAACC,IAAI,KAAKC,MAAM,UAASN,SAAA,EAChCF,EAAAA,EAAAA,KAACS,EAAAA,GAAiB,CAAClD,KAAK,WAAWlB,KAAMA,EAAMqE,SAAUlB,KACzDW,EAAAA,EAAAA,MAACQ,EAAAA,EAAgB,CAAAT,SAAA,EACbF,EAAAA,EAAAA,KAACY,EAAAA,GAAW,CAACrD,KAAK,OAAOlB,KAAMA,EAAMqE,SAAUlB,EAAcqB,UAAQ,KACrEb,EAAAA,EAAAA,KAACY,EAAAA,GAAW,CAACrD,KAAK,cAAclB,KAAMA,EAAMqE,SAAUlB,KACtDQ,EAAAA,EAAAA,KAACc,EAAAA,GAAc,CAACvD,KAAK,WAAWwD,QAASjB,EAAqBY,SAAUlB,EAAcnD,KAAMA,KAC5F2D,EAAAA,EAAAA,KAACc,EAAAA,GAAc,CAACvD,KAAK,oBAAoBwD,QAASC,EAAAA,GAAcN,SAAUlB,EAAcnD,KAAMA,KACzF,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMqB,qBACHsC,EAAAA,EAAAA,KAACc,EAAAA,GAAc,CAACvD,KAAK,iBAAiBwD,QAASxC,EAAwBmC,SAAUlB,EAAcnD,KAAMA,KAEzG2D,EAAAA,EAAAA,KAACc,EAAAA,GAAc,CAACvD,KAAK,gBAAgBwD,QAASC,EAAAA,GAAcN,SAAUlB,EAAcnD,KAAMA,KAC1F2D,EAAAA,EAAAA,KAACc,EAAAA,GAAc,CAACvD,KAAK,wBAAwBwD,QAASrC,EAAyBgC,SAAUlB,EAAcnD,KAAMA,KAC7G2D,EAAAA,EAAAA,KAACiB,EAAAA,GAAiB,CAACC,OAAO,IAAI3D,KAAK,mBAAmBlB,KAAMA,EAAMqE,SAAUlB,EAAce,IAAI,OAC9FP,EAAAA,EAAAA,KAACc,EAAAA,GAAc,CAACvD,KAAK,qBAAqBwD,QAASI,EAAAA,GAA2BT,SAAUlB,EAAcnD,KAAMA,IAC9E,YAAzB,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,sBACHoC,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAACiB,EAAAA,GAAiB,CAAC1D,KAAK,oBAAoBlB,KAAMA,EAAMqE,SAAUlB,EAAce,IAAI,OACpFP,EAAAA,EAAAA,KAACiB,EAAAA,GAAiB,CAAC1D,KAAK,oBAAoBlB,KAAMA,EAAMqE,SAAUlB,EAAce,IAAI,SAG9D,iBAAzB,OAAJlE,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,sBACHiC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAACiB,EAAAA,GAAiB,CAAC1D,KAAK,yBAAyBlB,KAAMA,EAAMqE,SAAUlB,EAAce,IAAI,QAGnE,aAAzB,OAAJlE,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,sBACHiC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAACiB,EAAAA,GAAiB,CAAC1D,KAAK,qBAAqBlB,KAAMA,EAAMqE,SAAUlB,EAAce,IAAI,eAKrGP,EAAAA,EAAAA,KAACM,EAAAA,GAAU,CAACC,IAAI,KAAKC,MAAM,SAAQN,UAC/BF,EAAAA,EAAAA,KAACoB,EAAAA,EAAc,CAAC7D,KAAK,QAAQ8D,SAAc,OAAJhF,QAAI,IAAJA,OAAI,EAAJA,EAAM+B,MAAOkD,WAAYvC,EAAewC,iBAAkB/B,OAErGQ,EAAAA,EAAAA,KAACwB,EAAAA,EAAW,CAACnF,KAAMA,EAAMgB,QAASA,EAASH,GAAIA,EAAIuE,QAASpC,EAAgB9B,KAAK,kBACjF4C,EAAAA,EAAAA,MAACuB,EAAAA,GAAiB,CAAAxB,SAAA,EACdF,EAAAA,EAAAA,KAAC2B,EAAAA,GAAa,CAACC,MAAM,OAAOC,UAAU,OAAOC,QAtE9CC,KACX,IAAIC,EAAS,GACb,OAAY,OAAJ3F,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,oBACV,IAAK,SACDiE,EAAS,CAAC,qBAAsB,yBAA0B,YAC1D,MACJ,IAAK,cACDA,EAAS,CAAC,oBAAqB,oBAAqB,qBAAsB,YAC1E,MACJ,IAAK,UACDA,EAAS,CAAC,oBAAqB,oBAAqB,yBAA0B,YAC9E,MACJ,QACIA,EAAS,CAAC,qBAAsB,yBAA0B,oBAAqB,oBAAqB,WAAY,UAGpHC,EAAAA,EAAAA,IAAe5F,EAAMgB,EAAS2E,IAE1B1F,EADAY,GAEIgF,EAAAA,EAAAA,IAAmBhF,EAAI,IAAKb,EAAMgC,UAAU8D,EAAAA,EAAAA,IAAO9F,EAAKgC,UAAWZ,SAA4B,SAAlBpB,EAAKoB,SAAsB,KAAOpB,EAAKoB,UAAY0B,IAIhIiD,EAAAA,EAAAA,IAAkB,IAAK/F,EAAMgC,UAAU8D,EAAAA,EAAAA,IAAO9F,EAAKgC,UAAWZ,SAA4B,SAAlBpB,EAAKoB,SAAsB,KAAOpB,EAAKoB,WAAY,IACvH0B,EAAQkD,WAIxB,EA0C0EZ,QAASpC,KACvEW,EAAAA,EAAAA,KAACsC,EAAAA,GAAW,CAACV,MAAM,SAASE,QAASA,IAAM3C,EAAQkD,kBAG5D,C","sources":["redux/actions/MembersSettings/accessSchedule.js","views/Settings/MembersSetup/MembershipTypes/MembershipTypeForm.jsx"],"sourcesContent":["import api from '../../../services/api';\r\nimport EndPoints from '../../../services/endPoints';\r\nimport { types } from '../../types/types';\r\nimport { hideLoaderAction, showLoaderAction } from '../loaderAction';\r\nimport { showToast } from '../toastAction';\r\n\r\nconst getAccessSchedules = (setLoading) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.ACCESS_SCHEDULE);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            dispatch({\r\n                type: types.CHANGE_ACCESS_SCHEDULE,\r\n                payload: res.data,\r\n            });\r\n        }\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message ?? res }));\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst getAccessSchedule = (id, returnData) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n    const res = await api('get', EndPoints.ACCESS_SCHEDULE + id);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\n\r\nconst addAccessSchedule =\r\n    (data, history, tab = '', next) =>\r\n    async (dispatch) => {\r\n        dispatch(showLoaderAction());\r\n\r\n        const res = await api('post', EndPoints.ACCESS_SCHEDULE, data);\r\n        if (res.success) {\r\n            if (tab) {\r\n                history.replace(`/settings/members/access-schedule/edit/${res.data._id}/${tab}`);\r\n            } else if (next) {\r\n                next();\r\n            } else {\r\n                history.goBack();\r\n            }\r\n        }\r\n        dispatch(hideLoaderAction());\r\n    };\r\nconst editAccessSchedule =\r\n    (id, data, setLoading, history, tab = '') =>\r\n    async (dispatch) => {\r\n        setLoading(true);\r\n\r\n        const res = await api('put', EndPoints.ACCESS_SCHEDULE + id, data);\r\n        if (res.success) {\r\n            if (tab) {\r\n                history.replace(`/settings/members/access-schedule/edit/${res.data._id}/${tab}`);\r\n            } else {\r\n                history.goBack();\r\n            }\r\n            dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        }\r\n        setLoading(false);\r\n    };\r\nconst deleteAccessSchedule = (id) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.ACCESS_SCHEDULE + id);\r\n    if (res.success) {\r\n        dispatch(getAccessSchedules(() => {}));\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nexport { getAccessSchedules, getAccessSchedule, addAccessSchedule, editAccessSchedule, deleteAccessSchedule };\r\n","import React, { useEffect, useState } from 'react';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport { CustomDropDown, CustomInput, CustomInputNumber, CustomInputSwitch } from '../../../../shared/Input/AllInputs';\r\nimport formValidation from '../../../../utils/validations';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SpecialRestrictionOptions, defaultDiscountOptions, yesNoOptions } from '../../../../utils/dropdownConstants';\r\nimport CustomPickList from '../../../../shared/Input/CustomPickList';\r\nimport { getIds, showFormErrors } from '../../../../utils/commonFunctions';\r\nimport { getAccessSchedules } from '../../../../redux/actions/MembersSettings/accessSchedule';\r\nimport AddServices from '../../Inventory/CatalogItems/AddServices';\r\nimport useGetClubs from '../../../../hooks/useGetClubs';\r\nimport useDiscount from '../../../../hooks/useDiscount';\r\nimport { addMembershipType, editMembershipType, getMembershipType } from '../../../../redux/actions/Settings/MembershipSetup/membershipTypeAction';\r\n\r\nconst MembershipTypeForm = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        dispatch(getAccessSchedules());\r\n    }, [dispatch]);\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        description: '',\r\n        discount: 'None',\r\n        accessRestriction: false,\r\n        accessSchedule: null,\r\n        remoteCheckin: false,\r\n        transferToAnotherType: null,\r\n        clubCreditAmount: '',\r\n        specialResrictions: 'None',\r\n        minimumAgeAllowed: 0,\r\n        maximumAgeAllowed: 0,\r\n        maximumDaysAllowed: 0,\r\n        maximumDistanceAllowed: 0,\r\n        clubs: [],\r\n        services: [],\r\n        isActive: true,\r\n    });\r\n\r\n    const { AccessScheduleDropdown } = useSelector((state) => state.accessSchedule);\r\n    let { membershipTypesDropdown } = useSelector((state) => state.settings.members);\r\n    membershipTypesDropdown = membershipTypesDropdown?.filter((item) => item.name !== data?.name);\r\n\r\n    const { clubsDropdown } = useGetClubs();\r\n    const { allDiscountDropdown } = useDiscount();\r\n\r\n    const history = useHistory();\r\n\r\n    const { isTableLoading } = useSelector((state) => state?.tableLoader);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getMembershipType(id, (data) => {\r\n                    setData({\r\n                        name: data.name,\r\n                        description: data.description,\r\n                        discount: data.discount === null ? 'None' : data.discount,\r\n                        accessRestriction: data.accessRestriction,\r\n                        accessSchedule: data.accessSchedule,\r\n                        remoteCheckin: data.remoteCheckin,\r\n                        transferToAnotherType: data.transferToAnotherType,\r\n                        clubCreditAmount: data.clubCreditAmount,\r\n                        specialResrictions: data.specialResrictions,\r\n                        minimumAgeAllowed: data.minimumAgeAllowed,\r\n                        maximumAgeAllowed: data.maximumAgeAllowed,\r\n                        maximumDaysAllowed: data.maximumDaysAllowed,\r\n                        maximumDistanceAllowed: data.maximumDistanceAllowed,\r\n                        clubs: data.clubs,\r\n                        services: data.services,\r\n                        isActive: true,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const discountTypeOptions = [...defaultDiscountOptions, ...allDiscountDropdown];\r\n\r\n    const onSave = () => {\r\n        let ignore = [];\r\n        switch (data?.specialResrictions) {\r\n            case 'By Age':\r\n                ignore = ['maximumDaysAllowed', 'maximumDistanceAllowed', 'services'];\r\n                break;\r\n            case 'By Location':\r\n                ignore = ['minimumAgeAllowed', 'maximumAgeAllowed', 'maximumDaysAllowed', 'services'];\r\n                break;\r\n            case 'By Days':\r\n                ignore = ['maximumAgeAllowed', 'minimumAgeAllowed', 'maximumDistanceAllowed', 'services'];\r\n                break;\r\n            default:\r\n                ignore = ['maximumDaysAllowed', 'maximumDistanceAllowed', 'minimumAgeAllowed', 'maximumAgeAllowed', 'services', 'clubs'];\r\n                break;\r\n        }\r\n        if (showFormErrors(data, setData, ignore)) {\r\n            if (id) {\r\n                dispatch(\r\n                    editMembershipType(id, { ...data, services: getIds(data.services), discount: data.discount === 'None' ? null : data.discount }, history),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addMembershipType({ ...data, services: getIds(data.services), discount: data.discount === 'None' ? null : data.discount }, () =>\r\n                        history.goBack(),\r\n                    ),\r\n                );\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <FormPage backText=\"Membership Types\">\r\n                <CustomCard col=\"12\" title=\"General\">\r\n                    <CustomInputSwitch name=\"isActive\" data={data} onChange={handleChange} />\r\n                    <CustomGridLayout>\r\n                        <CustomInput name=\"name\" data={data} onChange={handleChange} required />\r\n                        <CustomInput name=\"description\" data={data} onChange={handleChange} />\r\n                        <CustomDropDown name=\"discount\" options={discountTypeOptions} onChange={handleChange} data={data} />\r\n                        <CustomDropDown name=\"accessRestriction\" options={yesNoOptions} onChange={handleChange} data={data} />\r\n                        {data?.accessRestriction && (\r\n                            <CustomDropDown name=\"accessSchedule\" options={AccessScheduleDropdown} onChange={handleChange} data={data} />\r\n                        )}\r\n                        <CustomDropDown name=\"remoteCheckin\" options={yesNoOptions} onChange={handleChange} data={data} />\r\n                        <CustomDropDown name=\"transferToAnotherType\" options={membershipTypesDropdown} onChange={handleChange} data={data} />\r\n                        <CustomInputNumber prefix=\"$\" name=\"clubCreditAmount\" data={data} onChange={handleChange} col=\"4\" />\r\n                        <CustomDropDown name=\"specialResrictions\" options={SpecialRestrictionOptions} onChange={handleChange} data={data} />\r\n                        {data?.specialResrictions === 'By Age' && (\r\n                            <>\r\n                                <CustomInputNumber name=\"minimumAgeAllowed\" data={data} onChange={handleChange} col=\"4\" />\r\n                                <CustomInputNumber name=\"maximumAgeAllowed\" data={data} onChange={handleChange} col=\"4\" />\r\n                            </>\r\n                        )}\r\n                        {data?.specialResrictions === 'By Location' && (\r\n                            <>\r\n                                <CustomInputNumber name=\"maximumDistanceAllowed\" data={data} onChange={handleChange} col=\"4\" />\r\n                            </>\r\n                        )}\r\n                        {data?.specialResrictions === 'By Days' && (\r\n                            <>\r\n                                <CustomInputNumber name=\"maximumDaysAllowed\" data={data} onChange={handleChange} col=\"4\" />\r\n                            </>\r\n                        )}\r\n                    </CustomGridLayout>\r\n                </CustomCard>\r\n                <CustomCard col=\"12\" title=\" Clubs\">\r\n                    <CustomPickList name=\"clubs\" selected={data?.clubs} sourceData={clubsDropdown} onPickListChange={handleChange} />\r\n                </CustomCard>\r\n                <AddServices data={data} setData={setData} id={id} loading={isTableLoading} name=\"Add Services\" />\r\n                <CustomButtonGroup>\r\n                    <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={onSave} loading={isTableLoading} />\r\n                    <LightButton label=\"Cancel\" onClick={() => history.goBack()} />\r\n                </CustomButtonGroup>\r\n            </FormPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MembershipTypeForm;\r\n"],"names":["getAccessSchedules","setLoading","async","res","api","EndPoints","ACCESS_SCHEDULE","_res$message","success","data","dispatch","type","types","CHANGE_ACCESS_SCHEDULE","payload","showToast","severity","summary","message","MembershipTypeForm","_membershipTypesDropd","useDispatch","id","useParams","useEffect","setData","useState","name","description","discount","accessRestriction","accessSchedule","remoteCheckin","transferToAnotherType","clubCreditAmount","specialResrictions","minimumAgeAllowed","maximumAgeAllowed","maximumDaysAllowed","maximumDistanceAllowed","clubs","services","isActive","AccessScheduleDropdown","useSelector","state","membershipTypesDropdown","settings","members","filter","item","clubsDropdown","useGetClubs","allDiscountDropdown","useDiscount","history","useHistory","isTableLoading","tableLoader","getMembershipType","handleChange","_ref","value","formErrors","formValidation","prev","discountTypeOptions","defaultDiscountOptions","_jsx","_Fragment","children","_jsxs","FormPage","backText","CustomCard","col","title","CustomInputSwitch","onChange","CustomGridLayout","CustomInput","required","CustomDropDown","options","yesNoOptions","CustomInputNumber","prefix","SpecialRestrictionOptions","CustomPickList","selected","sourceData","onPickListChange","AddServices","loading","CustomButtonGroup","PrimaryButton","label","className","onClick","onSave","ignore","showFormErrors","editMembershipType","getIds","addMembershipType","goBack","LightButton"],"sourceRoot":""}