{"version":3,"file":"static/js/63.333c8869.chunk.js","mappings":"oLAIe,SAASA,EAAQC,GAAkC,IAAjC,SAAEC,EAAQ,SAAEC,EAAQ,OAAEC,GAAQH,EAC3D,MAAMI,GAAUC,EAAAA,EAAAA,MAEVC,EAASA,KACPH,EACAC,EAAQG,QAAQJ,GAEhBC,EAAQI,QACZ,EAEJ,OACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAgB,CAAAT,SAAA,CACZC,GACGO,EAAAA,EAAAA,MAAA,OAAKE,UAAU,2BAA0BV,SAAA,EACrCW,EAAAA,EAAAA,KAAA,KAAGD,UAAU,2CAA2CE,QAASP,KACjEG,EAAAA,EAAAA,MAAA,OAAKE,UAAU,gDAAgDE,QAASP,EAAOL,SAAA,CAAC,WACnEC,QAGjB,MACJU,EAAAA,EAAAA,KAAAE,EAAAA,SAAA,CAAAb,SAAGA,MAGf,C,oJClBe,SAASc,IACpB,MAAMC,GAAYC,EAAAA,EAAAA,QAAO,OACzBC,EAAAA,EAAAA,YAAU,KACaC,MACf,MAAMC,EAASC,EAAAA,GAASC,KAAK,CACzBC,UAAWP,EAAUQ,QACrBC,QAAS,CAACC,KACVC,aAAc,CACVC,OAAQC,EAAAA,EAAUC,YAAcC,EAAAA,EAAUC,OAC1CC,WAAY,QACZC,QAAS,CAAEC,cAAc,UAADC,QAAYC,EAAAA,EAAAA,WAI5CjB,EAAOkB,GAAG,sBAAuBC,IAC7BC,QAAQC,IAAIF,EAAI,IAGpB,IAAIG,EAAetB,EAAOuB,OAE1BD,EAAaE,UAAU,UAAW,CAC9BC,GAAI,OACJlC,UAAW,eACXmC,QAAS,SACTC,WAAY,CAAEC,MAAO,UAIR5B,EAAO6B,SACfC,IAAI,UAAW9B,IACpB+B,GAAgB,IAGpBT,EAAaU,aAAa,YAAa,sBACvCV,EAAaU,aAAa,YAAa,qBACvCV,EAAaU,aAAa,YAAa,qBAEvCV,EAAaU,aAAa,UAAW,iBACrCV,EAAaU,aAAa,UAAW,WACrCV,EAAaU,aAAa,UAAW,cACrCV,EAAaU,aAAa,UAAW,mBAarCpC,EAAUQ,QAAUJ,CAAM,EAE9BD,GAEAH,EAAUQ,QAAQ6B,aAAaH,IAAI,CAC/B,CACII,KAAM,QACNC,IAAK,6IAGT,CACID,KAAM,QACNC,IAAK,wEAIN,KACHvC,EAAUQ,QAAQgC,SAAS,IAGhC,IAEH,MAAML,EAAiBM,UACnB,MAAMC,EAAc1C,EAAUQ,QAAQmC,UACtC,IACInB,QAAQC,IAAIiB,EAChB,CAAE,MAAOE,GACLpB,QAAQoB,MAAM,6BAA8BA,EAChD,GAGEC,EAAcC,SAASC,eAAe,eAQ5C,OAPW,OAAXF,QAAW,IAAXA,GAAAA,EAAaG,iBAAiB,UAAWC,IACrC,MAAMC,EAAOD,EAAME,OAAOC,MAAM,GAC5BF,GACAlD,EAAUQ,QAAQ6B,aAAaH,IAAI,CAAC,CAAEI,KAAM,QAASY,SACzD,KAIAzD,EAAAA,EAAAA,MAAAK,EAAAA,SAAA,CAAAb,SAAA,EACIW,EAAAA,EAAAA,KAAA,OAAKD,UAAU,MAAM0D,IAAKrD,KAC1BJ,EAAAA,EAAAA,KAAA,SAAO0C,KAAK,OAAOT,GAAG,kBAGlC,CCvGe,SAASyB,IACpB,OACI1D,EAAAA,EAAAA,KAAA,OAAAX,UACIW,EAAAA,EAAAA,KAACb,EAAAA,EAAQ,CAACG,SAAS,qBAAoBD,UACnCW,EAAAA,EAAAA,KAACG,EAAW,OAI5B,C","sources":["shared/Layout/FormPage.jsx","shared/PageBuilder/PageBuilder.jsx","views/Settings/Agreement/AgreementTemplate/AgreementTemplateForm.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomTransition from '../Transitions/CustomTransition';\r\n\r\nexport default function FormPage({ children, backText, backTo }) {\r\n    const history = useHistory();\r\n\r\n    const onBack = () => {\r\n        if (backTo) {\r\n            history.replace(backTo);\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    };\r\n    return (\r\n        <CustomTransition>\r\n            {backText ? (\r\n                <div className=\"flex mb-3 text-dark-gray\">\r\n                    <i className=\"pi pi-angle-left text-2xl cursor-pointer\" onClick={onBack}></i>\r\n                    <div className=\" my-auto font-semibold text-lg cursor-pointer\" onClick={onBack}>\r\n                        Back to {backText}\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            <>{children}</>\r\n        </CustomTransition>\r\n    );\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport 'grapesjs/dist/css/grapes.min.css';\r\nimport './PageBuilder.css';\r\nimport grapesjs from 'grapesjs';\r\nimport plugin from 'grapesjs-preset-newsletter';\r\nimport constants from '../../constants';\r\nimport endPoints from '../../services/endPoints';\r\nimport { isAuthenticated } from '../../services/auth';\r\n\r\nexport default function PageBuilder() {\r\n    const editorRef = useRef(null);\r\n    useEffect(() => {\r\n        const initEditor = () => {\r\n            const editor = grapesjs.init({\r\n                container: editorRef.current,\r\n                plugins: [plugin],\r\n                assetManager: {\r\n                    upload: constants.endPointUrl + endPoints.ASSETS,\r\n                    uploadName: 'files',\r\n                    headers: { Authorization: `Bearer ${isAuthenticated()}` }, // Add any additional headers if required\r\n                },\r\n            });\r\n\r\n            editor.on('asset:upload:error', (err) => {\r\n                console.log(err);\r\n            });\r\n\r\n            let panelManager = editor.Panels;\r\n\r\n            panelManager.addButton('options', {\r\n                id: 'save',\r\n                className: 'fa fa-upload',\r\n                command: 'onSave',\r\n                attributes: { title: 'Save' },\r\n                // active: false,\r\n            });\r\n\r\n            const commands = editor.Commands;\r\n            commands.add('onSave', (editor) => {\r\n                handleSaveHTML();\r\n            });\r\n\r\n            panelManager.removeButton('devices-c', 'set-device-desktop');\r\n            panelManager.removeButton('devices-c', 'set-device-tablet');\r\n            panelManager.removeButton('devices-c', 'set-device-mobile');\r\n\r\n            panelManager.removeButton('options', 'sw-visibility');\r\n            panelManager.removeButton('options', 'preview');\r\n            panelManager.removeButton('options', 'fullscreen');\r\n            panelManager.removeButton('options', 'export-template');\r\n\r\n            // panelManager.removeButton('options', 'toggle-images');\r\n\r\n            // panelManager.removeButton('options', 'undo');\r\n            // panelManager.removeButton('options', 'redo');\r\n\r\n            // remove the buttons\r\n            // panelManager.removeButton('views', 'open-sm');\r\n            // panelManager.removeButton('views', 'open-layers');\r\n            // panelManager.removeButton('views', 'open-tm');\r\n\r\n            // editor.setComponents(existingHTML);\r\n            editorRef.current = editor;\r\n        };\r\n        initEditor();\r\n\r\n        editorRef.current.AssetManager.add([\r\n            {\r\n                type: 'image',\r\n                src: 'https://images.pexels.com/photos/20187061/pexels-photo-20187061/free-photo-of-women-in-the-village-grow-rice-together-for-the-family.jpeg',\r\n            },\r\n\r\n            {\r\n                type: 'image',\r\n                src: 'https://images.pexels.com/photos/7461579/pexels-photo-7461579.jpeg',\r\n            },\r\n        ]);\r\n\r\n        return () => {\r\n            editorRef.current.destroy();\r\n            // editorRef.current = null;\r\n        };\r\n    }, []);\r\n\r\n    const handleSaveHTML = async () => {\r\n        const htmlContent = editorRef.current.getHtml();\r\n        try {\r\n            console.log(htmlContent);\r\n        } catch (error) {\r\n            console.error('Error saving HTML content:', error);\r\n        }\r\n    };\r\n\r\n    const imageUpload = document.getElementById('imageUpload');\r\n    imageUpload?.addEventListener('change', (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            editorRef.current.AssetManager.add([{ type: 'image', file }]);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className=\"gpj\" ref={editorRef}></div>\r\n            <input type=\"file\" id=\"imageUpload\" />\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport PageBuilder from '../../../../shared/PageBuilder/PageBuilder';\r\n\r\nexport default function AgreementTemplateForm() {\r\n    return (\r\n        <div>\r\n            <FormPage backText=\"Agreement Template\">\r\n                <PageBuilder />\r\n            </FormPage>\r\n        </div>\r\n    );\r\n}\r\n"],"names":["FormPage","_ref","children","backText","backTo","history","useHistory","onBack","replace","goBack","_jsxs","CustomTransition","className","_jsx","onClick","_Fragment","PageBuilder","editorRef","useRef","useEffect","initEditor","editor","grapesjs","init","container","current","plugins","plugin","assetManager","upload","constants","endPointUrl","endPoints","ASSETS","uploadName","headers","Authorization","concat","isAuthenticated","on","err","console","log","panelManager","Panels","addButton","id","command","attributes","title","Commands","add","handleSaveHTML","removeButton","AssetManager","type","src","destroy","async","htmlContent","getHtml","error","imageUpload","document","getElementById","addEventListener","event","file","target","files","ref","AgreementTemplateForm"],"sourceRoot":""}