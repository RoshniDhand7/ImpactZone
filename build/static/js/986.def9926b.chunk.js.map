{"version":3,"file":"static/js/986.def9926b.chunk.js","mappings":"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","sources":["shared/Layout/FormPage.jsx","shared/Image/LogoImage.jsx","views/Settings/Business/Customization/CustomizationForm.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomTransition from '../Transitions/CustomTransition';\r\n\r\nexport default function FormPage({ children, backText, backTo }) {\r\n    const history = useHistory();\r\n\r\n    const onBack = () => {\r\n        if (backTo) {\r\n            history.replace(backTo);\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    };\r\n    return (\r\n        <CustomTransition>\r\n            {backText ? (\r\n                <div className=\"flex mb-3 text-dark-gray\">\r\n                    <i className=\"pi pi-angle-left text-2xl cursor-pointer\" onClick={onBack}></i>\r\n                    <div className=\" my-auto font-semibold text-lg cursor-pointer\" onClick={onBack}>\r\n                        Back to {backText}\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            <>{children}</>\r\n        </CustomTransition>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport ProfileImg from '../../assets/icons/camera.png';\r\n// import CameraIcon from '../../assets/icons/Vector.png';\r\nimport { getDefaultImage, getImageURL } from '../../utils/imageUrl';\r\n\r\nconst CustomLogoImage = ({\r\n    label,\r\n    name,\r\n    onFilesChange,\r\n    errorMessage,\r\n    extraClassName,\r\n    value,\r\n    data,\r\n    col,\r\n    required,\r\n    imgclass,\r\n    removeable,\r\n    editable,\r\n    uploadboxclass,\r\n    uploadIcon,\r\n    disabled = false,\r\n    ...props\r\n}) => {\r\n    const [files, setFiles] = useState(value || data?.[name] || []);\r\n\r\n    useEffect(() => {\r\n        if (value || data?.[name]) {\r\n            if (JSON.stringify(value || data?.[name]) !== JSON.stringify(files)) {\r\n                setFiles(value || data?.[name]);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value || data?.[name]]);\r\n\r\n    useEffect(() => {\r\n        if (onFilesChange) {\r\n            if (files.length) {\r\n                onFilesChange({ name, value: files });\r\n            }\r\n        } else {\r\n            onFilesChange({ name, value: [] });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [files, name]);\r\n\r\n    const onFileChange = (e) => {\r\n        const chossenFile = e.target.files;\r\n        handlefileChange(Object.values(chossenFile));\r\n    };\r\n    const handlefileChange = (uploadedfile) => {\r\n        let uploadedFiles = [];\r\n        uploadedfile.forEach((file) => {\r\n            if (files.findIndex((f) => f.name === file.name) === -1) {\r\n                uploadedFiles.push(file);\r\n            }\r\n        });\r\n        setFiles([...uploadedFiles]);\r\n    };\r\n\r\n    const onDelete = (id) => {\r\n        const s = files.filter((item, index) => index !== id);\r\n        setFiles([...s]);\r\n        onFilesChange({ name, value: [] });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"file\" className=\" \" name={name} onChange={onFileChange} id={name} accept=\"image/*\" hidden {...props} />\r\n            {files.length ? (\r\n                Object.values(files).map((image, i) => (\r\n                    <div key={i} className=\"photoDiv\">\r\n                        {removeable && <i onClick={() => onDelete(i)} className=\"pi pi-times cursor-pointer\"></i>}\r\n                        <img\r\n                            src={image ? (typeof image === 'string' ? getImageURL(image) : URL.createObjectURL(image)) : ProfileImg}\r\n                            onError={(e) => (e.target.src = getDefaultImage())}\r\n                            alt=\"pic\"\r\n                            className={`profile-img relative btn-border-color ${imgclass}`}\r\n                        />\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <div\r\n                    className=\"photo-upload flex justify-content-center align-items-center\"\r\n                    style={{\r\n                        height: '95px',\r\n                        width: '90px',\r\n                    }}\r\n                >\r\n                    <label htmlFor={name}>\r\n                        <img\r\n                            className=\"w-full h-full fit-cover\"\r\n                            style={{ width: '50px' }}\r\n                            src={ProfileImg}\r\n                            onError={(e) => (e.target.src = getDefaultImage())}\r\n                            alt=\"\"\r\n                        />\r\n                    </label>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"text-left \">\r\n                {errorMessage || data?.formErrors?.[name] ? <small className=\"p-error\">{errorMessage || data?.formErrors?.[name]}</small> : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomLogoImage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard from '../../../../shared/Cards/CustomCard';\r\nimport CustomLogoImage from '../../../../shared/Image/LogoImage';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { editCompany, getCompanyDetails } from '../../../../redux/actions/BusinessSettings/companyActions';\r\nimport formValidation from '../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../utils/commonFunctions';\r\n\r\nconst CustomizationForm = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const [data, setData] = useState({\r\n        logo: [],\r\n    });\r\n    useEffect(() => {\r\n        dispatch(getCompanyDetails());\r\n    }, [dispatch]);\r\n    let { allCompany } = useSelector((state) => state?.company);\r\n\r\n    useEffect(() => {\r\n        if (allCompany) {\r\n            setData({\r\n                logo: allCompany?.logo ? [allCompany?.logo] : [],\r\n            });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            dispatch(editCompany(data, setLoading, history));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FormPage backText=\"Customization\">\r\n                <CustomCard col=\"12\" title=\"Customization\">\r\n                    <CustomLogoImage name=\"logo\" data={data} removeable onFilesChange={handleChange} />\r\n                </CustomCard>\r\n                <CustomButtonGroup>\r\n                    <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={handleSave} loading={loading} />\r\n                    <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/business')} />\r\n                </CustomButtonGroup>\r\n            </FormPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CustomizationForm;\r\n"],"names":["FormPage","_ref","children","backText","backTo","history","useHistory","onBack","replace","goBack","_jsxs","CustomTransition","className","_jsx","onClick","_Fragment","_data$formErrors","_data$formErrors2","label","name","onFilesChange","errorMessage","extraClassName","value","data","col","required","imgclass","removeable","editable","uploadboxclass","uploadIcon","disabled","props","files","setFiles","useState","useEffect","JSON","stringify","length","handlefileChange","uploadedfile","uploadedFiles","forEach","file","findIndex","f","push","type","onChange","e","chossenFile","target","Object","values","id","accept","hidden","map","image","i","s","filter","item","index","onDelete","src","getImageURL","URL","createObjectURL","ProfileImg","onError","getDefaultImage","alt","concat","style","height","width","htmlFor","formErrors","dispatch","useDispatch","setData","logo","getCompanyDetails","allCompany","useSelector","state","company","loading","setLoading","CustomCard","title","CustomLogoImage","_ref2","formValidation","prev","CustomButtonGroup","PrimaryButton","handleSave","showFormErrors","editCompany","LightButton"],"sourceRoot":""}