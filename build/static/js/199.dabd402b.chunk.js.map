{"version":3,"file":"static/js/199.dabd402b.chunk.js","mappings":"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","sources":["shared/Layout/FormPage.jsx","utils/dropdownConstants.js","views/Settings/Business/Company/General.jsx","views/Settings/Business/Company/Online.jsx","views/Settings/Business/Company/CompanyForm.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomTransition from '../Transitions/CustomTransition';\r\n\r\nexport default function FormPage({ children, backText, backTo }) {\r\n    const history = useHistory();\r\n\r\n    const onBack = () => {\r\n        if (backTo) {\r\n            history.replace(backTo);\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    };\r\n    return (\r\n        <CustomTransition>\r\n            {backText ? (\r\n                <div className=\"flex mb-3 text-dark-gray\">\r\n                    <i className=\"pi pi-angle-left text-2xl cursor-pointer\" onClick={onBack}></i>\r\n                    <div className=\" my-auto font-semibold text-lg cursor-pointer\" onClick={onBack}>\r\n                        Back to {backText}\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            <>{children}</>\r\n        </CustomTransition>\r\n    );\r\n}\r\n","export const yesNoOptions = [\r\n    {\r\n        name: 'Yes',\r\n        value: 'true',\r\n    },\r\n    {\r\n        name: 'No',\r\n        value: 'false',\r\n    },\r\n];\r\n\r\nexport const amountTypeOptions = [\r\n    {\r\n        name: '$',\r\n        value: 'FIXED',\r\n    },\r\n    {\r\n        name: '%',\r\n        value: 'PERCENTAGE',\r\n    },\r\n];\r\nexport const CommissionGpTypeOptions = ['Products', 'Services', 'Agreement'].map((name) => ({ name, value: name }));\r\n\r\nexport const checkInLimitOptions = [\r\n    {\r\n        name: 'No Limit',\r\n        value: 'No Limit',\r\n    },\r\n];\r\n\r\nfor (let i = 1; i <= 50; i++) {\r\n    const option = {\r\n        name: `${i}`,\r\n        value: `${i}`,\r\n    };\r\n    checkInLimitOptions.push(option);\r\n}\r\nexport const perOptions = [\r\n    {\r\n        name: 'Week (7 days)',\r\n        value: 'Week (7 Days)',\r\n    },\r\n    {\r\n        name: 'Month (30 days)',\r\n        value: 'Month (30 days)',\r\n    },\r\n    {\r\n        name: 'Year (365 days)',\r\n        value: 'Year (365 days)',\r\n    },\r\n    {\r\n        name: 'Calendar Week (sunday)',\r\n        value: 'Calendar Week (sunday)',\r\n    },\r\n    {\r\n        name: 'Calendar Week (monday)',\r\n        value: 'Calendar Week (monday)',\r\n    },\r\n    {\r\n        name: 'Calendar Month',\r\n        value: 'Calendar Month',\r\n    },\r\n    {\r\n        name: 'Calendar Year',\r\n        value: 'Calendar Year',\r\n    },\r\n];\r\n\r\nexport const restrictionOptions = [\r\n    {\r\n        name: 'Club',\r\n        value: 'Club',\r\n    },\r\n    {\r\n        name: 'Company',\r\n        value: 'Company',\r\n    },\r\n];\r\n\r\nexport const daysOptions = [];\r\n\r\nfor (let i = 1; i <= 30; i++) {\r\n    const option = {\r\n        name: `${i} days`,\r\n        value: `${i} days`,\r\n    };\r\n    daysOptions.push(option);\r\n}\r\n\r\nexport const hoursOptions = [];\r\n\r\nfor (let i = 12; i <= 72; i += 12) {\r\n    const option = {\r\n        name: `${i} hours`,\r\n        value: `${i} hours`,\r\n    };\r\n    hoursOptions.push(option);\r\n}\r\n\r\nexport const reasonCodeTypeOptions = [\r\n    'Agreement Hold',\r\n    'Cancel Pending POS Transaction',\r\n    'Cancel Agreement',\r\n    'Cancel Price',\r\n    'Commission Override',\r\n    'Drawer Adjustment',\r\n    'Event Status',\r\n    'Freeze Agreement',\r\n    'No Sale',\r\n    'Void',\r\n    'Waive Tax',\r\n].map((name) => ({ name, value: name }));\r\n\r\n// export const reasonCodeTypeOptions = [\r\n//     {\r\n//         name: 'Agreement Hold',\r\n//         value: 'Agreement Hold',\r\n//     },\r\n//     {\r\n//         name: 'Cancel Pending POS Transaction',\r\n//         value: 'Cancel Pending POS Transaction',\r\n//     },\r\n//     {\r\n//         name: 'Cancel Agreement',\r\n//         value: 'Cancel Agreement',\r\n//     },\r\n//     {\r\n//         name: 'Cancel Price',\r\n//         value: 'Cancel Price',\r\n//     },\r\n//     {\r\n//         name: 'Commission Override',\r\n//         value: 'Commission Override',\r\n//     },\r\n//     {\r\n//         name: 'Drawer Adjustment',\r\n//         value: 'Drawer Adjustment',\r\n//     },\r\n//     {\r\n//         name: 'Event Status',\r\n//         value: 'Event Status',\r\n//     },\r\n//     {\r\n//         name: 'Freeze Agreement',\r\n//         value: 'Freeze Agreement',\r\n//     },\r\n//     {\r\n//         name: 'No Sale',\r\n//         value: 'No Sale',\r\n//     },\r\n//     {\r\n//         name: 'Void',\r\n//         value: 'Void',\r\n//     },\r\n//     {\r\n//         name: 'Waive Tax',\r\n//         value: 'Waive Tax',\r\n//     },\r\n// ];\r\n","import React, { useState, useEffect } from 'react';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport { CustomDropDown, CustomInput, CustomInputMask } from '../../../../shared/Input/AllInputs';\r\nimport { checkInLimitOptions, perOptions, restrictionOptions, yesNoOptions } from '../../../../utils/dropdownConstants';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getAllCountries, getCitiesByState, getStatesByCountry, showFormErrors } from '../../../../utils/commonFunctions';\r\nimport { editCompany } from '../../../../redux/actions/BusinessSettings/companyActions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport formValidation from '../../../../utils/validations';\r\n\r\nconst General = (allCompany) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (allCompany) {\r\n            setData({\r\n                companyId: allCompany?._id,\r\n                billingCountry: allCompany?.billingCountry,\r\n                companyName: allCompany?.companyName,\r\n                multiClubInOut: allCompany?.multiClubInOut,\r\n                clockInRequired: allCompany?.clockInRequired,\r\n                country: allCompany?.country,\r\n                address1: allCompany?.address1,\r\n                address2: allCompany?.address2,\r\n                city: allCompany?.city,\r\n                state: allCompany?.state,\r\n                zipCode: allCompany?.zipCode,\r\n                workNumber: allCompany?.workNumber,\r\n                workExtention: allCompany?.workExtention,\r\n                faxNumber: allCompany?.faxNumber,\r\n                primaryEmail: allCompany?.primaryEmail,\r\n                alternateEmail: allCompany?.alternateEmail,\r\n                companyUrl: allCompany?.companyUrl,\r\n                companyCode: allCompany?.companyCode,\r\n                batchId: allCompany?.batchId,\r\n                checkInLimit: allCompany?.checkInLimit,\r\n                per: allCompany?.per,\r\n                restrictionType: allCompany?.restrictionType,\r\n            });\r\n            if (allCompany?.country === 'US') {\r\n                const cities = getCitiesByState(allCompany.country, allCompany.state);\r\n                setCities(cities);\r\n            }\r\n        }\r\n    }, [allCompany]);\r\n\r\n    const [data, setData] = useState({\r\n        companyId: '',\r\n        billingCountry: '',\r\n        companyName: '',\r\n        multiClubInOut: false,\r\n        clockInRequired: false,\r\n        country: '',\r\n        address1: '',\r\n        address2: '',\r\n        city: '',\r\n        state: '',\r\n        zipCode: '',\r\n        workNumber: '',\r\n        workExtention: '',\r\n        faxNumber: '',\r\n        primaryEmail: '',\r\n        alternateEmail: '',\r\n        companyUrl: '',\r\n        companyCode: '',\r\n        batchId: '',\r\n        checkInLimit: 'No Limit',\r\n        per: 'Week (7 Days)',\r\n        restrictionType: 'Company',\r\n    });\r\n\r\n    const [country, setCountry] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const allCountryList = getAllCountries();\r\n        const updatedStates = getStatesByCountry('US');\r\n        setStates(updatedStates);\r\n        setCountry(allCountryList);\r\n    }, [dispatch]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n\r\n        if (name === 'state') {\r\n            const city = getCitiesByState('US', value);\r\n            setCities(city);\r\n            setData((prev) => ({ ...prev, [name]: value, city: '', formErrors }));\r\n        } else {\r\n            setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n        }\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            dispatch(editCompany(data, setLoading, history));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"General\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"companyId\" data={data} onChange={handleChange} disabled={true} required />\r\n                    <CustomInput name=\"billingCountry\" data={data} onChange={handleChange} required />\r\n                    <CustomInput name=\"companyName\" data={data} onChange={handleChange} required />\r\n                    <CustomDropDown\r\n                        label=\"Allow Multi-Club Clock In/Out\"\r\n                        name=\"multiClubInOut\"\r\n                        options={yesNoOptions}\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <CustomDropDown\r\n                        label=\"Clock In Department Required\"\r\n                        name=\"clockInRequired\"\r\n                        options={yesNoOptions}\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Address\">\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"country\" options={country} data={data} disabled={true} required />\r\n                    <CustomInput name=\"address1\" data={data} onChange={handleChange} required />\r\n                    <CustomInput name=\"address2\" data={data} onChange={handleChange} required />\r\n                    <CustomDropDown name=\"state\" options={states} data={data} onChange={handleChange} required />\r\n                    <CustomDropDown name=\"city\" options={cities} data={data} onChange={handleChange} required />\r\n                    <CustomInput name=\"zipCode\" data={data} onChange={handleChange} required />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Contact Information\">\r\n                <CustomGridLayout>\r\n                    <CustomInputMask name=\"workNumber\" id=\"phone\" mask=\"(999) 999-9999\" data={data} placeholder=\"\" onChange={handleChange} required />\r\n                    <CustomInput name=\"workExtention\" data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"faxNumber\" data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"primaryEmail\" data={data} onChange={handleChange} required />\r\n                    <CustomInput name=\"alternateEmail\" data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"companyUrl\" data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Data Export\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"companyCode\" data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"batchId\" data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Remote Check Ins\">\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"checkInLimit\" options={checkInLimitOptions} data={data} onChange={handleChange} />\r\n                    <CustomDropDown name=\"per\" options={perOptions} data={data} onChange={handleChange} disabled={data?.checkInLimit ? false : true} />\r\n                    <CustomDropDown\r\n                        name=\"restrictionType\"\r\n                        options={restrictionOptions}\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        disabled={data?.per ? false : true}\r\n                    />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={handleSave} loading={loading} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/business')} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default General;\r\n","import React, { useState, useEffect } from 'react';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport { CustomDropDown } from '../../../../shared/Input/AllInputs';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { daysOptions, hoursOptions, yesNoOptions } from '../../../../utils/dropdownConstants';\r\nimport { editCompany } from '../../../../redux/actions/BusinessSettings/companyActions';\r\nimport { useDispatch } from 'react-redux';\r\nimport formValidation from '../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../utils/commonFunctions';\r\n\r\nconst Online = (allCompany) => {\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        if (allCompany) {\r\n            setData({\r\n                bookOutFrom: allCompany?.bookOutFrom,\r\n                bookOutTo: allCompany?.bookOutTo,\r\n                allowCancelOnline: allCompany?.allowCancelOnline,\r\n                timeBeforeEvent: allCompany?.timeBeforeEvent,\r\n            });\r\n        }\r\n    }, [allCompany]);\r\n    const [data, setData] = useState({\r\n        bookOutFrom: '',\r\n        bookOutTo: '',\r\n        allowCancelOnline: false,\r\n        timeBeforeEvent: '',\r\n    });\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            dispatch(editCompany(data, setLoading, history));\r\n        }\r\n    };\r\n    // console.log('data>>', data);\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"Booking\">\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"bookOutFrom\" options={daysOptions} data={data} onChange={handleChange} required />\r\n                    <CustomDropDown name=\"bookOutTo\" options={daysOptions} data={data} onChange={handleChange} required />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Cancellation\">\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"allowCancelOnline\" options={yesNoOptions} data={data} onChange={handleChange} required />\r\n                    <CustomDropDown name=\"timeBeforeEvent\" options={hoursOptions} data={data} onChange={handleChange} required />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={handleSave} loading={loading} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/business')} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Online;\r\n","import React, { useEffect } from 'react';\r\nimport CustomTabView from '../../../../shared/TabView/CustomTabView';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport General from './General';\r\nimport Online from './Online';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCompanyDetails } from '../../../../redux/actions/BusinessSettings/companyActions';\r\n\r\nexport default function CompanyForm() {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getCompanyDetails());\r\n    }, [dispatch]);\r\n    let { allCompany } = useSelector((state) => state?.company);\r\n\r\n    const tabs = [\r\n        { title: 'General', content: General(allCompany) },\r\n        { title: 'Online', content: Online(allCompany) },\r\n    ];\r\n\r\n    return (\r\n        <FormPage backText=\"Company\">\r\n            <CustomTabView tabs={tabs} />\r\n        </FormPage>\r\n    );\r\n}\r\n"],"names":["FormPage","_ref","children","backText","backTo","history","useHistory","onBack","replace","goBack","_jsxs","CustomTransition","className","_jsx","onClick","_Fragment","yesNoOptions","name","value","amountTypeOptions","CommissionGpTypeOptions","map","checkInLimitOptions","i","option","concat","push","perOptions","restrictionOptions","daysOptions","hoursOptions","reasonCodeTypeOptions","allCompany","dispatch","useDispatch","loading","setLoading","useState","useEffect","setData","companyId","_id","billingCountry","companyName","multiClubInOut","clockInRequired","country","address1","address2","city","state","zipCode","workNumber","workExtention","faxNumber","primaryEmail","alternateEmail","companyUrl","companyCode","batchId","checkInLimit","per","restrictionType","cities","getCitiesByState","setCities","data","setCountry","states","setStates","allCountryList","getAllCountries","updatedStates","getStatesByCountry","handleChange","formErrors","formValidation","prev","CustomCard","col","title","CustomGridLayout","CustomInput","onChange","disabled","required","CustomDropDown","label","options","CustomInputMask","id","mask","placeholder","CustomButtonGroup","PrimaryButton","handleSave","showFormErrors","editCompany","LightButton","bookOutFrom","bookOutTo","allowCancelOnline","timeBeforeEvent","CompanyForm","getCompanyDetails","useSelector","company","tabs","content","General","Online","CustomTabView"],"sourceRoot":""}