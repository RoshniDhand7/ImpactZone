{"version":3,"file":"static/js/153.a6e05750.chunk.js","mappings":"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","sources":["shared/Layout/FormPage.jsx","views/Settings/Business/Clubs/ClubsForm.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomTransition from '../Transitions/CustomTransition';\r\n\r\nexport default function FormPage({ children, backText, backTo }) {\r\n    const history = useHistory();\r\n\r\n    const onBack = () => {\r\n        if (backTo) {\r\n            history.replace(backTo);\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    };\r\n    return (\r\n        <CustomTransition>\r\n            {backText ? (\r\n                <div className=\"flex mb-3 text-dark-gray\">\r\n                    <i className=\"pi pi-angle-left text-2xl cursor-pointer\" onClick={onBack}></i>\r\n                    <div className=\" my-auto font-semibold text-lg cursor-pointer\" onClick={onBack}>\r\n                        Back to {backText}\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            <>{children}</>\r\n        </CustomTransition>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport { CustomDropDown, CustomInput, CustomInputMask } from '../../../../shared/Input/AllInputs';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getAllCountries, getCitiesByState, getStatesByCountry, mobileFormatted, showFormErrors } from '../../../../utils/commonFunctions';\r\nimport { editClub, getClub } from '../../../../redux/actions/BusinessSettings/clubsAction';\r\nimport formValidation from '../../../../utils/validations';\r\n\r\nconst ClubsForm = () => {\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getClub(id, (data) => {\r\n                    const formattedPhoneNumber = mobileFormatted(data.phoneNumber);\r\n\r\n                    setData({\r\n                        ...data,\r\n                        phoneNumber: formattedPhoneNumber,\r\n                    });\r\n\r\n                    if (data.country === 'US') {\r\n                        const cities = getCitiesByState(data.country, data.state);\r\n                        setCities(cities);\r\n                    }\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        address: '',\r\n        country: 'US',\r\n        state: '',\r\n        city: '',\r\n        zipCode: '',\r\n    });\r\n\r\n    const [country, setCountry] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const allCountryList = getAllCountries();\r\n        const updatedStates = getStatesByCountry('US');\r\n        setStates(updatedStates);\r\n        setCountry(allCountryList);\r\n    }, [dispatch]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        if (name === 'state') {\r\n            const city = getCitiesByState('US', value);\r\n            setCities(city);\r\n            setData((prev) => ({ ...prev, [name]: value, city: '', formErrors }));\r\n        } else {\r\n            setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n        }\r\n    };\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSave = () => {\r\n        if (id) {\r\n            if (showFormErrors(data, setData)) {\r\n                dispatch(editClub(id, data, setLoading, history));\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <FormPage backText=\"Clubs\">\r\n                <CustomCard col=\"12\" title=\"Edit Club (Gym Floor)\">\r\n                    <CustomGridLayout>\r\n                        <CustomInput name=\"name\" data={data} onChange={handleChange} required />\r\n                        <CustomInputMask id=\"phone\" name=\"phoneNumber\" mask=\"(999) 999-9999\" data={data} placeholder=\"\" onChange={handleChange} required />\r\n                        <CustomInput name=\"email\" data={data} onChange={handleChange} required />\r\n                        <CustomInput name=\"address\" data={data} onChange={handleChange} required />\r\n                    </CustomGridLayout>\r\n                    <CustomGridLayout>\r\n                        <CustomDropDown name=\"country\" options={country} data={data} disabled={true} required />\r\n                        <CustomDropDown name=\"state\" options={states} data={data} onChange={handleChange} required />\r\n                        <CustomDropDown name=\"city\" options={cities} data={data} onChange={handleChange} required />\r\n                    </CustomGridLayout>\r\n                    <CustomGridLayout>\r\n                        <CustomInput name=\"zipCode\" data={data} onChange={handleChange} required />\r\n                    </CustomGridLayout>\r\n                </CustomCard>\r\n                <CustomButtonGroup>\r\n                    <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={handleSave} loading={loading} />\r\n                    <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/business')} />\r\n                </CustomButtonGroup>\r\n            </FormPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ClubsForm;\r\n"],"names":["FormPage","_ref","children","backText","backTo","history","useHistory","onBack","replace","goBack","_jsxs","CustomTransition","className","_jsx","onClick","_Fragment","ClubsForm","id","useParams","dispatch","useDispatch","useEffect","getClub","data","formattedPhoneNumber","mobileFormatted","phoneNumber","setData","country","cities","getCitiesByState","state","setCities","useState","name","email","address","city","zipCode","setCountry","states","setStates","allCountryList","getAllCountries","updatedStates","getStatesByCountry","handleChange","value","formErrors","formValidation","prev","loading","setLoading","CustomCard","col","title","CustomGridLayout","CustomInput","onChange","required","CustomInputMask","mask","placeholder","CustomDropDown","options","disabled","CustomButtonGroup","PrimaryButton","label","handleSave","showFormErrors","editClub","LightButton"],"sourceRoot":""}