{"version":3,"file":"static/js/824.108ab8b7.chunk.js","mappings":"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","sources":["redux/actions/EmployeeSettings/certificationAction.js","views/Settings/Employees/ManageEmployee/AddEmployee/Security.jsx","shared/Input/DragDropFiles.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/General.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Clubs.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Notes.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Certifications/Certifications.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/EmployeeDepartments.jsx","redux/actions/EmployeeSettings/classesAction.js","views/Settings/Employees/ManageEmployee/AddEmployee/Classes/AddandEditClasses.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Classes/PaySetup.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Classes/SubstituteOptionSetup.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Classes/ClassesSetup.jsx","redux/actions/EmployeeSettings/appointmentAction.js","views/Settings/Employees/ManageEmployee/AddEmployee/AppointmentSetup/AddandEditAppointmentPay.js","views/Settings/Employees/ManageEmployee/AddEmployee/AppointmentSetup/PaySetup.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/AppointmentSetup/BonusSetup.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/AppointmentSetup/CalendarDefault.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/AppointmentSetup/AppointmentSetup.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/SalesCommission/ItemCommission.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/SalesCommission/SalesCode.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/SalesCommission/SalesCommission.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/EmployeeForm.jsx"],"sourcesContent":["import moment from 'moment/moment';\r\nimport api from '../../../services/api';\r\nimport EndPoints from '../../../services/endPoints';\r\nimport { types } from '../../types/types';\r\nimport { hideLoaderAction, showLoaderAction } from '../loaderAction';\r\nimport { showToast } from '../toastAction';\r\nimport { uploadFiles } from '../../../utils/commonFunctions';\r\n\r\nconst getCertificates = (id, setLoading) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const params = { employee: id };\r\n    const res = await api('get', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES, {}, params);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            dispatch({\r\n                type: types.CHANGE_MANAGE_EMPLOYEE_CERTIFICATES,\r\n                payload: res.data,\r\n            });\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\nconst addCertificates =\r\n    (data, setLoading, history, tab = '') =>\r\n    async (dispatch) => {\r\n        setLoading(true);\r\n        if (data.certificate?.length) {\r\n            let durls = await uploadFiles(data.certificate);\r\n            data.certificate = durls[0].path;\r\n            data.certificateName = durls[0].originalname;\r\n            data.certificateSize = durls[0].size;\r\n        } else {\r\n            data.certificate = '';\r\n        }\r\n\r\n        const payload = {\r\n            ...data,\r\n            acquiredDate: moment(data.acquiredDate).format('MM/DD/YYYY'),\r\n            expirationDate: moment(data.expirationDate).format('MM/DD/YYYY'),\r\n        };\r\n\r\n        const res = await api('post', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES, payload);\r\n        if (res.success) {\r\n            if (tab) {\r\n                history.replace(`/settings/employee/manage-employee/edit/${res.data._id}/${tab}`);\r\n            } else {\r\n                history.goBack();\r\n            }\r\n            dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        }\r\n        setLoading(false);\r\n    };\r\nconst getCertificate = (id, returnData) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n    const res = await api('get', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES + id);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\nconst editCertificates =\r\n    (id, data, setLoading, history, tab = '') =>\r\n    async (dispatch) => {\r\n        setLoading(true);\r\n        if (data.certificate?.length) {\r\n            let durls = await uploadFiles(data.certificate);\r\n            data.certificate = durls[0].path;\r\n            data.certificateName = durls[0].originalname;\r\n            data.certificateSize = durls[0].size;\r\n        } else {\r\n            data.certificate = '';\r\n        }\r\n\r\n        const payload = {\r\n            ...data,\r\n            acquiredDate: moment(data.acquiredDate).format('MM/DD/YYYY'),\r\n            expirationDate: moment(data.expirationDate).format('MM/DD/YYYY'),\r\n        };\r\n        const res = await api('put', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES + id, payload);\r\n        if (res.success) {\r\n            if (tab) {\r\n                history.replace(`/settings/employee/manage-employee/edit/${res.data._id}/${tab}`);\r\n            } else {\r\n                history.goBack();\r\n            }\r\n            dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        }\r\n        setLoading(false);\r\n    };\r\nconst deleteCertificates = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES + id);\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nconst getEmployeeNotes = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.NOTES, '', { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeNotes = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.NOTES, data);\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\nexport { getCertificates, addCertificates, editCertificates, deleteCertificates, getCertificate, getEmployeeNotes, addEmployeeNotes };\r\n","import React, { useEffect, useState } from 'react';\r\nimport CustomCard, { CustomGridLayout } from '../../../../../shared/Cards/CustomCard';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../../shared/Button/CustomButton';\r\nimport { CustomCalenderInput, CustomDropDown, CustomInput, CustomInputNumber } from '../../../../../shared/Input/AllInputs';\r\nimport { yesNoOptions } from '../../../../../utils/dropdownConstants';\r\nimport CustomPickList from '../../../../../shared/Input/CustomPickList';\r\nimport formValidation from '../../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../../utils/commonFunctions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { addEmployees, editEmployee, getEmployee } from '../../../../../redux/actions/EmployeeSettings/employeesAction';\r\nimport { useParams } from 'react-router';\r\nimport { getJobDetails } from '../../../../../redux/actions/BusinessSettings/jobActions';\r\nimport { getSecurityRoles } from '../../../../../redux/actions/EmployeeSettings/securityRolesAction';\r\n\r\nconst Security = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        dispatch(getJobDetails());\r\n        dispatch(getSecurityRoles());\r\n    }, [dispatch]);\r\n\r\n    let { allSecurityRoles } = useSelector((state) => state?.securityRole);\r\n    allSecurityRoles = allSecurityRoles?.map((item) => ({ name: item.name, value: item._id }));\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getEmployee(id, (data) => {\r\n                    setData({\r\n                        firstName: data.firstName,\r\n                        lastName: data.lastName,\r\n                        middleInitial: data.middleInitial,\r\n                        jobTitle: data.jobTitle,\r\n                        dob: new Date(data.dob),\r\n                        socialSecurity: data.socialSecurity,\r\n                        barCode: data.barCode,\r\n                        accessCode: data.accessCode,\r\n                        email: data.email,\r\n                        multiClubClockIn: data.multiClubClockIn,\r\n                        securityRoles: data.securityRoles,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n\r\n    const { allJobTitle } = useSelector((state) => state.jobTitle);\r\n    const [data, setData] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        middleInitial: '',\r\n        jobTitle: null,\r\n        dob: '',\r\n        socialSecurity: '',\r\n        barCode: 0,\r\n        accessCode: '',\r\n        email: '',\r\n        multiClubClockIn: '',\r\n        securityRoles: [],\r\n    });\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = (tab) => {\r\n        let ignore = ['jobTitle'];\r\n\r\n        if (showFormErrors(data, setData, ignore)) {\r\n            if (id) {\r\n                dispatch(editEmployee(id, data, setLoading, history, tab));\r\n            } else {\r\n                dispatch(addEmployees(data, setLoading, history, tab));\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"Personal\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"firstName\" required col={3} data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"middleInitial\" col={1} data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"lastName\" required data={data} onChange={handleChange} />\r\n                    <CustomDropDown\r\n                        name=\"jobTitle\"\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        options={allJobTitle?.map((item, index) => {\r\n                            return { label: item.jobTitle, value: item._id };\r\n                        })}\r\n                        optionLabel=\"label\"\r\n                    />\r\n                    <CustomCalenderInput name=\"dob\" data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"socialSecurity\" data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"System\">\r\n                <CustomGridLayout>\r\n                    <CustomInputNumber name=\"barCode\" required data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"accessCode\" required data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"email\" required data={data} onChange={handleChange} />\r\n                    <CustomDropDown label=\"Allow Multi-Club Clock In/Out\" name=\"multiClubClockIn\" options={yesNoOptions} data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Select Roles\">\r\n                <div col={12}>\r\n                    <CustomPickList name=\"securityRoles\" selected={data?.securityRoles} sourceData={allSecurityRoles} onPickListChange={handleChange} />\r\n                </div>\r\n            </CustomCard>\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={() => handleSave('')} loading={loading} />\r\n                <PrimaryButton label=\"Save & Next\" className=\"mx-2\" onClick={() => handleSave('?tab=general')} loading={loading} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/employee')} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Security;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { Avatar } from 'primereact/avatar';\r\nimport { Badge } from 'primereact/badge';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { getImageURL } from '../../utils/imageUrl';\r\n\r\nconst PhotoUpload = ({ name, value, data, onDropChange, multiple = true }) => {\r\n    const [selectedImages, setSelectedImages] = useState(value || data?.[name] || []);\r\n\r\n    useEffect(() => {\r\n        if (value || data?.[name]) {\r\n            if (JSON.stringify(value || data?.[name]) !== JSON.stringify(selectedImages)) {\r\n                setSelectedImages(value || data?.[name]);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value || data?.[name]]);\r\n\r\n    useEffect(() => {\r\n        if (onDropChange) {\r\n            onDropChange({ name, value: selectedImages });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedImages, name]);\r\n\r\n    const onDrop = useCallback(\r\n        (acceptedFiles, rejectedFiles) => {\r\n            if (rejectedFiles.length > 0) {\r\n            } else {\r\n                acceptedFiles.forEach((file) => {\r\n                    const isFileAlreadySelected = selectedImages.some((selectedFile) => selectedFile.name === file.name);\r\n\r\n                    if (!isFileAlreadySelected) {\r\n                        setSelectedImages((prevState) => [...prevState, file]);\r\n                    } else {\r\n                        // console.log(`File \"${file.name}\" is already selected.`);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        [selectedImages],\r\n    );\r\n\r\n    const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({\r\n        onDrop,\r\n        multiple,\r\n        // maxFiles: 1,\r\n        accept: {\r\n            'image/*': ['.png', '.gif', '.jpeg', '.jpg'],\r\n        },\r\n    });\r\n\r\n    const style = useMemo(\r\n        () => ({\r\n            ...(isDragAccept ? { borderColor: '#00e676' } : {}),\r\n            ...(isDragReject ? { borderColor: '#ff1744' } : {}),\r\n        }),\r\n        [isDragAccept, isDragReject],\r\n    );\r\n\r\n    const removeImage = (index) => {\r\n        setSelectedImages((prevState) => prevState.filter((_, i) => i !== index));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div {...getRootProps({ style })} style={dropzoneStyle}>\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                    isDragReject ? (\r\n                        <>\r\n                            <Avatar icon=\"pi pi-exclamation-triangle\" size=\"large\" className=\"bg-red-50\" style={{ color: '#252B42' }} shape=\"circle\" />\r\n                            <p className=\"text-color-secondary font-medium text-lg\">Only image files are allowed!</p>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <Avatar icon=\"pi pi-download\" size=\"large\" className=\"bg-green-50\" style={{ color: '#252B42' }} shape=\"circle\" />\r\n                            <p className=\"text-color-secondary font-medium text-lg\">Drop the photo here...</p>\r\n                        </>\r\n                    )\r\n                ) : (\r\n                    <>\r\n                        <Avatar icon=\"pi pi-file\" size=\"large\" style={{ backgroundColor: '#F2F5FE', color: '#252B42' }} shape=\"circle\" />\r\n                        <p className=\"text-color-secondary font-medium text-lg\">Drag your photo here or browse.</p>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <div className=\"flex flex-wrap my-2\">\r\n                {selectedImages?.length > 0 &&\r\n                    selectedImages?.map((image, index) => (\r\n                        <Avatar className=\"p-overlay-badge my-2 mr-3\" image={getImageURL(image)} size=\"xlarge\">\r\n                            <Badge value=\"X\" icon=\"pi pi-fast-forward\" severity=\"danger\" className=\"cursor-pointer\" onClick={() => removeImage(index)} />\r\n                        </Avatar>\r\n                    ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst dropzoneStyle = {\r\n    border: '2px dashed #eeeeee',\r\n    borderRadius: '4px',\r\n    padding: '60px',\r\n    textAlign: 'center',\r\n    cursor: 'pointer',\r\n    background: '#fff',\r\n};\r\n\r\nexport default PhotoUpload;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../../shared/Button/CustomButton';\r\nimport { CustomCalenderInput, CustomDropDown, CustomInput, CustomInputMask, CustomTextArea } from '../../../../../shared/Input/AllInputs';\r\nimport CustomCard, { CustomGridLayout } from '../../../../../shared/Cards/CustomCard';\r\nimport { getAllCountries, getCitiesByState, getStatesByCountry, showFormErrors } from '../../../../../utils/commonFunctions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { yesNoOptions } from '../../../../../utils/dropdownConstants';\r\nimport PhotoUpload from '../../../../../shared/Input/DragDropFiles';\r\nimport formValidation from '../../../../../utils/validations';\r\nimport { editEmployee, getEmployee } from '../../../../../redux/actions/EmployeeSettings/employeesAction';\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\nconst General = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const [states, setStates] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getAllCountries();\r\n        const updatedStates = getStatesByCountry('US');\r\n        setStates(updatedStates);\r\n    }, [dispatch]);\r\n\r\n    const [data, setData] = useState({\r\n        hireDate: '',\r\n        terminationDate: '',\r\n        adpId: '',\r\n        primaryPhone: '',\r\n        workPhone: '',\r\n        workPhoneExt: '',\r\n        mobilePhone: '',\r\n        faxPhone: '',\r\n        emergencyPhone: '',\r\n        emergencyPhoneExt: '',\r\n        street: '',\r\n        city: '',\r\n        state: '',\r\n        zipCode: '',\r\n        emailNotification: true,\r\n        onlineNickName: '',\r\n        bio: '',\r\n        socialMedia: '',\r\n        alternateEmail: '',\r\n        image: [],\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getEmployee(id, (data) => {\r\n                    setData({\r\n                        hireDate: data.hireDate ? new Date(data.hireDate) : '',\r\n                        terminationDate: data.terminationDate,\r\n                        adpId: data.adpId,\r\n                        primaryPhone: data.primaryPhone,\r\n                        workPhone: data.workPhone,\r\n                        workPhoneExt: data.workPhoneExt,\r\n                        mobilePhone: data.mobilePhone,\r\n                        faxPhone: data.faxPhone,\r\n                        emergencyPhone: data.emergencyPhone,\r\n                        emergencyPhoneExt: data.emergencyPhoneExt,\r\n                        street: data.street,\r\n                        city: data.city,\r\n                        state: data.state,\r\n                        zipCode: data.zipCode,\r\n                        emailNotification: data.emailNotification,\r\n                        onlineNickName: data.onlineNickName,\r\n                        bio: data.bio,\r\n                        socialMedia: data.socialMedia,\r\n                        alternateEmail: data.alternateEmail,\r\n                        image: data.image ? [data.image] : [],\r\n                    });\r\n                    const cities = getCitiesByState('US', data.state);\r\n                    setCities(cities);\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n    useEffect(() => {\r\n        const formErrors = formValidation('city', data.city, data);\r\n        setData((prev) => ({ ...prev, city: data.city, formErrors }));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [data.city]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        if (name === 'state') {\r\n            const city = getCitiesByState('US', value);\r\n            setCities(city);\r\n\r\n            // Clear city and zip code\r\n            const clearedData = {\r\n                state: '',\r\n                city: '',\r\n                zipCode: '',\r\n            };\r\n\r\n            // Set form errors\r\n            const formErrors = {\r\n                ...formValidation('state', value, clearedData),\r\n                ...formValidation('city', '', clearedData),\r\n                ...formValidation('zipCode', '', clearedData),\r\n            };\r\n\r\n            setData((prev) => ({\r\n                ...prev,\r\n                city: '',\r\n                zipCode: '',\r\n                state: value,\r\n                formErrors,\r\n            }));\r\n        } else {\r\n            setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n        }\r\n    };\r\n    const handleSave = (tab) => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (id) {\r\n                dispatch(editEmployee(id, data, setLoading, history, tab));\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"Employement\">\r\n                <CustomGridLayout>\r\n                    <CustomCalenderInput id=\"hireDate\" name=\"hireDate\" onChange={handleChange} data={data} />\r\n                    <CustomInput name=\"adpId\" onChange={handleChange} data={data} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Contact\">\r\n                <CustomGridLayout>\r\n                    <CustomInputMask id=\"primaryPhone\" name=\"primaryPhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInputMask id=\"workPhone\" name=\"workPhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInputMask id=\"mobilePhone\" name=\"mobilePhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInputMask id=\"faxPhone\" name=\"faxPhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInputMask id=\"emergencyPhone\" name=\"emergencyPhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInput name=\"street\" onChange={handleChange} data={data} />\r\n                    <CustomDropDown name=\"state\" options={states} onChange={handleChange} data={data} />\r\n                    <CustomDropDown name=\"city\" options={cities} onChange={handleChange} data={data} />\r\n                    <CustomInput name=\"zipCode\" onChange={handleChange} data={data} disabled={!data.state} />\r\n                    <CustomDropDown name=\"emailNotification\" options={yesNoOptions} onChange={handleChange} data={data} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Online\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"onlineNickName\" onChange={handleChange} data={data} />\r\n                    <CustomInput name=\"socialMedia\" onChange={handleChange} data={data} />\r\n                    <CustomInput name=\"alternateEmail\" label=\"Alternate Email\" onChange={handleChange} data={data} />\r\n                    <CustomTextArea name=\"bio\" onChange={handleChange} data={data} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Photo\">\r\n                <PhotoUpload name=\"image\" onDropChange={handleChange} data={data} multiple={false} />\r\n                <div className=\"p-error text-sm\">{data?.formErrors?.image}</div>\r\n            </CustomCard>\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={() => handleSave('')} loading={loading} />\r\n                <PrimaryButton label=\"Save & Next\" className=\"mx-2\" onClick={() => handleSave('?tab=departments')} loading={loading} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/employee')} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default General;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CustomCard from '../../../../../shared/Cards/CustomCard';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../../shared/Button/CustomButton';\r\nimport CustomPickList from '../../../../../shared/Input/CustomPickList';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getClubs } from '../../../../../redux/actions/BusinessSettings/clubsAction';\r\nimport { editEmployee, getEmployee } from '../../../../../redux/actions/EmployeeSettings/employeesAction';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nconst Clubs = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        dispatch(getClubs());\r\n    }, [dispatch]);\r\n\r\n    let { clubsDropdown } = useSelector((state) => state.clubs);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getEmployee(id, (data) => {\r\n                    setData({\r\n                        reportDataAccess: data.reportDataAccess,\r\n                        clubs: data.clubs,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n    const [data, setData] = useState({\r\n        reportDataAccess: [],\r\n        clubs: [],\r\n    });\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        setData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n    const handleSave = () => {\r\n        if (id) {\r\n            dispatch(editEmployee(id, data, setLoading, history));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"Report Data Access\">\r\n                <CustomPickList name=\"reportDataAccess\" selected={data?.reportDataAccess} sourceData={clubsDropdown} onPickListChange={handleChange} />\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Clubs\">\r\n                <CustomPickList name=\"clubs\" selected={data?.clubs} sourceData={clubsDropdown} onPickListChange={handleChange} />\r\n            </CustomCard>\r\n\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" loading={loading} onClick={handleSave} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/employee')} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Clubs;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CustomFilterCard, CustomGridLayout } from '../../../../../shared/Cards/CustomCard';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CustomTable from '../../../../../shared/Table/CustomTable';\r\nimport CustomDialog from '../../../../../shared/Overlays/CustomDialog';\r\nimport { addEmployeeNotes, getEmployeeNotes } from '../../../../../redux/actions/EmployeeSettings/certificationAction';\r\nimport moment from 'moment';\r\nimport { CustomTextArea } from '../../../../../shared/Input/AllInputs';\r\nimport formValidation from '../../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../../utils/commonFunctions';\r\n\r\nconst Notes = () => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((state) => state.profile.user);\r\n    useEffect(() => {\r\n        if (user) {\r\n            setData({ ...data, takenBy: user.firstName, dateTime: new Date() });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [user]);\r\n    const [data, setData] = useState({\r\n        takenBy: user?.firstName,\r\n        dateTime: new Date(),\r\n        notes: '',\r\n    });\r\n    const [visible, setVisible] = useState(false);\r\n    const [notesData, setNotesData] = useState([]);\r\n    const funcGetNotes = (id) => {\r\n        dispatch(\r\n            getEmployeeNotes(id, setLoading, (data) => {\r\n                setNotesData(data);\r\n            }),\r\n        );\r\n    };\r\n    useEffect(() => {\r\n        if (id) {\r\n            funcGetNotes(id);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [id, dispatch]);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (id) {\r\n                dispatch(\r\n                    addEmployeeNotes({ ...data, employee: id }, setLoading, () => {\r\n                        funcGetNotes(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            }\r\n        }\r\n    };\r\n    const columns = [\r\n        { field: 'takenBy', header: 'Taken By' },\r\n        { field: 'dateTime', body: (r) => moment(r.dateTime).format('MM-DD-YYYY hh:mm a'), header: 'Date/Time' },\r\n        { field: 'notes', header: 'Notes' },\r\n    ];\r\n    const onClose = () => {\r\n        setData({ notes: '' });\r\n        setVisible(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} />\r\n            <CustomTable data={notesData} columns={columns} />\r\n            <CustomDialog width=\"100vh\" title={'Add Note'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomTextArea name=\"notes\" maxLength=\"266\" data={data} onChange={handleChange} inputClass=\"h-17rem\t\" />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notes;\r\n","import React, { useEffect } from 'react';\r\nimport { CustomFilterCard } from '../../../../../../shared/Cards/CustomCard';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { deleteCertificates, getCertificates } from '../../../../../../redux/actions/EmployeeSettings/certificationAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport { confirmDelete } from '../../../../../../utils/commonFunctions';\r\n\r\nconst Certifications = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(getCertificates(id));\r\n    }, [dispatch, id]);\r\n\r\n    const { allCertificates } = useSelector((state) => state.certificates);\r\n\r\n    const columns = [\r\n        { field: 'name', header: 'Name' },\r\n        { field: 'certificateNumber', header: 'Cerificate Number' },\r\n        { field: 'description', header: 'Description' },\r\n        { field: 'issuer', header: 'Issuer' },\r\n        { field: 'acquiredDate', header: 'Acquired Date' },\r\n        { field: 'expirationDate', header: 'Expiration Date' },\r\n    ];\r\n    const onEdit = (col) => {\r\n        history.push(`/settings/employee/manage-employee/edit/${col._id}/certifications/${id}`);\r\n    };\r\n    const onDelete = (col, position) => {\r\n        confirmDelete(\r\n            () => {\r\n                dispatch(\r\n                    deleteCertificates(col._id, () => {\r\n                        dispatch(getCertificates(id));\r\n                    }),\r\n                );\r\n            },\r\n            'Do you want to delete this Certificates ?',\r\n            position,\r\n        );\r\n    };\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add Certifications\" linkTo={`/settings/employee/manage-employee/add/certifications/${id}`} />\r\n            <CustomTable data={allCertificates} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Certifications;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CustomFilterCard, CustomGridLayout } from '../../../../../shared/Cards/CustomCard';\r\nimport CustomTable from '../../../../../shared/Table/CustomTable';\r\nimport CustomDialog from '../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomInputNumber, CustomMultiselect } from '../../../../../shared/Input/AllInputs';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    addEmployeeDepartment,\r\n    deleteEmployeeDepartment,\r\n    editEmployeeDepartment,\r\n    getDepartments,\r\n    getEmployeeDepartments,\r\n} from '../../../../../redux/actions/EmployeeSettings/departmentsAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport { confirmDelete } from '../../../../../utils/commonFunctions';\r\n\r\nexport default function EmployeeDepartments() {\r\n    const { id } = useParams();\r\n    let { departmentsDropdown } = useSelector((state) => state?.department);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getDepartments());\r\n        funcGetEmpDepartments(id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch]);\r\n\r\n    const funcGetEmpDepartments = (id) => {\r\n        dispatch(\r\n            getEmployeeDepartments(id, setLoading, (data) => {\r\n                setEmployeeDepartments(data);\r\n            }),\r\n        );\r\n    };\r\n\r\n    const columns = [\r\n        { field: 'departmentName', header: 'Name' },\r\n        { field: 'wage', header: 'Wage' },\r\n    ];\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeDeptId, setEmployeeDeptId] = useState(null);\r\n    const [employeeDepartments, setEmployeeDepartments] = useState([]);\r\n    const [data, setData] = useState({\r\n        departments: [],\r\n        wage: 0,\r\n    });\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        setData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (employeeDeptId) {\r\n            dispatch(\r\n                editEmployeeDepartment(employeeDeptId, { wage: data.wage }, setLoading, () => {\r\n                    funcGetEmpDepartments(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        } else {\r\n            dispatch(\r\n                addEmployeeDepartment({ ...data, employee: id }, setLoading, () => {\r\n                    funcGetEmpDepartments(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }\r\n    };\r\n\r\n    const onEdit = (id) => {\r\n        setEmployeeDeptId(id);\r\n        let _empDeptData = employeeDepartments.find((item) => item._id === id);\r\n        setData({ departments: [_empDeptData.department], wage: _empDeptData.wage });\r\n        setVisible(true);\r\n    };\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deleteEmployeeDepartment(col._id, () => {\r\n                    funcGetEmpDepartments(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Employee Department?');\r\n    };\r\n    const onClose = () => {\r\n        setVisible(false);\r\n        setData({\r\n            departments: [],\r\n            wage: 0,\r\n        });\r\n        setEmployeeDeptId(null);\r\n    };\r\n    let filterdDepartmentsDropdown = departmentsDropdown.filter((item) => !employeeDepartments.map((ed) => ed.department).includes(item.value));\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add Department\" onClick={() => setVisible(true)} />\r\n            <CustomTable data={employeeDepartments} columns={columns} onEdit={(e) => onEdit(e._id)} onDelete={onDelete} />\r\n\r\n            <CustomDialog title=\"Add\" visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomMultiselect\r\n                        col=\"12\"\r\n                        name=\"departments\"\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        options={employeeDeptId ? departmentsDropdown : filterdDepartmentsDropdown}\r\n                        disabled={employeeDeptId ? true : false}\r\n                    />\r\n                    <CustomInputNumber col=\"12\" name=\"wage\" data={data} onChange={handleChange} minFractionDigits={4} maxFractionDigits={4} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n}\r\n","import api from '../../../services/api';\r\nimport EndPoints from '../../../services/endPoints';\r\nimport { types } from '../../types/types';\r\nimport { hideLoaderAction, showLoaderAction } from '../loaderAction';\r\nimport { showToast } from '../toastAction';\r\n\r\nconst getEmployeeClasses = (employee, setLoading) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.EMPLOYEE_CLASSES, {}, { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            dispatch({\r\n                type: types.CHANGE_EMPLOYEE_CLASSES,\r\n                payload: res.data,\r\n            });\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst updateEmployeeLevel = (id, level, next) => async (dispatch) => {\r\n    const payload = {\r\n        employee: id,\r\n        isClassLevel: level,\r\n    };\r\n\r\n    const res = await api('post', EndPoints.UPDATE_CLASS_LEVEL, payload);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nconst addEmployeeClasses = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.EMPLOYEE_CLASSES, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\nconst editEmployeeClasses = (id, data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.EMPLOYEE_CLASSES + id, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst getEmployeeClaases = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.EMPLOYEE_CLASSES + employee);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\nconst deleteEmployeeClasses = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.EMPLOYEE_CLASSES + id);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nconst getEmployeeSubstitutionOptions = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.SUSTITITION_OPTIONS, '', { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeSubstitutionOptions = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.SUSTITITION_OPTIONS, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst editEmployeeSubstitutionOptions = (id, data, setLoading, next) => async () => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.SUSTITITION_OPTIONS + id, data);\r\n    if (res.success) {\r\n        next();\r\n    }\r\n    setLoading(false);\r\n};\r\nconst getSubstitutionOption = (substitutionOptionsId, returnData) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n    const res = await api('get', EndPoints.SUSTITITION_OPTIONS + substitutionOptionsId);\r\n\r\n    if (res.success) {\r\n        dispatch(hideLoaderAction());\r\n\r\n        if (returnData) {\r\n            returnData(res.data);\r\n        }\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\n\r\nconst deleteSubstitutionOption = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.SUSTITITION_OPTIONS + id);\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nexport {\r\n    getEmployeeClasses,\r\n    addEmployeeClasses,\r\n    getEmployeeClaases,\r\n    editEmployeeClasses,\r\n    deleteEmployeeClasses,\r\n    getEmployeeSubstitutionOptions,\r\n    addEmployeeSubstitutionOptions,\r\n    getSubstitutionOption,\r\n    deleteSubstitutionOption,\r\n    editEmployeeSubstitutionOptions,\r\n    updateEmployeeLevel,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { CustomCheckbox, CustomDropDown, CustomInputDecimalNumber } from '../../../../../../shared/Input/AllInputs';\r\nimport { classesPayTypeOptions } from '../../../../../../utils/dropdownConstants';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport {\r\n    addEmployeeClasses,\r\n    editEmployeeClasses,\r\n    getEmployeeClaases,\r\n    getEmployeeClasses,\r\n} from '../../../../../../redux/actions/EmployeeSettings/classesAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport formValidation from '../../../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../../../utils/commonFunctions';\r\n\r\nconst AddandEditClasses = ({ visible, setVisible, id, employeeClassId, setEmployeeClassId }) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeClasses, setEmployeeClassesData] = useState({});\r\n    const dispatch = useDispatch();\r\n\r\n    const onClose = () => {\r\n        setVisible(false);\r\n        setData(incrementalPay);\r\n        setEmployeeClassId(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (employeeClassId) {\r\n            funcGetEmpDepartments(employeeClassId);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [employeeClassId]);\r\n\r\n    const funcGetEmpDepartments = (id) => {\r\n        dispatch(\r\n            getEmployeeClaases(id, setLoading, (data) => {\r\n                setEmployeeClassesData(data);\r\n            }),\r\n        );\r\n    };\r\n\r\n    const incrementalPay = {\r\n        payType: 'INCREMENTAL_PAY',\r\n        oneToFiveClients: 0,\r\n        sixToTenClients: 0,\r\n        elevenToFifteenClients: 0,\r\n        sixteenToTwentyClients: 0,\r\n        twentyOneToTwentyFiveClients: 0,\r\n        twentySixPlusClients: 0,\r\n        noRegistrationPay: 0,\r\n        countUnpaidService: false,\r\n    };\r\n\r\n    const payperClassPayload = {\r\n        payType: 'PAY_PER_CLASS',\r\n        payPerClassRate: 0,\r\n        noRegistrationPay: 0,\r\n    };\r\n\r\n    const PayPerClient = {\r\n        payType: 'PAY_PER_CLIENT',\r\n        baseRate: 0,\r\n        countUnpaidService: false,\r\n        payPerClientRate: 0,\r\n        eachClientOver: [\r\n            {\r\n                noOfClients: 0,\r\n                rate: 0,\r\n            },\r\n            {\r\n                noOfClients: 0,\r\n                rate: 0,\r\n            },\r\n            {\r\n                noOfClients: 0,\r\n                rate: 0,\r\n            },\r\n        ],\r\n        maxPayPerClient: 0,\r\n        noRegistrationPay: 0,\r\n    };\r\n\r\n    const percentageRate = {\r\n        payType: 'PERCENTAGE_RATE',\r\n        percentage: 0,\r\n        noRegistrationPay: 0,\r\n    };\r\n\r\n    const [data, setData] = useState(incrementalPay);\r\n\r\n    useEffect(() => {\r\n        if (!employeeClassId) {\r\n            if (data?.payType === 'INCREMENTAL_PAY') {\r\n                setData(incrementalPay);\r\n            } else if (data?.payType === 'PAY_PER_CLASS') {\r\n                setData(payperClassPayload);\r\n            } else if (data?.payType === 'PAY_PER_CLIENT') {\r\n                setData(PayPerClient);\r\n            } else if (data?.payType === 'PERCENTAGE_RATE') {\r\n                setData(percentageRate);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [data?.payType]);\r\n\r\n    useEffect(() => {\r\n        if (employeeClassId && employeeClasses) {\r\n            const {\r\n                oneToFiveClients,\r\n                sixToTenClients,\r\n                elevenToFifteenClients,\r\n                sixteenToTwentyClients,\r\n                twentyOneToTwentyFiveClients,\r\n                twentySixPlusClients,\r\n                noRegistrationPay,\r\n                payPerClassRate,\r\n                baseRate,\r\n                payPerClientRate,\r\n                maxPayPerClient,\r\n                percentage,\r\n                countUnpaidService,\r\n            } = employeeClasses;\r\n            let newData = {};\r\n            switch (employeeClasses?.payType) {\r\n                case 'INCREMENTAL_PAY':\r\n                    newData = {\r\n                        payType: 'INCREMENTAL_PAY',\r\n                        oneToFiveClients,\r\n                        sixToTenClients,\r\n                        elevenToFifteenClients,\r\n                        sixteenToTwentyClients,\r\n                        twentyOneToTwentyFiveClients,\r\n                        twentySixPlusClients,\r\n                        noRegistrationPay,\r\n                        countUnpaidService,\r\n                    };\r\n                    break;\r\n                case 'PAY_PER_CLASS':\r\n                    newData = {\r\n                        payType: 'PAY_PER_CLASS',\r\n                        payPerClassRate,\r\n                        noRegistrationPay,\r\n                    };\r\n                    break;\r\n                case 'PAY_PER_CLIENT':\r\n                    newData = {\r\n                        payType: 'PAY_PER_CLIENT',\r\n                        baseRate,\r\n                        countUnpaidService,\r\n                        payPerClientRate,\r\n                        eachClientOver: employeeClasses.eachClientOver.map((item) => ({\r\n                            noOfClients: item.noOfClients,\r\n                            rate: item.rate,\r\n                        })),\r\n                        maxPayPerClient,\r\n                        noRegistrationPay,\r\n                    };\r\n                    break;\r\n                case 'PERCENTAGE_RATE':\r\n                    newData = {\r\n                        payType: 'PERCENTAGE_RATE',\r\n                        percentage,\r\n                        noRegistrationPay,\r\n                    };\r\n                    break;\r\n                default:\r\n                    newData = {};\r\n                    break;\r\n            }\r\n            setData(newData);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [employeeClasses]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const handleChange1 = (index, key, value) => {\r\n        const newList = [...data.eachClientOver]; // Use data instead of PayPerClient\r\n        newList[index][key] = value;\r\n        setData((prev) => ({ ...prev, eachClientOver: newList }));\r\n    };\r\n\r\n    const handleSave = () => {\r\n        let ignore = [];\r\n        if (data?.payType === 'INCREMENTAL_PAY') {\r\n            ignore = ['payPerClassRate', 'baseRate', 'payPerClientRate', 'maxPayPerClient', 'percentage'];\r\n        } else if (data?.payType === 'PAY_PER_CLASS') {\r\n            ignore = [\r\n                'oneToFiveClients',\r\n                'sixToTenClients',\r\n                'elevenToFifteenClients',\r\n                'sixteenToTwentyClients',\r\n                'twentyOneToTwentyFiveClients',\r\n                'twentySixPlusClients',\r\n                'baseRate',\r\n                'payPerClientRate',\r\n                'maxPayPerClient',\r\n                'percentage',\r\n            ];\r\n        } else if (data?.payType === 'PAY_PER_CLIENT') {\r\n            ignore = [\r\n                'oneToFiveClients',\r\n                'sixToTenClients',\r\n                'elevenToFifteenClients',\r\n                'sixteenToTwentyClients',\r\n                'twentyOneToTwentyFiveClients',\r\n                'twentySixPlusClients',\r\n                'percentage',\r\n                'payPerClassRate',\r\n            ];\r\n        } else {\r\n            ignore = [\r\n                'oneToFiveClients',\r\n                'sixToTenClients',\r\n                'elevenToFifteenClients',\r\n                'sixteenToTwentyClients',\r\n                'twentyOneToTwentyFiveClients',\r\n                'twentySixPlusClients',\r\n                'baseRate',\r\n                'payPerClientRate',\r\n                'maxPayPerClient',\r\n                'payPerClassRate',\r\n            ];\r\n        }\r\n        if (showFormErrors(data, setData, ignore)) {\r\n            if (employeeClassId) {\r\n                dispatch(\r\n                    editEmployeeClasses(employeeClassId, data, setLoading, () => {\r\n                        dispatch(getEmployeeClasses(id));\r\n\r\n                        onClose();\r\n                    }),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addEmployeeClasses({ ...data, employee: id }, setLoading, () => {\r\n                        dispatch(getEmployeeClasses(id));\r\n                        onClose();\r\n                    }),\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <CustomDialog title={employeeClassId ? 'Edit' : 'Add'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomDropDown\r\n                        name=\"payType\"\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        options={classesPayTypeOptions}\r\n                        col={12}\r\n                        disabled={employeeClassId ? true : false}\r\n                    />\r\n                    {data?.payType === 'INCREMENTAL_PAY' && (\r\n                        <>\r\n                            <CustomInputDecimalNumber label=\"1-5 Clients\" name=\"oneToFiveClients\" data={data} onChange={handleChange} />\r\n                            <CustomInputDecimalNumber label=\"6-10 Clients\" name=\"sixToTenClients\" data={data} onChange={handleChange} />\r\n                            <CustomInputDecimalNumber label=\"11-15 Clients\" name=\"elevenToFifteenClients\" data={data} onChange={handleChange} />\r\n                            <CustomInputDecimalNumber label=\"16-20 Clients\" name=\"sixteenToTwentyClients\" data={data} onChange={handleChange} />\r\n                            <CustomInputDecimalNumber label=\"21-25 Clients\" data={data} name=\"twentyOneToTwentyFiveClients\" onChange={handleChange} />\r\n                            <CustomInputDecimalNumber label=\"26+ Clients\" data={data} name=\"twentySixPlusClients\" onChange={handleChange} />\r\n                            <CustomInputDecimalNumber name=\"noRegistrationPay\" data={data} onChange={handleChange} />\r\n                            <CustomCheckbox name=\"countUnpaidService\" label=\"Count unpaid services\" data={data} onChange={handleChange} />\r\n                        </>\r\n                    )}\r\n\r\n                    {data?.payType === 'PAY_PER_CLASS' && (\r\n                        <>\r\n                            <CustomInputDecimalNumber data={data} name=\"payPerClassRate\" onChange={handleChange} />\r\n                            <CustomInputDecimalNumber name=\"noRegistrationPay\" data={data} onChange={handleChange} />\r\n                        </>\r\n                    )}\r\n                    {data?.payType === 'PAY_PER_CLIENT' && (\r\n                        <>\r\n                            <CustomInputDecimalNumber name=\"baseRate\" data={data} onChange={handleChange} />\r\n                            <CustomInputDecimalNumber name=\"payPerClientRate\" data={data} onChange={handleChange} />\r\n                            {data?.eachClientOver?.map((client, index) => (\r\n                                <div className=\" col-12 \" key={index}>\r\n                                    <div className=\"grid\">\r\n                                        <CustomInputDecimalNumber\r\n                                            name=\"noOfClients\"\r\n                                            value={client?.noOfClients}\r\n                                            onChange={(e) => handleChange1(index, 'noOfClients', e.value)}\r\n                                            col={6}\r\n                                        />\r\n                                        <CustomInputDecimalNumber\r\n                                            name=\"rate\"\r\n                                            value={client?.rate}\r\n                                            onChange={(e) => handleChange1(index, 'rate', e.value)}\r\n                                            col={6}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                            <CustomInputDecimalNumber data={data} name=\"noRegistrationPay\" onChange={handleChange} />\r\n                            <CustomInputDecimalNumber data={data} label=\"Max Pay\" name=\"maxPayPerClient\" onChange={handleChange} />\r\n                            <CustomCheckbox name=\"countUnpaidService\" label=\"Count unpaid services\" data={data} onChange={handleChange} />\r\n                        </>\r\n                    )}\r\n                    {data?.payType === 'PERCENTAGE_RATE' && (\r\n                        <>\r\n                            <CustomInputDecimalNumber data={data} name=\"percentage\" onChange={handleChange} />\r\n                            <CustomInputDecimalNumber\r\n                                name=\"noRegistrationPay\"\r\n                                prefix={'$'}\r\n                                data={data}\r\n                                onChange={handleChange}\r\n                                minFractionDigits={4}\r\n                                maxFractionDigits={4}\r\n                            />\r\n                        </>\r\n                    )}\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddandEditClasses;\r\n","import React, { useState, useEffect, useId } from 'react';\r\nimport { DataView } from 'primereact/dataview';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CustomCard, { CustomFilterCard, CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport {\r\n    addEmployeeClasses,\r\n    deleteEmployeeClasses,\r\n    editEmployeeClasses,\r\n    getEmployeeClasses,\r\n    updateEmployeeLevel,\r\n} from '../../../../../../redux/actions/EmployeeSettings/classesAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport AddandEditClasses from './AddandEditClasses';\r\nimport { confirmDelete, showFormErrors } from '../../../../../../utils/commonFunctions';\r\nimport { CustomDropDown, CustomInputSwitch, CustomMultiselect } from '../../../../../../shared/Input/AllInputs';\r\nimport PrimaryButton from '../../../../../../shared/Button/CustomButton';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { getEmployeesFilterType } from '../../../../../../redux/actions/EmployeeSettings/employeesAction';\r\nimport { getLevels } from '../../../../../../redux/actions/ScheduleSettings/levelActions';\r\nimport formValidation from '../../../../../../utils/validations';\r\n\r\nexport default function PaySetup() {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n\r\n    const [openSimilar, setOpenSimilarTo] = useState(false);\r\n    const [data, setData] = useState({\r\n        isClassLevel: [],\r\n        isDefaultPay: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        funcGetEmpClasses();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch]);\r\n    useEffect(() => {\r\n        dispatch(getLevels());\r\n    }, [dispatch]);\r\n\r\n    const { levelDropdown } = useSelector((state) => state.level);\r\n    const uniqueId = useId();\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        dispatch(\r\n            updateEmployeeLevel(id, value, () => {\r\n                // funcGetEmpClasses();\r\n            }),\r\n        );\r\n        setData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n    const [data1, setData1] = useState({\r\n        employee: '',\r\n    });\r\n\r\n    const handleInputChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data1);\r\n        setData1((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeClassId, setEmployeeClassId] = useState(null);\r\n    let { allEmployeeClasses } = useSelector((state) => state?.employees);\r\n\r\n    useEffect(() => {\r\n        if (allEmployeeClasses) {\r\n            setData((prev) => ({ ...prev, isClassLevel: allEmployeeClasses?.isClassLevel }));\r\n        }\r\n    }, [allEmployeeClasses]);\r\n\r\n    const funcGetEmpClasses = () => {\r\n        dispatch(getEmployeeClasses(id));\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getEmployeesFilterType('class'));\r\n    }, [dispatch]);\r\n\r\n    let { allEmployeesFilter } = useSelector((state) => state.employees);\r\n    allEmployeesFilter = allEmployeesFilter?.filter((item) => item._id !== id);\r\n\r\n    const onEdit = (id) => {\r\n        setEmployeeClassId(id?._id);\r\n        // let _empDeptData = employeeDepartments.find((item) => item._id === id);\r\n        // setData({ departments: [_empDeptData.department], wage: _empDeptData.wage });\r\n        setVisible(true);\r\n    };\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deleteEmployeeClasses(col._id, () => {\r\n                    funcGetEmpClasses();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Employee Classes?');\r\n    };\r\n    const handleSwitchChange = (id, active) => {\r\n        allEmployeeClasses = allEmployeeClasses?.list?.map((item) => {\r\n            if (item._id === id) {\r\n                dispatch(\r\n                    editEmployeeClasses(item?._id, { isDefaultPay: active }, setLoading, () => {\r\n                        funcGetEmpClasses();\r\n                    }),\r\n                );\r\n                return { ...item, isDefaultPay: active };\r\n            } else {\r\n                return { ...item, isDefaultPay: false };\r\n            }\r\n        });\r\n    };\r\n\r\n    const itemTemplate = (item) => {\r\n        const index = allEmployeeClasses.list.findIndex((i) => i._id === item._id);\r\n        return (\r\n            <div className=\"col-12 grid py-2  \" key={uniqueId}>\r\n                <div className=\"col-10\">{renderRow(item, index)}</div>\r\n                <div className=\"col-1 my-auto\">\r\n                    <CustomInputSwitch\r\n                        name=\"isDefaultPay\"\r\n                        label=\"Default Pay\"\r\n                        checked={item?.isDefaultPay}\r\n                        onChange={(e) => handleSwitchChange(item._id, e.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"col-1 my-auto\">\r\n                    <i className=\"mx-3 cursor-pointer pi pi-pencil\" onClick={() => onEdit(item)} />\r\n                    <i className=\" cursor-pointer pi pi-trash\" onClick={() => onDelete(item)} />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    const renderRow = (item, index) => {\r\n        switch (item.payType) {\r\n            case 'INCREMENTAL_PAY':\r\n                return (\r\n                    <div className=\"flex\">\r\n                        <div className=\"mx-3 flex w-2\">\r\n                            <div className=\"my-auto mr-4\">{index + 1}</div>\r\n                            <div>\r\n                                <div className=\"font-medium\">Pay</div>\r\n                                <div>Incremental Pay</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium \">1-5 Clients</div>\r\n                            <div>${item?.oneToFiveClients}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">6-10 Clients</div>\r\n                            <div>${item?.sixToTenClients}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">11-15 Clients</div>\r\n                            <div>${item?.elevenToFifteenClients}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">16-20 Clients</div>\r\n                            <div>${item?.sixteenToTwentyClients}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">21-25 Clients</div>\r\n                            <div>${item?.twentyOneToTwentyFiveClients}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">26+ Clients</div>\r\n                            <div>${item?.twentySixPlusClients}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">No Registration Pay</div>\r\n                            <div>${item?.noRegistrationPay ? item?.noRegistrationPay : '0'}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case 'PAY_PER_CLIENT':\r\n                return (\r\n                    <div className=\"flex\">\r\n                        <div className=\"mx-3 flex w-2\">\r\n                            <div className=\"my-auto mr-4\">{index + 1}</div>\r\n                            <div>\r\n                                <div className=\"font-medium\">Pay</div>\r\n                                <div>Pay Per Client</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">Base Rate</div>\r\n                            <div>${item?.baseRate}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">Per Client</div>\r\n                            <div>${item?.payPerClientRate}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"ml-3\">\r\n                            <div className=\"font-medium\">For each client over</div>\r\n                            <div>{item?.eachClientOver[0].noOfClients}</div>\r\n                        </div>\r\n                        <div className=\"ml-1 mr-3\">\r\n                            <div className=\"font-medium\">Add</div>\r\n                            <div>${item?.eachClientOver[0].rate}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"ml-3\">\r\n                            <div className=\"font-medium\">For each client over</div>\r\n                            <div>{item?.eachClientOver[1].noOfClients}</div>\r\n                        </div>\r\n                        <div className=\"ml-1 mr-3\">\r\n                            <div className=\"font-medium\">Add</div>\r\n                            <div>${item?.eachClientOver[1].rate}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"ml-3\">\r\n                            <div className=\"font-medium\">For each client over</div>\r\n                            <div>{item?.eachClientOver[2].noOfClients}</div>\r\n                        </div>\r\n                        <div className=\"ml-1 mr-3\">\r\n                            <div className=\"font-medium\">Add</div>\r\n                            <div>${item?.eachClientOver[2].rate}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-2\">\r\n                            <div className=\"font-medium\">No Registration Pay</div>\r\n                            <div>${item?.noRegistrationPay ? item?.noRegistrationPay : '0'}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-2\">\r\n                            <div className=\"font-medium\">Max Pay</div>\r\n                            <div>${item?.noRegistrationPay}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case 'PAY_PER_CLASS':\r\n                return (\r\n                    <div className=\"flex\">\r\n                        <div className=\"mx-3 flex w-2\">\r\n                            <div className=\"my-auto mr-4\">{index + 1}</div>\r\n                            <div>\r\n                                <div className=\"font-medium\">Pay</div>\r\n                                <div>Pay Per Class</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mx-3 w-1\">\r\n                            <div className=\"font-medium\">Price</div>\r\n                            <div>${item?.payPerClassRate}</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">No Registration Pay</div>\r\n                            <div>${item?.noRegistrationPay ? item?.noRegistrationPay : '0'}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case 'PERCENTAGE_RATE':\r\n                return (\r\n                    <div className=\"flex\">\r\n                        <div className=\"mx-3 flex w-2\">\r\n                            <div className=\"my-auto mr-4\">{index + 1}</div>\r\n                            <div>\r\n                                <div className=\"font-medium\">Pay</div>\r\n                                <div>% Rate</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mx-3 w-1\">\r\n                            <div className=\"font-medium\">Percentage</div>\r\n                            <div>{item?.percentage}%</div>\r\n                        </div>\r\n                        <hr className=\"text-100\" />\r\n                        <div className=\"mx-3\">\r\n                            <div className=\"font-medium\">No Registration Pay</div>\r\n                            <div>${item?.noRegistrationPay ? item?.noRegistrationPay : '0'}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            default:\r\n                return (\r\n                    <div className=\"grid\">\r\n                        <div className=\"col-1\">{index + 1}</div>\r\n                        <div className=\"col-11\">{item.payType}</div>\r\n                    </div>\r\n                );\r\n        }\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data1, setData1)) {\r\n            dispatch(\r\n                addEmployeeClasses(\r\n                    { type: 'class', employeeClassData: data1?.employee?.employeeClassData, similarTo: data1?.employee?.id, employee: id },\r\n                    setLoading,\r\n                    () => {\r\n                        dispatch(getEmployeeClasses(id));\r\n                        setOpenSimilarTo(false);\r\n                    },\r\n                ),\r\n            );\r\n            setData1({\r\n                employee: '',\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} extraClass=\"align-items-end \">\r\n                <div className=\" flex justify-content-between align-items-end\">\r\n                    <CustomMultiselect name=\"isClassLevel\" col={6} options={levelDropdown} optionLabel=\"name\" data={data} onChange={handleChange} />\r\n                    <PrimaryButton name=\"Similar To\" className=\"w-12rem\" label=\"Similar To\" onClick={() => setOpenSimilarTo(true)} />\r\n                </div>\r\n            </CustomFilterCard>\r\n            <CustomCard col=\"12\" title=\"Pay\">\r\n                <DataView value={allEmployeeClasses?.list} itemTemplate={itemTemplate} paginator rows={5} />\r\n                <AddandEditClasses\r\n                    visible={visible}\r\n                    setVisible={setVisible}\r\n                    id={id}\r\n                    employeeClassId={employeeClassId}\r\n                    setEmployeeClassId={setEmployeeClassId}\r\n                />\r\n            </CustomCard>\r\n            <CustomDialog title={'Similar To'} visible={openSimilar} onCancel={() => setOpenSimilarTo(false)} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomDropDown\r\n                        name=\"employee\"\r\n                        col={12}\r\n                        data={data1}\r\n                        onChange={handleInputChange}\r\n                        options={allEmployeesFilter?.map((item) => ({\r\n                            name: `${item.firstName} ${item.middleInitial} ${item.lastName}`,\r\n                            value: { id: item._id, employeeClassData: item.employeeClassData },\r\n                        }))}\r\n                    />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport CustomCard, { CustomFilterCard, CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport {\r\n    addEmployeeSubstitutionOptions,\r\n    deleteSubstitutionOption,\r\n    editEmployeeSubstitutionOptions,\r\n    getEmployeeSubstitutionOptions,\r\n    getSubstitutionOption,\r\n} from '../../../../../../redux/actions/EmployeeSettings/classesAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomDropDown } from '../../../../../../shared/Input/AllInputs';\r\nimport { substitutionPriorityOptions } from '../../../../../../utils/dropdownConstants';\r\nimport { confirmDelete, showFormErrors } from '../../../../../../utils/commonFunctions';\r\nimport formValidation from '../../../../../../utils/validations';\r\nimport { getEvents } from '../../../../../../redux/actions/ScheduleSettings/eventsActions';\r\n\r\nexport default function SubstituteOptionSetup() {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    const [Substitute, setSubstitute] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [visible, setVisible] = useState(false);\r\n    const [data, setData] = useState({\r\n        event: '',\r\n        priority: 'MEDIUM',\r\n    });\r\n\r\n    const [substitutionOptionsId, setSubstituteOptionsId] = useState('');\r\n    let { isClassLevel } = useSelector((state) => state?.employees);\r\n\r\n    useEffect(() => {\r\n        funcGetEmpSubstitution(id);\r\n        // dispatch(getEmployees());\r\n        dispatch(getEvents());\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    const { allEvents } = useSelector((state) => state.event);\r\n\r\n    const filteredEvents = allEvents\r\n        ?.filter((item) => item?.eventLevel?.includes(isClassLevel) && item.eventType === 'Class')\r\n        ?.map((item) => ({ name: item.name, value: item._id }));\r\n\r\n    const funcGetEmpSubstitution = (id) => {\r\n        dispatch(\r\n            getEmployeeSubstitutionOptions(id, setLoading, (data) => {\r\n                setSubstitute(data);\r\n            }),\r\n        );\r\n    };\r\n    const onEdit = (col) => {\r\n        setSubstituteOptionsId(col?._id);\r\n        setVisible(true);\r\n    };\r\n    useEffect(() => {\r\n        if (substitutionOptionsId) {\r\n            dispatch(\r\n                getSubstitutionOption(substitutionOptionsId, (data) => {\r\n                    setData({\r\n                        event: data.event,\r\n                        priority: data.priority,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [substitutionOptionsId, dispatch]);\r\n\r\n    const columns = [\r\n        { field: 'event', header: 'Name' },\r\n        { field: 'priority', header: 'Priority' },\r\n    ];\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const onClose = () => {\r\n        setVisible(false);\r\n        setData({\r\n            event: '',\r\n            priority: 'MEDIUM',\r\n        });\r\n        setSubstituteOptionsId(null);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (substitutionOptionsId) {\r\n                dispatch(\r\n                    editEmployeeSubstitutionOptions(substitutionOptionsId, { ...data, employee: id }, setLoading, () => {\r\n                        funcGetEmpSubstitution(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addEmployeeSubstitutionOptions({ ...data, employee: id }, setLoading, () => {\r\n                        funcGetEmpSubstitution(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deleteSubstitutionOption(col._id, () => {\r\n                    funcGetEmpSubstitution(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Substitution Option?');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} />\r\n            <CustomCard col=\"12\" title=\"Classes\">\r\n                <CustomTable data={Substitute} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n            </CustomCard>\r\n            <CustomDialog title={substitutionOptionsId ? 'Edit' : 'Add'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"event\" data={data} onChange={handleChange} options={filteredEvents} col={12} />\r\n                    <CustomDropDown name=\"priority\" data={data} onChange={handleChange} options={substitutionPriorityOptions} col={12} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport CustomTabView from '../../../../../../shared/TabView/CustomTabView';\r\nimport PaySetup from './PaySetup';\r\nimport SubstituteOptionSetup from './SubstituteOptionSetup';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ClassesSetup = () => {\r\n    const tabs = [\r\n        { title: 'Pay', content: <PaySetup /> },\r\n        // { title: 'Bonus', content: <BonusSetup type=\"bonus\" /> },\r\n        { title: 'Substitute Option', content: <SubstituteOptionSetup /> },\r\n    ];\r\n    let { isClassLevel } = useSelector((state) => state?.employees);\r\n\r\n    return (\r\n        <>\r\n            <CustomTabView name=\"classes\" tabs={tabs} useIndex={true} disabledTabIndices={isClassLevel ? [] : [1]} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ClassesSetup;\r\n","import api from '../../../services/api';\r\nimport EndPoints from '../../../services/endPoints';\r\nimport { types } from '../../types/types';\r\nimport { hideLoaderAction, showLoaderAction } from '../loaderAction';\r\nimport { showToast } from '../toastAction';\r\n\r\nconst getEmployeeAppointmentPay = (employee, type, setLoading) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.EMPLOYEE_APPOINTMENT, {}, { employee, type });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            dispatch({\r\n                type: types.CHANGE_EMPLOYEE_APPOINTMENT_PAY,\r\n                payload: res.data,\r\n            });\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeAppointmentPay = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.EMPLOYEE_APPOINTMENT, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\nconst isDefaultAppointmentPay = (data, next) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n\r\n    const res = await api('post', EndPoints.EMPLOYEE_APPOINTMENT_IS_DEFAULT, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\nconst updateEmployeeAppointmentPayLevel = (id, level, next) => async (dispatch) => {\r\n    const payload = {\r\n        employee: id,\r\n        isAppointmentLevel: level,\r\n    };\r\n\r\n    const res = await api('post', EndPoints.UPDATE_APPOINTMENT_CLASS_LEVEL, payload);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\nconst editEmployeeAppointmentPay = (id, data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.EMPLOYEE_APPOINTMENT + id, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst getEmployeeAppartment = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.EMPLOYEE_APPOINTMENT + employee);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\nconst deletetEmployeeAppartment = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.EMPLOYEE_APPOINTMENT + id);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nconst getEmployeeSubstitutionOptions = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.SUSTITITION_OPTIONS, '', { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeBonus = (type, data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n    let res;\r\n    if (type === 'appointment') {\r\n        res = await api('post', EndPoints.EMPLOYEE_APPOINTMENT, data);\r\n    } else {\r\n        res = await api('post', EndPoints.SALES_COMMISSION, data);\r\n    }\r\n\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst editEmployeeBonus = (type, id, data, setLoading, next) => async () => {\r\n    setLoading(true);\r\n    let res;\r\n    if (type === 'appointment') {\r\n        res = await api('put', EndPoints.EMPLOYEE_APPOINTMENT + id, data);\r\n    } else {\r\n        res = await api('put', EndPoints.SALES_COMMISSION + id, data);\r\n    }\r\n\r\n    if (res.success) {\r\n        next();\r\n    }\r\n    setLoading(false);\r\n};\r\nconst getEmployeeBonus = (type, id, returnData) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n    let res;\r\n    if (type === 'appointment') {\r\n        res = await api('get', EndPoints.EMPLOYEE_APPOINTMENT + id);\r\n    } else {\r\n        res = await api('get', EndPoints.SALES_COMMISSION + id);\r\n    }\r\n\r\n    if (res.success) {\r\n        dispatch(hideLoaderAction());\r\n\r\n        if (returnData) {\r\n            returnData(res.data);\r\n        }\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\n\r\nconst deleteEmployeeBonus = (type, id, next) => async (dispatch) => {\r\n    let res;\r\n    if (type === 'appointment') {\r\n        res = await api('delete', EndPoints.EMPLOYEE_APPOINTMENT + id);\r\n    } else {\r\n        res = await api('delete', EndPoints.SALES_COMMISSION + id);\r\n    }\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nexport {\r\n    getEmployeeAppointmentPay,\r\n    addEmployeeAppointmentPay,\r\n    getEmployeeAppartment,\r\n    editEmployeeAppointmentPay,\r\n    deletetEmployeeAppartment,\r\n    getEmployeeSubstitutionOptions,\r\n    addEmployeeBonus,\r\n    getEmployeeBonus,\r\n    deleteEmployeeBonus,\r\n    editEmployeeBonus,\r\n    isDefaultAppointmentPay,\r\n    updateEmployeeAppointmentPayLevel,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    addEmployeeAppointmentPay,\r\n    editEmployeeAppointmentPay,\r\n    getEmployeeAppartment,\r\n} from '../../../../../../redux/actions/EmployeeSettings/appointmentAction';\r\nimport formValidation from '../../../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../../../utils/commonFunctions';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport { CustomDropDown, CustomInputNumber, CustomMultiselect } from '../../../../../../shared/Input/AllInputs';\r\nimport { AppointmentPayPriorityOptions, amountTypeOptions } from '../../../../../../utils/dropdownConstants';\r\nimport { getEvents } from '../../../../../../redux/actions/ScheduleSettings/eventsActions';\r\n\r\nconst AddandEditAppointmentPay = ({ funcGetEmpAppointment, id, setVisible, visible, employeeAppartId, setEmployeeAppartId }) => {\r\n    const dispatch = useDispatch();\r\n    const initialState = {\r\n        event: [],\r\n        priority: 'PER-EVENT',\r\n        type: 'PAY',\r\n        pay: 0,\r\n        amountType: 'FIXED',\r\n    };\r\n    const [data, setData] = useState(initialState);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(getEvents());\r\n    }, [dispatch]);\r\n    let { isAppointmentLevel, allAppointmentPayDropdown } = useSelector((state) => state?.employees);\r\n\r\n    const { allEvents } = useSelector((state) => state.event);\r\n\r\n    const filteredEvents = allEvents\r\n        ?.filter((item) => item.eventLevel?.some((level) => isAppointmentLevel.includes(level)) && item.eventType === 'Appointments')\r\n        ?.map((item) => ({ name: item.name, value: item._id }));\r\n\r\n    const editFiltered = filteredEvents.filter((item) => !allAppointmentPayDropdown?.map((ed) => ed.name).includes(item.name) || data?.event === item?.value);\r\n    const filtered = filteredEvents.filter((item) => !allAppointmentPayDropdown?.map((ed) => ed.name).includes(item.name));\r\n\r\n    useEffect(() => {\r\n        if (employeeAppartId) {\r\n            dispatch(\r\n                getEmployeeAppartment(employeeAppartId, setLoading, (data) => {\r\n                    setData({\r\n                        event: data.event,\r\n                        priority: data.priority,\r\n                        type: 'PAY',\r\n                        pay: data.pay,\r\n                        amountType: data.amountType,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [employeeAppartId, dispatch]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (employeeAppartId) {\r\n                dispatch(\r\n                    editEmployeeAppointmentPay(employeeAppartId, { ...data }, setLoading, () => {\r\n                        funcGetEmpAppointment();\r\n                        onClose();\r\n                    }),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addEmployeeAppointmentPay({ ...data, employee: id }, setLoading, () => {\r\n                        funcGetEmpAppointment();\r\n                        onClose();\r\n                    }),\r\n                );\r\n            }\r\n        }\r\n    };\r\n    const onClose = () => {\r\n        setEmployeeAppartId(null);\r\n        setData(initialState);\r\n        setVisible(false);\r\n    };\r\n    return (\r\n        <>\r\n            <CustomDialog title={employeeAppartId ? 'Edit' : 'Add'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    {employeeAppartId ? (\r\n                        <CustomDropDown name=\"event\" data={data} onChange={handleChange} options={editFiltered} col={12} />\r\n                    ) : (\r\n                        <CustomMultiselect name=\"event\" data={data} onChange={handleChange} options={filtered} col={12} />\r\n                    )}\r\n\r\n                    <CustomDropDown name=\"priority\" data={data} onChange={handleChange} options={AppointmentPayPriorityOptions} col={12} />\r\n                    <CustomInputNumber col={8} name=\"pay\" data={data} onChange={handleChange} minFractionDigits={4} maxFractionDigits={4} />\r\n                    <CustomDropDown label=\"\" name=\"amountType\" options={amountTypeOptions} data={data} onChange={handleChange} col={4} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddandEditAppointmentPay;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { CustomFilterCard, CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport { useParams } from 'react-router-dom';\r\nimport { CustomDropDown, CustomMultiselect } from '../../../../../../shared/Input/AllInputs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    addEmployeeAppointmentPay,\r\n    deletetEmployeeAppartment,\r\n    getEmployeeAppointmentPay,\r\n    updateEmployeeAppointmentPayLevel,\r\n} from '../../../../../../redux/actions/EmployeeSettings/appointmentAction';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport { confirmDelete, showFormErrors } from '../../../../../../utils/commonFunctions';\r\nimport formValidation from '../../../../../../utils/validations';\r\nimport { getLevels } from '../../../../../../redux/actions/ScheduleSettings/levelActions';\r\nimport AddandEditAppointmentPay from './AddandEditAppointmentPay';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { getEmployeesFilterType } from '../../../../../../redux/actions/EmployeeSettings/employeesAction';\r\nimport PrimaryButton from '../../../../../../shared/Button/CustomButton';\r\n\r\nconst PaySetup = () => {\r\n    const dispatch = useDispatch();\r\n    const [visible, setVisible] = useState(false);\r\n    const [employeeAppartId, setEmployeeAppartId] = useState(null);\r\n    const [openSimilar, setOpenSimilarTo] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { id } = useParams();\r\n    const [data, setData] = useState({\r\n        isDefaultPay: '',\r\n        isAppointmentLevel: [],\r\n    });\r\n\r\n    const [data1, setData1] = useState({\r\n        employee: '',\r\n    });\r\n    const handleSave = () => {\r\n        if (showFormErrors(data1, setData1)) {\r\n            const filteredData = data1?.employee?.employeeAppointmentData?.filter((item) => {\r\n                return !allAppointmentPay?.list?.some((appointment) => appointment.eventId === item.event);\r\n            });\r\n\r\n            dispatch(\r\n                addEmployeeAppointmentPay(\r\n                    {\r\n                        type: 'PAY',\r\n                        employeeAppointmentData: filteredData,\r\n                        similarTo: data1?.employee?.id,\r\n                        employee: id,\r\n                    },\r\n                    setLoading,\r\n                    () => {\r\n                        dispatch(getEmployeeAppointmentPay(id, 'PAY'));\r\n                        setOpenSimilarTo(false);\r\n                    },\r\n                ),\r\n            );\r\n            setData1({\r\n                employee: '',\r\n            });\r\n        }\r\n    };\r\n    let { allAppointmentPay } = useSelector((state) => state?.employees);\r\n    const funcGetEmpAppointment = useCallback(() => {\r\n        dispatch(getEmployeeAppointmentPay(id, 'PAY'));\r\n    }, [dispatch, id]);\r\n\r\n    useEffect(() => {\r\n        funcGetEmpAppointment();\r\n    }, [funcGetEmpAppointment]);\r\n    useEffect(() => {\r\n        dispatch(getLevels());\r\n    }, [dispatch]);\r\n    useEffect(() => {\r\n        if (allAppointmentPay) {\r\n            setData((prev) => ({ ...prev, isAppointmentLevel: allAppointmentPay?.isAppointmentLevel }));\r\n        }\r\n    }, [allAppointmentPay]);\r\n\r\n    const { levelDropdown } = useSelector((state) => state.level);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n\r\n        if (name === 'isAppointmentLevel') {\r\n            dispatch(\r\n                updateEmployeeAppointmentPayLevel(id, value, () => {\r\n                    funcGetEmpAppointment();\r\n                }),\r\n            );\r\n            setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n        }\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const columns = [\r\n        { field: 'event', header: 'Name' },\r\n        { field: 'priority', header: 'Priority' },\r\n        { field: 'pay', header: 'Pay' },\r\n    ];\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deletetEmployeeAppartment(col._id, () => {\r\n                    funcGetEmpAppointment();\r\n                    setVisible(false);\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Appartment Pay?');\r\n    };\r\n    const onEdit = (col) => {\r\n        setEmployeeAppartId(col?._id);\r\n        setVisible(true);\r\n    };\r\n    useEffect(() => {\r\n        dispatch(getEmployeesFilterType('appointment'));\r\n    }, [dispatch]);\r\n\r\n    let { allEmployeesFilter } = useSelector((state) => state.employees);\r\n    allEmployeesFilter = allEmployeesFilter?.filter((item) => item._id !== id);\r\n    const handleInputChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data1);\r\n        setData1((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} extraClass=\"align-items-end\">\r\n                <div className=\" flex justify-content-between align-items-end\">\r\n                    <CustomMultiselect\r\n                        extraClassName=\"w-18rem\"\r\n                        name=\"isAppointmentLevel\"\r\n                        label=\"Appointment Level\"\r\n                        options={levelDropdown}\r\n                        optionLabel=\"name\"\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <PrimaryButton name=\"Similar To\" className=\"w-12rem\" label=\"Similar To\" onClick={() => setOpenSimilarTo(true)} />\r\n                </div>\r\n            </CustomFilterCard>\r\n            <CustomTable data={allAppointmentPay?.list} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n            <AddandEditAppointmentPay\r\n                funcGetEmpAppointment={funcGetEmpAppointment}\r\n                id={id}\r\n                setVisible={setVisible}\r\n                visible={visible}\r\n                employeeAppartId={employeeAppartId}\r\n                setEmployeeAppartId={setEmployeeAppartId}\r\n            />\r\n            <CustomDialog title={'Similar To'} visible={openSimilar} onCancel={() => setOpenSimilarTo(false)} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomDropDown\r\n                        name=\"employee\"\r\n                        col={12}\r\n                        data={data1}\r\n                        onChange={handleInputChange}\r\n                        options={allEmployeesFilter?.map((item) => ({\r\n                            name: `${item.firstName} ${item.middleInitial} ${item.lastName}`,\r\n                            value: { id: item._id, employeeAppointmentData: item.employeeAppointmentData?.filter((item) => item.type === 'PAY') },\r\n                        }))}\r\n                    />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PaySetup;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CustomFilterCard, CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomDropDown, CustomInputNumber, CustomMultiselect } from '../../../../../../shared/Input/AllInputs';\r\nimport { amountTypeOptions, bonusTypeConstantsOptions, durationOptions } from '../../../../../../utils/dropdownConstants';\r\nimport {\r\n    addEmployeeBonus,\r\n    deleteEmployeeBonus,\r\n    editEmployeeBonus,\r\n    getEmployeeAppointmentPay,\r\n    getEmployeeBonus,\r\n} from '../../../../../../redux/actions/EmployeeSettings/appointmentAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport formValidation from '../../../../../../utils/validations';\r\nimport { confirmDelete, showFormErrors } from '../../../../../../utils/commonFunctions';\r\nimport { getEmployeeSalesItem } from '../../../../../../redux/actions/EmployeeSettings/salesCommssionAction';\r\nimport { getCatalogItems } from '../../../../../../redux/actions/InventorySettings/catalogItemsAction';\r\nimport { getEvents } from '../../../../../../redux/actions/ScheduleSettings/eventsActions';\r\nimport { getEmployeesFilterType } from '../../../../../../redux/actions/EmployeeSettings/employeesAction';\r\nimport PrimaryButton from '../../../../../../shared/Button/CustomButton';\r\n\r\nconst BonusSetup = ({ type }) => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const [openSimilar, setOpenSimilarTo] = useState(false);\r\n\r\n    const initialState = {\r\n        bonusType: 'SERVICE_VALUE', //SINGLE_CLIENT,SERVICE_VALUE\r\n        sessionsValue: 0,\r\n        ofSessions: 0, //sessionsValue,ofSessions\r\n        over: 0,\r\n        duration: 'DAYS',\r\n        bonusAmount: 0,\r\n        type: 'BONUS',\r\n        amountType: 'FIXED',\r\n        services: [],\r\n    };\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeAppartBonusId, setemployeeAppartBonusId] = useState(null);\r\n    const [appointmentData, setAppointmentData] = useState([]);\r\n\r\n    const [data, setData] = useState(initialState);\r\n    const [data1, setData1] = useState({\r\n        employee: '',\r\n    });\r\n    useEffect(() => {\r\n        dispatch(getEmployeesFilterType(type === 'appointment' ? 'appointment' : 'salesCommission'));\r\n    }, [dispatch, type]);\r\n\r\n    let { allEmployeesFilter } = useSelector((state) => state.employees);\r\n    allEmployeesFilter = allEmployeesFilter?.filter((item) => item._id !== id);\r\n    const handleInputChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data1);\r\n        setData1((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    useEffect(() => {\r\n        dispatch(getCatalogItems());\r\n        dispatch(getEvents());\r\n    }, [dispatch]);\r\n\r\n    const { catalogServiceDropdown } = useSelector((state) => state.catalogItems);\r\n    let { isAppointmentLevel } = useSelector((state) => state?.employees);\r\n    const { allEvents } = useSelector((state) => state.event);\r\n\r\n    const filteredEvents = allEvents\r\n        ?.filter((item) => item?.eventLevel?.includes(isAppointmentLevel) && item.eventType === 'Appointments')\r\n        ?.map((item) => ({ name: item.name, value: item._id }));\r\n\r\n    useEffect(() => {\r\n        funcGetEmpAppointment(id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    const funcGetEmpAppointment = (id) => {\r\n        if (type === 'appointment') {\r\n            dispatch(getEmployeeAppointmentPay(id, 'BONUS', setLoading));\r\n        } else {\r\n            dispatch(\r\n                getEmployeeSalesItem(id, 'BONUS', setLoading, (data) => {\r\n                    setAppointmentData(data);\r\n                }),\r\n            );\r\n        }\r\n    };\r\n    let { allAppointmentPay } = useSelector((state) => state?.employees);\r\n\r\n    useEffect(() => {\r\n        if (employeeAppartBonusId) {\r\n            dispatch(\r\n                getEmployeeBonus(type, employeeAppartBonusId, (data) => {\r\n                    setData({\r\n                        bonusType: data.bonusType,\r\n                        sessionsValue: data.sessionsValue,\r\n                        ofSessions: data.ofSessions,\r\n                        over: data.selectTimeframe.over,\r\n                        duration: data.selectTimeframe.duration,\r\n                        bonusAmount: data.bonusAmount,\r\n                        type: 'BONUS',\r\n                        amountType: data.amountType,\r\n                        services: data.services,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [employeeAppartBonusId, dispatch]);\r\n\r\n    const onClose = () => {\r\n        setemployeeAppartBonusId(null);\r\n        setData(initialState);\r\n        setVisible(false);\r\n    };\r\n\r\n    const onEdit = (col) => {\r\n        setemployeeAppartBonusId(col?._id);\r\n        setVisible(true);\r\n    };\r\n\r\n    const handleSaveSimilar = () => {\r\n        if (showFormErrors(data1, setData1)) {\r\n            dispatch(\r\n                addEmployeeBonus(\r\n                    type,\r\n                    {\r\n                        ...(type === 'appointment'\r\n                            ? { employeeBonusData: data1?.employee?.employeeAppointmentData }\r\n                            : { employeeSalesCommissionData: data1?.employee?.employeeSalesCommissionData, type: 'bonus' }),\r\n                        similarTo: data1?.employee?.id,\r\n                        employee: id,\r\n                    },\r\n                    setLoading,\r\n                    () => {\r\n                        funcGetEmpAppointment(id);\r\n                        setOpenSimilarTo(false);\r\n                    },\r\n                ),\r\n            );\r\n\r\n            setData1({\r\n                employee: '',\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleSave = () => {\r\n        let ignore = [];\r\n        if (data?.bonusType === 'SINGLE_CLIENT') {\r\n            ignore = ['sessionsValue'];\r\n        } else {\r\n            ignore = ['ofSessions'];\r\n        }\r\n        if (showFormErrors(data, setData, ignore)) {\r\n            const { over, duration, ...rest } = data;\r\n            if (employeeAppartBonusId) {\r\n                dispatch(\r\n                    editEmployeeBonus(\r\n                        type,\r\n                        employeeAppartBonusId,\r\n                        {\r\n                            ...rest,\r\n                            selectTimeframe: {\r\n                                over,\r\n                                duration,\r\n                            },\r\n                        },\r\n                        setLoading,\r\n                        () => {\r\n                            funcGetEmpAppointment(id);\r\n                            onClose();\r\n                        },\r\n                    ),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addEmployeeBonus(\r\n                        type,\r\n                        {\r\n                            ...rest,\r\n                            selectTimeframe: {\r\n                                over,\r\n                                duration,\r\n                            },\r\n                            employee: id,\r\n                        },\r\n                        setLoading,\r\n                        () => {\r\n                            funcGetEmpAppointment(id);\r\n                            onClose();\r\n                        },\r\n                    ),\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deleteEmployeeBonus(type, col._id, () => {\r\n                    funcGetEmpAppointment(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Bonus?');\r\n    };\r\n    const columns = [\r\n        { field: 'bonusType', body: (r) => (r.bonusType === 'SERVICE_VALUE' ? 'Service Value' : 'Single Client'), header: 'Bonus Type' },\r\n        { field: 'Session', body: (r) => (r.bonusType === 'SERVICE_VALUE' ? r.sessionsValue : r.ofSessions), header: 'Value' },\r\n        { field: 'selectTimeframe.over', body: (r) => r.selectTimeframe.over + ' ' + r.selectTimeframe.duration.toLowerCase(), header: 'Time Frame' },\r\n        { field: 'bonusAmount', body: (r) => (r.amountType === 'FIXED' ? '$' + r.bonusAmount : r.bonusAmount + '%'), header: 'Bonus Amount' },\r\n\r\n        { field: 'services', body: (r) => r.services?.map((item) => item.name)?.join(','), header: 'Services' },\r\n    ];\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)}>\r\n                <div className=\" flex justify-content-between align-items-end\">\r\n                    <PrimaryButton name=\"Similar To\" className=\"w-12rem\" label=\"Similar To\" onClick={() => setOpenSimilarTo(true)} />\r\n                </div>\r\n            </CustomFilterCard>\r\n            <CustomTable data={type === 'appointment' ? allAppointmentPay?.list : appointmentData} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n\r\n            <CustomDialog\r\n                title={employeeAppartBonusId ? 'Edit' : 'Add'}\r\n                visible={visible}\r\n                onCancel={onClose}\r\n                loading={loading}\r\n                onSave={handleSave}\r\n                width=\"90vh\"\r\n            >\r\n                <CustomGridLayout>\r\n                    <CustomDropDown label=\"\" name=\"bonusType\" data={data} onChange={handleChange} options={bonusTypeConstantsOptions} col={6} />\r\n                    {data?.bonusType === 'SINGLE_CLIENT' ? (\r\n                        <CustomInputNumber col={6} label=\"No of Sessions\" name=\"ofSessions\" data={data} onChange={handleChange} />\r\n                    ) : (\r\n                        <CustomInputNumber col={6} name=\"sessionsValue\" data={data} onChange={handleChange} minFractionDigits={4} maxFractionDigits={4} />\r\n                    )}\r\n                    <CustomInputNumber col=\"6\" name=\"over\" data={data} onChange={handleChange} />\r\n                    <CustomDropDown label=\"\" name=\"duration\" data={data} onChange={handleChange} col={6} options={durationOptions} />\r\n                    <CustomInputNumber col={8} name=\"bonusAmount\" data={data} onChange={handleChange} minFractionDigits={4} maxFractionDigits={4} />\r\n                    <CustomDropDown label=\"\" name=\"amountType\" options={amountTypeOptions} data={data} onChange={handleChange} col={4} />\r\n                    <CustomMultiselect\r\n                        col=\"12\"\r\n                        name=\"services\"\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        options={type === 'appointment' ? filteredEvents : catalogServiceDropdown}\r\n                    />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n            <CustomDialog title={'Similar To'} visible={openSimilar} onCancel={() => setOpenSimilarTo(false)} loading={loading} onSave={handleSaveSimilar}>\r\n                <CustomGridLayout>\r\n                    <CustomDropDown\r\n                        name=\"employee\"\r\n                        col={12}\r\n                        data={data1}\r\n                        onChange={handleInputChange}\r\n                        options={allEmployeesFilter?.map((item) => ({\r\n                            name: `${item.firstName} ${item.middleInitial} ${item.lastName}`,\r\n                            value:\r\n                                type === 'appointment'\r\n                                    ? { id: item._id, employeeAppointmentData: item.employeeAppointmentData?.filter((item) => item.type === 'BONUS') }\r\n                                    : { id: item._id, employeeSalesCommissionData: item.employeeSalesCommissionData?.filter((item) => item.type === 'BONUS') },\r\n                        }))}\r\n                    />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BonusSetup;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getEvents } from '../../../../../../redux/actions/ScheduleSettings/eventsActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport { getEmployeeAppointmentPay } from '../../../../../../redux/actions/EmployeeSettings/appointmentAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport { CalendarDefaultSorting } from '../../../../../../redux/actions/EmployeeSettings/employeesAction';\r\n\r\nconst CalendarDefault = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        dispatch(getEvents());\r\n        dispatch(getEmployeeAppointmentPay(id, 'PAY'));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch]);\r\n\r\n    let { allEvents } = useSelector((state) => state.event);\r\n    let { isAppointmentLevel } = useSelector((state) => state?.employees);\r\n\r\n    const columns = [\r\n        { field: 'name', header: 'Event' },\r\n        { field: 'eventType', header: 'Event Type' },\r\n    ];\r\n\r\n    const [reorderd, setReorderd] = useState([]);\r\n    useEffect(() => {\r\n        if (allEvents) {\r\n            const filteredEvents = allEvents?.filter((item) => item?.eventLevel?.includes(isAppointmentLevel) && item.eventType === 'Appointments');\r\n\r\n            setReorderd(filteredEvents);\r\n        }\r\n    }, [isAppointmentLevel, allEvents]);\r\n\r\n    const handleRowReorder = (reorderedData) => {\r\n        setReorderd(reorderedData.value);\r\n        dispatch(\r\n            CalendarDefaultSorting(reorderedData.value, () => {\r\n                dispatch(getEvents());\r\n            }),\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"shadow-2 bg-blue-300 p-3 mb-2  text-white\">Please Click & hold the icon to drag & Sort the events</div>\r\n            <CustomTable data={reorderd} columns={columns} reorderableRows={true} onRowReorder={handleRowReorder} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CalendarDefault;\r\n","import React from 'react';\r\nimport CustomTabView from '../../../../../../shared/TabView/CustomTabView';\r\nimport PaySetup from './PaySetup';\r\nimport BonusSetup from './BonusSetup';\r\nimport CalendarDefault from './CalendarDefault';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AppointmentSetup = () => {\r\n    const tabs = [\r\n        { title: 'Pay', content: <PaySetup /> },\r\n        { title: 'Bonus', content: <BonusSetup type=\"appointment\" /> },\r\n        { title: 'Calendar Default', content: <CalendarDefault /> },\r\n    ];\r\n    let { isAppointmentLevel } = useSelector((state) => state?.employees);\r\n\r\n    return (\r\n        <>\r\n            <CustomTabView name=\"appointment\" tabs={tabs} useIndex={true} disabledTabIndices={isAppointmentLevel ? [] : [1, 2]} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppointmentSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CustomFilterCard, CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { useParams } from 'react-router-dom';\r\nimport { CustomDropDown, CustomInputDecimalNumber } from '../../../../../../shared/Input/AllInputs';\r\nimport { EmployeeCommissionType, amountTypeOptions } from '../../../../../../utils/dropdownConstants';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport { confirmDelete, showFormErrors } from '../../../../../../utils/commonFunctions';\r\nimport {\r\n    addEmployeeSalesItem,\r\n    deletetEmployeeSaleItem,\r\n    editEmployeeSalesItem,\r\n    getEmployeeSaleItem,\r\n    getEmployeeSalesItem,\r\n} from '../../../../../../redux/actions/EmployeeSettings/salesCommssionAction';\r\nimport { getCommissionGroups } from '../../../../../../redux/actions/InventorySettings/commissionGroupAction';\r\nimport formValidation from '../../../../../../utils/validations';\r\nimport PrimaryButton from '../../../../../../shared/Button/CustomButton';\r\nimport { getEmployeesFilterType } from '../../../../../../redux/actions/EmployeeSettings/employeesAction';\r\n\r\nconst ItemCommission = () => {\r\n    const dispatch = useDispatch();\r\n    const [openSimilar, setOpenSimilarTo] = useState(false);\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeSalesItemId, setEmployeeSalesItemId] = useState(null);\r\n    const [itemCommissionData, setItemCommissionData] = useState([]);\r\n\r\n    const initialState = {\r\n        commissionGroup: '',\r\n        type: 'ITEM_COMMISSION', //ITEM_COMMISSION, BONUS\r\n        commissionType: 'PER_ITEM', //PER_SALE,PER_ITEM\r\n        amountType: 'FIXED', //PERCENTAGE,FIXED\r\n        pay: '0',\r\n    };\r\n\r\n    const [data, setData] = useState(initialState);\r\n\r\n    const { id } = useParams();\r\n    const [data1, setData1] = useState({\r\n        employee: '',\r\n    });\r\n    useEffect(() => {\r\n        dispatch(getEmployeesFilterType('salesCommission'));\r\n    }, [dispatch]);\r\n\r\n    let { allEmployeesFilter } = useSelector((state) => state.employees);\r\n\r\n    allEmployeesFilter = allEmployeesFilter?.filter((item) => item._id !== id);\r\n    const handleInputChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data1);\r\n        setData1((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        funcGetEmpSalesItem(id);\r\n        dispatch(getCommissionGroups());\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const { commissionGroupsDropdown } = useSelector((state) => state?.commissionGroup);\r\n    const funcGetEmpSalesItem = (id) => {\r\n        dispatch(\r\n            getEmployeeSalesItem(id, 'ITEM_COMMISSION', setLoading, (data) => {\r\n                setItemCommissionData(data);\r\n            }),\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (employeeSalesItemId) {\r\n            dispatch(\r\n                getEmployeeSaleItem(employeeSalesItemId, setLoading, (data) => {\r\n                    setData({\r\n                        commissionGroup: data.commissionGroup,\r\n                        type: data.type,\r\n                        commissionType: data.commissionType,\r\n                        amountType: data.amountType,\r\n                        pay: data.pay,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [employeeSalesItemId, dispatch]);\r\n\r\n    const onClose = () => {\r\n        setEmployeeSalesItemId(null);\r\n        setData(initialState);\r\n        setVisible(false);\r\n    };\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const columns = [\r\n        { field: 'commissionGroup', header: 'Commission Group' },\r\n        { field: 'commissionType', header: 'Commission Type' },\r\n        { field: 'pay', header: 'Pay' },\r\n    ];\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deletetEmployeeSaleItem(col._id, () => {\r\n                    funcGetEmpSalesItem(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Item Commission?');\r\n    };\r\n    const onEdit = (col) => {\r\n        setEmployeeSalesItemId(col?._id);\r\n        setVisible(true);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (employeeSalesItemId) {\r\n                dispatch(\r\n                    editEmployeeSalesItem(employeeSalesItemId, { ...data }, setLoading, () => {\r\n                        funcGetEmpSalesItem(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addEmployeeSalesItem({ ...data, employee: id }, setLoading, () => {\r\n                        funcGetEmpSalesItem(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            }\r\n        }\r\n    };\r\n    const handleSaveSimilar = () => {\r\n        if (showFormErrors(data1, setData1)) {\r\n            dispatch(\r\n                addEmployeeSalesItem(\r\n                    {\r\n                        employeeSalesCommissionData: data1?.employee?.employeeSalesCommissionData,\r\n                        similarTo: data1?.employee?.id,\r\n                        employee: id,\r\n                        type: 'itemCommission',\r\n                    },\r\n                    setLoading,\r\n                    () => {\r\n                        funcGetEmpSalesItem(id);\r\n                        setOpenSimilarTo(false);\r\n                    },\r\n                ),\r\n            );\r\n            setData1({\r\n                employee: '',\r\n            });\r\n        }\r\n    };\r\n    let filteredCommissionGpDropDown = commissionGroupsDropdown.filter((item) => !itemCommissionData.map((ed) => ed.commissionGroupId).includes(item.value));\r\n\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)}>\r\n                <div className=\" flex justify-content-between align-items-end\">\r\n                    <PrimaryButton name=\"Similar To\" className=\"w-12rem\" label=\"Similar To\" onClick={() => setOpenSimilarTo(true)} />\r\n                </div>\r\n            </CustomFilterCard>\r\n            <CustomTable data={itemCommissionData} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n\r\n            <CustomDialog title={employeeSalesItemId ? 'Edit' : 'Add'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomDropDown\r\n                        name=\"commissionGroup\"\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        options={employeeSalesItemId ? commissionGroupsDropdown : filteredCommissionGpDropDown}\r\n                        disabled={employeeSalesItemId ? true : false}\r\n                        optionLabel=\"name\"\r\n                        col={12}\r\n                    />\r\n                    <CustomDropDown name=\"commissionType\" data={data} onChange={handleChange} options={EmployeeCommissionType} col={12} />\r\n                    <CustomInputDecimalNumber name=\"pay\" data={data} onChange={handleChange} />\r\n                    <CustomDropDown label=\"\" name=\"amountType\" options={amountTypeOptions} data={data} onChange={handleChange} col={4} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n\r\n            <CustomDialog title={'Similar To'} visible={openSimilar} onCancel={() => setOpenSimilarTo(false)} loading={loading} onSave={handleSaveSimilar}>\r\n                <CustomGridLayout>\r\n                    <CustomDropDown\r\n                        name=\"employee\"\r\n                        col={12}\r\n                        data={data1}\r\n                        onChange={handleInputChange}\r\n                        options={allEmployeesFilter?.map((item) => ({\r\n                            name: `${item.firstName} ${item.middleInitial} ${item.lastName}`,\r\n                            value: {\r\n                                id: item._id,\r\n                                employeeSalesCommissionData: item.employeeSalesCommissionData?.filter((item) => item.type === 'ITEM_COMMISSION'),\r\n                            },\r\n                        }))}\r\n                    />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ItemCommission;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CustomCard, { CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport { CustomInput } from '../../../../../../shared/Input/AllInputs';\r\nimport formValidation from '../../../../../../utils/validations';\r\nimport PrimaryButton, { CustomButtonGroup } from '../../../../../../shared/Button/CustomButton';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addEmployeeSalesCode, getEmployeeSalesCode } from '../../../../../../redux/actions/EmployeeSettings/salesCommssionAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport { showFormErrors } from '../../../../../../utils/commonFunctions';\r\n\r\nconst SalesCode = () => {\r\n    const [data, setData] = useState({\r\n        name: '',\r\n    });\r\n\r\n    const { id } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            getEmployeeSalesCode(id, (data) => {\r\n                setData((prev) => ({ ...prev, name: data.name }));\r\n            }),\r\n        );\r\n    }, [dispatch, id]);\r\n\r\n    const loading = useSelector((state) => state.loader.isLoading);\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            dispatch(addEmployeeSalesCode({ name: data.name, employee: id }));\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"Sales Code\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"name\" onChange={handleChange} data={data} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={() => handleSave('')} loading={loading} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SalesCode;\r\n","import React from 'react';\r\nimport CustomTabView from '../../../../../../shared/TabView/CustomTabView';\r\nimport ItemCommission from './ItemCommission';\r\nimport BonusSetup from '../AppointmentSetup/BonusSetup';\r\nimport SalesCode from './SalesCode';\r\n\r\nconst SalesCommission = () => {\r\n    const tabs = [\r\n        { title: 'Item Commission', content: <ItemCommission /> },\r\n        { title: 'Bonus', content: <BonusSetup type=\"salesCommission\" /> },\r\n        { title: 'Sales Code', content: <SalesCode /> },\r\n    ];\r\n    return (\r\n        <>\r\n            <CustomTabView name=\"sales-commission\" tabs={tabs} useIndex={true} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SalesCommission;\r\n","import React from 'react';\r\nimport FormPage from '../../../../../shared/Layout/FormPage';\r\nimport CustomTabView from '../../../../../shared/TabView/CustomTabView';\r\nimport Security from './Security';\r\nimport General from './General';\r\nimport Clubs from './Clubs';\r\nimport Notes from './Notes';\r\nimport Certifications from './Certifications/Certifications';\r\nimport { useParams } from 'react-router-dom';\r\nimport EmployeeDepartments from './EmployeeDepartments';\r\nimport ClassesSetup from './Classes/ClassesSetup';\r\nimport AppointmentSetup from './AppointmentSetup/AppointmentSetup';\r\nimport SalesCommission from './SalesCommission/SalesCommission';\r\n\r\nconst EmployeeForm = () => {\r\n    const { id } = useParams();\r\n    const tabs = [\r\n        { title: 'Security', content: <Security /> },\r\n        { title: 'General', content: <General /> },\r\n        { title: 'Departments', content: <EmployeeDepartments /> },\r\n        { title: 'Clubs', content: <Clubs /> },\r\n        { title: 'Classes Setup', content: <ClassesSetup /> },\r\n        { title: 'Appointment Setup', content: <AppointmentSetup /> },\r\n        { title: 'Sales Commision', content: <SalesCommission /> },\r\n        { title: 'Time Sheet', content: <h1>Tab 8</h1> },\r\n        { title: 'Notes', content: <Notes /> },\r\n        {\r\n            title: 'Certifications',\r\n            content: <Certifications />,\r\n        },\r\n    ];\r\n    return (\r\n        <>\r\n            <FormPage backText=\"Manage Employees\" backTo=\"/settings/employee\">\r\n                <CustomTabView tabs={tabs} disabledTabIndices={id ? [] : [1, 2, 3, 4, 5, 6, 7, 8, 9]} scrollable={true} />\r\n            </FormPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EmployeeForm;\r\n"],"names":["getCertificates","id","setLoading","async","params","employee","res","api","EndPoints","MANAGE_EMPLOYEE_CERTIFICATES","success","data","dispatch","type","types","CHANGE_MANAGE_EMPLOYEE_CERTIFICATES","payload","addCertificates","history","tab","arguments","length","undefined","_data$certificate","certificate","durls","uploadFiles","path","certificateName","originalname","certificateSize","size","acquiredDate","moment","format","expirationDate","replace","concat","_id","goBack","showToast","severity","summary","message","getCertificate","returnData","showLoaderAction","hideLoaderAction","editCertificates","_data$certificate2","deleteCertificates","next","getEmployeeNotes","NOTES","addEmployeeNotes","Security","_allSecurityRoles","useDispatch","useParams","useHistory","loading","useState","useEffect","getJobDetails","getSecurityRoles","allSecurityRoles","useSelector","state","securityRole","map","item","name","value","getEmployee","setData","firstName","lastName","middleInitial","jobTitle","dob","Date","socialSecurity","barCode","accessCode","email","multiClubClockIn","securityRoles","allJobTitle","handleChange","_ref","formErrors","formValidation","prev","handleSave","showFormErrors","editEmployee","addEmployees","_jsxs","_Fragment","children","_jsx","CustomCard","col","title","CustomGridLayout","CustomInput","required","onChange","CustomDropDown","options","index","label","optionLabel","CustomCalenderInput","CustomInputNumber","yesNoOptions","CustomPickList","selected","sourceData","onPickListChange","CustomButtonGroup","PrimaryButton","className","onClick","LightButton","dropzoneStyle","border","borderRadius","padding","textAlign","cursor","background","onDropChange","multiple","selectedImages","setSelectedImages","JSON","stringify","onDrop","useCallback","acceptedFiles","rejectedFiles","forEach","file","some","selectedFile","prevState","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useDropzone","accept","style","useMemo","borderColor","Avatar","icon","color","shape","backgroundColor","image","getImageURL","Badge","filter","_","i","removeImage","General","_data$formErrors","states","setStates","cities","setCities","getAllCountries","updatedStates","getStatesByCountry","hireDate","terminationDate","adpId","primaryPhone","workPhone","workPhoneExt","mobilePhone","faxPhone","emergencyPhone","emergencyPhoneExt","street","city","zipCode","emailNotification","onlineNickName","bio","socialMedia","alternateEmail","getCitiesByState","clearedData","CustomInputMask","mask","placeholder","disabled","CustomTextArea","PhotoUpload","Clubs","getClubs","clubsDropdown","clubs","reportDataAccess","Notes","user","profile","takenBy","dateTime","notes","visible","setVisible","notesData","setNotesData","funcGetNotes","columns","field","header","body","r","onClose","CustomFilterCard","buttonTitle","CustomTable","CustomDialog","width","onCancel","onSave","maxLength","inputClass","Certifications","allCertificates","certificates","linkTo","onEdit","push","onDelete","position","confirmDelete","EmployeeDepartments","departmentsDropdown","department","getDepartments","funcGetEmpDepartments","getEmployeeDepartments","setEmployeeDepartments","employeeDeptId","setEmployeeDeptId","employeeDepartments","departments","wage","filterdDepartmentsDropdown","ed","includes","e","_empDeptData","find","deleteEmployeeDepartment","editEmployeeDepartment","addEmployeeDepartment","CustomMultiselect","minFractionDigits","maxFractionDigits","getEmployeeClasses","EMPLOYEE_CLASSES","CHANGE_EMPLOYEE_CLASSES","addEmployeeClasses","editEmployeeClasses","_data$eachClientOver","employeeClassId","setEmployeeClassId","employeeClasses","setEmployeeClassesData","incrementalPay","getEmployeeClaases","payType","oneToFiveClients","sixToTenClients","elevenToFifteenClients","sixteenToTwentyClients","twentyOneToTwentyFiveClients","twentySixPlusClients","noRegistrationPay","countUnpaidService","payperClassPayload","payPerClassRate","PayPerClient","baseRate","payPerClientRate","eachClientOver","noOfClients","rate","maxPayPerClient","percentageRate","percentage","newData","_ref2","handleChange1","key","newList","ignore","classesPayTypeOptions","CustomInputDecimalNumber","CustomCheckbox","client","prefix","PaySetup","_allEmployeesFilter","_allEmployeeClasses3","_allEmployeesFilter2","openSimilar","setOpenSimilarTo","isClassLevel","isDefaultPay","funcGetEmpClasses","getLevels","levelDropdown","level","uniqueId","useId","data1","setData1","allEmployeeClasses","employees","_allEmployeeClasses","getEmployeesFilterType","allEmployeesFilter","deleteEmployeeClasses","renderRow","extraClass","updateEmployeeLevel","UPDATE_CLASS_LEVEL","DataView","list","itemTemplate","findIndex","CustomInputSwitch","checked","handleSwitchChange","active","_allEmployeeClasses2","_allEmployeeClasses2$","paginator","rows","AddandEditClasses","_data1$employee","_data1$employee2","employeeClassData","similarTo","SubstituteOptionSetup","_allEvents$filter","Substitute","setSubstitute","event","priority","substitutionOptionsId","setSubstituteOptionsId","funcGetEmpSubstitution","getEvents","allEvents","filteredEvents","_item$eventLevel","eventLevel","eventType","getEmployeeSubstitutionOptions","SUSTITITION_OPTIONS","getSubstitutionOption","deleteSubstitutionOption","editEmployeeSubstitutionOptions","addEmployeeSubstitutionOptions","substitutionPriorityOptions","ClassesSetup","tabs","content","CustomTabView","useIndex","disabledTabIndices","getEmployeeAppointmentPay","EMPLOYEE_APPOINTMENT","CHANGE_EMPLOYEE_APPOINTMENT_PAY","addEmployeeAppointmentPay","addEmployeeBonus","SALES_COMMISSION","funcGetEmpAppointment","employeeAppartId","setEmployeeAppartId","initialState","pay","amountType","isAppointmentLevel","allAppointmentPayDropdown","editFiltered","filtered","getEmployeeAppartment","editEmployeeAppointmentPay","AppointmentPayPriorityOptions","amountTypeOptions","allAppointmentPay","extraClassName","updateEmployeeAppointmentPayLevel","UPDATE_APPOINTMENT_CLASS_LEVEL","deletetEmployeeAppartment","AddandEditAppointmentPay","_data1$employee$emplo","filteredData","employeeAppointmentData","_allAppointmentPay$li","appointment","eventId","_item$employeeAppoint","bonusType","sessionsValue","ofSessions","over","duration","bonusAmount","services","employeeAppartBonusId","setemployeeAppartBonusId","appointmentData","setAppointmentData","_ref3","getCatalogItems","catalogServiceDropdown","catalogItems","getEmployeeSalesItem","getEmployeeBonus","selectTimeframe","toLowerCase","_r$services","_r$services$map","join","deleteEmployeeBonus","rest","editEmployeeBonus","bonusTypeConstantsOptions","durationOptions","handleSaveSimilar","_data1$employee3","employeeBonusData","employeeSalesCommissionData","_item$employeeSalesCo","CalendarDefault","reorderd","setReorderd","reorderableRows","onRowReorder","reorderedData","CalendarDefaultSorting","AppointmentSetup","BonusSetup","ItemCommission","employeeSalesItemId","setEmployeeSalesItemId","itemCommissionData","setItemCommissionData","commissionGroup","commissionType","funcGetEmpSalesItem","getCommissionGroups","commissionGroupsDropdown","getEmployeeSaleItem","filteredCommissionGpDropDown","commissionGroupId","deletetEmployeeSaleItem","editEmployeeSalesItem","addEmployeeSalesItem","EmployeeCommissionType","SalesCode","getEmployeeSalesCode","loader","isLoading","addEmployeeSalesCode","SalesCommission","EmployeeForm","FormPage","backText","backTo","scrollable"],"sourceRoot":""}