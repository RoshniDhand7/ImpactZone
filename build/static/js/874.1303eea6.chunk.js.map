{"version":3,"file":"static/js/874.1303eea6.chunk.js","mappings":"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","sources":["shared/Layout/FormPage.jsx","views/Settings/Employees/Departments/DepartmentsForm.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomTransition from '../Transitions/CustomTransition';\r\n\r\nexport default function FormPage({ children, backText, backTo }) {\r\n    const history = useHistory();\r\n\r\n    const onBack = () => {\r\n        if (backTo) {\r\n            history.replace(backTo);\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    };\r\n    return (\r\n        <CustomTransition>\r\n            {backText ? (\r\n                <div className=\"flex mb-3 text-dark-gray\">\r\n                    <i className=\"pi pi-angle-left text-2xl cursor-pointer\" onClick={onBack}></i>\r\n                    <div className=\" my-auto font-semibold text-lg cursor-pointer\" onClick={onBack}>\r\n                        Back to {backText}\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            <>{children}</>\r\n        </CustomTransition>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport FormPage from '../../../../shared/Layout/FormPage';\r\nimport CustomCard, { CustomGridLayout } from '../../../../shared/Cards/CustomCard';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../shared/Button/CustomButton';\r\nimport { CustomDropDown, CustomInput } from '../../../../shared/Input/AllInputs';\r\nimport formValidation from '../../../../utils/validations';\r\nimport { yesNoOptions } from '../../../../utils/dropdownConstants';\r\nimport { showFormErrors } from '../../../../utils/commonFunctions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport { addDepartment, editDepartment, getDepartment } from '../../../../redux/actions/EmployeeSettings/departmentsAction';\r\n\r\nconst DepartmentsForm = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        showInCalender: '',\r\n        visibleOnline: '',\r\n        salesPersonOnline: '',\r\n        departmentCode: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getDepartment(id, (data) => {\r\n                    setData({\r\n                        name: data.name,\r\n                        showInCalender: data.showInCalender.toString(),\r\n                        visibleOnline: data.visibleOnline.toString(),\r\n                        salesPersonOnline: data.salesPersonOnline.toString(),\r\n                        departmentCode: data.departmentCode,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n    const [loading, setLoading] = useState(false);\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (id) {\r\n                dispatch(editDepartment(id, data, setLoading, history));\r\n            } else {\r\n                dispatch(addDepartment(data, setLoading, history));\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FormPage backText=\"Departments\">\r\n                <CustomCard col=\"12\" title=\"General\">\r\n                    <CustomGridLayout>\r\n                        <CustomInput data={data} name=\"name\" onChange={handleChange} col={3} />\r\n                        <CustomDropDown name=\"showInCalender\" options={yesNoOptions} onChange={handleChange} data={data} />\r\n                        <CustomDropDown name=\"visibleOnline\" options={yesNoOptions} onChange={handleChange} data={data} />\r\n                        <CustomDropDown name=\"salesPersonOnline\" options={yesNoOptions} onChange={handleChange} data={data} />\r\n                        <CustomInput data={data} name=\"departmentCode\" onChange={handleChange} col={3} />\r\n                    </CustomGridLayout>\r\n                </CustomCard>\r\n\r\n                <CustomButtonGroup>\r\n                    <PrimaryButton label=\"Save\" className=\"mx-2\" loading={loading} onClick={handleSave} />\r\n                    <LightButton label=\"Cancel\" onClick={() => history.goBack()} />\r\n                </CustomButtonGroup>\r\n            </FormPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DepartmentsForm;\r\n"],"names":["FormPage","_ref","children","backText","backTo","history","useHistory","onBack","replace","goBack","_jsxs","CustomTransition","className","_jsx","onClick","_Fragment","DepartmentsForm","dispatch","useDispatch","id","useParams","data","setData","useState","name","showInCalender","visibleOnline","salesPersonOnline","departmentCode","useEffect","getDepartment","toString","loading","setLoading","handleChange","value","formErrors","formValidation","prev","CustomCard","col","title","CustomGridLayout","CustomInput","onChange","CustomDropDown","options","yesNoOptions","CustomButtonGroup","PrimaryButton","label","handleSave","showFormErrors","editDepartment","addDepartment","LightButton"],"sourceRoot":""}