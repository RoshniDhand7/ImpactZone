{"version":3,"file":"static/js/350.53f9a036.chunk.js","mappings":"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","sources":["redux/actions/EmployeeSettings/certificationAction.js","shared/Layout/FormPage.jsx","shared/Overlays/CustomDialog.jsx","utils/dropdownConstants.js","shared/Input/CustomPickList.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Security.jsx","shared/Input/DragDropFiles.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/General.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Clubs.jsx","shared/Input/CustomEditor.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Notes.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Certifications/Certifications.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/EmployeeDepartments.jsx","redux/actions/EmployeeSettings/classesAction.js","views/Settings/Employees/ManageEmployee/AddEmployee/Classes/AddandEditClasses.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Classes/PaySetup.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Classes/SubstituteOptionSetup.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/Classes/ClassesSetup.jsx","redux/actions/EmployeeSettings/appointmentAction.js","views/Settings/Employees/ManageEmployee/AddEmployee/AppointmentSetup/PaySetup.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/AppointmentSetup/BonusSetup.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/AppointmentSetup/AppointmentSetup.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/SalesCommission/ItemCommission.jsx","redux/actions/EmployeeSettings/salesCommssionAction.js","views/Settings/Employees/ManageEmployee/AddEmployee/SalesCommission/SalesCommission.jsx","views/Settings/Employees/ManageEmployee/AddEmployee/EmployeeForm.jsx"],"sourcesContent":["import moment from 'moment/moment';\r\nimport api from '../../../services/api';\r\nimport EndPoints from '../../../services/endPoints';\r\nimport { types } from '../../types/types';\r\nimport { hideLoaderAction, showLoaderAction } from '../loaderAction';\r\nimport { showToast } from '../toastAction';\r\nimport { uploadFiles, uploadImages } from '../../../utils/commonFunctions';\r\n\r\nconst getCertificates = (id, setLoading) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const params = { employee: id };\r\n    const res = await api('get', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES, {}, params);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            dispatch({\r\n                type: types.CHANGE_MANAGE_EMPLOYEE_CERTIFICATES,\r\n                payload: res.data,\r\n            });\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\nconst addCertificates =\r\n    (data, setLoading, history, tab = '') =>\r\n    async (dispatch) => {\r\n        setLoading(true);\r\n        const payload = {\r\n            ...data,\r\n            acquiredDate: moment(data.acquiredDate).format('MM/DD/YYYY'),\r\n            expirationDate: moment(data.expirationDate).format('MM/DD/YYYY'),\r\n        };\r\n\r\n        const res = await api('post', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES, payload);\r\n        if (res.success) {\r\n            if (tab) {\r\n                history.replace(`/settings/employee/manage-employee/edit/${res.data._id}/${tab}`);\r\n            } else {\r\n                history.goBack();\r\n            }\r\n            dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        }\r\n        setLoading(false);\r\n    };\r\nconst getCertificate = (id, returnData) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n    const res = await api('get', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES + id);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\nconst editCertificates =\r\n    (id, data, setLoading, history, tab = '') =>\r\n    async (dispatch) => {\r\n        setLoading(true);\r\n        const payload = {\r\n            ...data,\r\n            acquiredDate: moment(data.acquiredDate).format('MM/DD/YYYY'),\r\n            expirationDate: moment(data.expirationDate).format('MM/DD/YYYY'),\r\n        };\r\n        const res = await api('put', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES + id, payload);\r\n        if (res.success) {\r\n            if (tab) {\r\n                history.replace(`/settings/employee/manage-employee/edit/${res.data._id}/${tab}`);\r\n            } else {\r\n                history.goBack();\r\n            }\r\n            dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        }\r\n        setLoading(false);\r\n    };\r\nconst deleteCertificates = (id) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.MANAGE_EMPLOYEE_CERTIFICATES + id);\r\n    if (res.success) {\r\n        dispatch(getCertificates(() => {}));\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nconst getEmployeeNotes = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.NOTES, '', { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeNotes = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.NOTES, data);\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\nexport { getCertificates, addCertificates, editCertificates, deleteCertificates, getCertificate,getEmployeeNotes,addEmployeeNotes };\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomTransition from '../Transitions/CustomTransition';\r\n\r\nexport default function FormPage({ children, backText, backTo }) {\r\n    const history = useHistory();\r\n\r\n    const onBack = () => {\r\n        if (backTo) {\r\n            history.replace(backTo);\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    };\r\n    return (\r\n        <CustomTransition>\r\n            {backText ? (\r\n                <div className=\"flex mb-3 text-dark-gray\">\r\n                    <i className=\"pi pi-angle-left text-2xl cursor-pointer\" onClick={onBack}></i>\r\n                    <div className=\" my-auto font-semibold text-lg cursor-pointer\" onClick={onBack}>\r\n                        Back to {backText}\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            <>{children}</>\r\n        </CustomTransition>\r\n    );\r\n}\r\n","import { Dialog } from 'primereact/dialog';\r\nimport React from 'react';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../Button/CustomButton';\r\n\r\nexport default function CustomDialog({ title, visible, position, width = '30vw', onSave, loading, onCancel, children }) {\r\n    const footerContent = (\r\n        <CustomButtonGroup>\r\n            {onSave ? <PrimaryButton label=\"Save\" className=\"mx-2\" loading={loading} onClick={onSave} /> : null}\r\n            {onCancel ? <LightButton label=\"Cancel\" onClick={onCancel} /> : null}\r\n        </CustomButtonGroup>\r\n    );\r\n    return (\r\n        <Dialog\r\n            modal\r\n            header={title}\r\n            headerClassName=\"justify-content-start\"\r\n            visible={visible}\r\n            style={{ width }}\r\n            onHide={onCancel}\r\n            footer={onSave || onCancel ? footerContent : ''}\r\n            draggable={false}\r\n            resizable={false}\r\n            position={position}\r\n        >\r\n            {children}\r\n        </Dialog>\r\n    );\r\n}\r\n","export const yesNoOptions = [\r\n    {\r\n        name: 'Yes',\r\n        value: 'true',\r\n    },\r\n    {\r\n        name: 'No',\r\n        value: 'false',\r\n    },\r\n];\r\n\r\nexport const amountTypeOptions = [\r\n    {\r\n        name: '$',\r\n        value: 'FIXED',\r\n    },\r\n    {\r\n        name: '%',\r\n        value: 'PERCENTAGE',\r\n    },\r\n];\r\n\r\nexport const bonusTypeConstantsOptions = [\r\n    {\r\n        name: 'Single Client',\r\n        value: 'SINGLE_CLIENT',\r\n    },\r\n    {\r\n        name: 'Service Value',\r\n        value: 'SERVICE_VALUE',\r\n    },\r\n];\r\n\r\nexport const CommissionGpTypeOptions = ['Products', 'Services', 'Agreement'].map((name) => ({ name, value: name }));\r\n\r\nexport const durationOptions = ['Days', 'Weeks', 'Months', 'Years'].map((name) => ({ name, value: name.toUpperCase() }));\r\n\r\nexport const servicesOptions = ['Private Sessions', 'Yoga Sessions', 'Reformer', 'Etc'].map((name) => ({ name, value: name }));\r\n\r\nexport const checkInLimitOptions = [\r\n    {\r\n        name: 'No Limit',\r\n        value: 'No Limit',\r\n    },\r\n];\r\n\r\nfor (let i = 1; i <= 50; i++) {\r\n    const option = {\r\n        name: `${i}`,\r\n        value: `${i}`,\r\n    };\r\n    checkInLimitOptions.push(option);\r\n}\r\nexport const perOptions = [\r\n    {\r\n        name: 'Week (7 days)',\r\n        value: 'Week (7 Days)',\r\n    },\r\n    {\r\n        name: 'Month (30 days)',\r\n        value: 'Month (30 days)',\r\n    },\r\n    {\r\n        name: 'Year (365 days)',\r\n        value: 'Year (365 days)',\r\n    },\r\n    {\r\n        name: 'Calendar Week (sunday)',\r\n        value: 'Calendar Week (sunday)',\r\n    },\r\n    {\r\n        name: 'Calendar Week (monday)',\r\n        value: 'Calendar Week (monday)',\r\n    },\r\n    {\r\n        name: 'Calendar Month',\r\n        value: 'Calendar Month',\r\n    },\r\n    {\r\n        name: 'Calendar Year',\r\n        value: 'Calendar Year',\r\n    },\r\n];\r\n\r\nexport const restrictionOptions = [\r\n    {\r\n        name: 'Club',\r\n        value: 'Club',\r\n    },\r\n    {\r\n        name: 'Company',\r\n        value: 'Company',\r\n    },\r\n];\r\n\r\nexport const daysOptions = [];\r\n\r\nfor (let i = 1; i <= 30; i++) {\r\n    const option = {\r\n        name: `${i} days`,\r\n        value: `${i} days`,\r\n    };\r\n    daysOptions.push(option);\r\n}\r\n\r\nexport const hoursOptions = [];\r\n\r\nfor (let i = 12; i <= 72; i += 12) {\r\n    const option = {\r\n        name: `${i} hours`,\r\n        value: `${i} hours`,\r\n    };\r\n    hoursOptions.push(option);\r\n}\r\n\r\nexport const reasonCodeTypeOptions = [\r\n    'Agreement Hold',\r\n    'Cancel Pending POS Transaction',\r\n    'Cancel Agreement',\r\n    'Cancel Price',\r\n    'Commission Override',\r\n    'Drawer Adjustment',\r\n    'Event Status',\r\n    'Freeze Agreement',\r\n    'No Sale',\r\n    'Void',\r\n    'Waive Tax',\r\n].map((name) => ({ name, value: name }));\r\n\r\nexport const classesPayTypeOptions = [\r\n    {\r\n        name: 'Incremental Pay',\r\n        value: 'INCREMENTAL_PAY',\r\n    },\r\n    {\r\n        name: 'Pay Per Class',\r\n        value: 'PAY_PER_CLASS',\r\n    },\r\n    {\r\n        name: 'Pay Per Client',\r\n        value: 'PAY_PER_CLIENT',\r\n    },\r\n    {\r\n        name: '% Rate',\r\n        value: 'PERCENTAGE_RATE',\r\n    },\r\n];\r\nexport const substitutionPriorityOptions = [\r\n    {\r\n        name: 'Suggested',\r\n        value: 'SUGGESTED',\r\n    },\r\n    {\r\n        name: 'High',\r\n        value: 'HIGH',\r\n    },\r\n    {\r\n        name: 'Medium',\r\n        value: 'MEDIUM',\r\n    },\r\n    {\r\n        name: 'Low',\r\n        value: 'LOW',\r\n    },\r\n];\r\nexport const AppointmentPayPriorityOptions = [\r\n    {\r\n        name: 'Per Event',\r\n        value: 'PER-EVENT',\r\n    },\r\n    {\r\n        name: 'Person',\r\n        value: 'PERSON',\r\n    },\r\n];\r\n\r\nexport const EmployeeCommissionType = [\r\n    {\r\n        name: 'Per Sale',\r\n        value: 'PER_SALE',\r\n    },\r\n    {\r\n        name: 'Per Item',\r\n        value: 'PER_ITEM',\r\n    },\r\n];\r\n","import React, { useState, useEffect } from 'react';\r\nimport { PickList } from 'primereact/picklist';\r\n\r\nconst CustomPickList = ({\r\n    selected = [],\r\n    name,\r\n    sourceData = [],\r\n    onPickListChange,\r\n    breakpoint = '1280px',\r\n    sourceHeader = 'Available',\r\n    targetHeader = 'Selected',\r\n    sourceStyle = { height: '24rem' },\r\n    targetStyle = { height: '24rem' },\r\n    showSourceControls = false,\r\n    showTargetControls = false,\r\n}) => {\r\n    useEffect(() => {\r\n        if (sourceData.length && selected) {\r\n            let _target = sourceData.filter((item) => selected.includes(item.value));\r\n            let _source = sourceData.filter((item) => !selected.includes(item.value));\r\n            setSource(_source);\r\n            setTarget(_target);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sourceData, selected?.length]);\r\n\r\n    const [source, setSource] = useState([]);\r\n    const [target, setTarget] = useState([]);\r\n\r\n    const itemTemplate = (item) => {\r\n        return (\r\n            <div className=\"flex flex-wrap p-2 align-items-center gap-3\">\r\n                <h6>{item.name}</h6>\r\n            </div>\r\n        );\r\n    };\r\n    const handlePickListChange = ({ target, source }) => {\r\n        setSource(source);\r\n        setTarget(target);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (onPickListChange) {\r\n            let _values = target.map((item) => item.value);\r\n            onPickListChange({ name, value: _values });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [target?.length, name]);\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <PickList\r\n                source={source}\r\n                target={target}\r\n                onChange={handlePickListChange}\r\n                itemTemplate={itemTemplate}\r\n                breakpoint={breakpoint}\r\n                sourceHeader={sourceHeader}\r\n                targetHeader={targetHeader}\r\n                sourceStyle={sourceStyle}\r\n                targetStyle={targetStyle}\r\n                showSourceControls={showSourceControls}\r\n                showTargetControls={showTargetControls}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomPickList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CustomCard, { CustomGridLayout } from '../../../../../shared/Cards/CustomCard';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../../shared/Button/CustomButton';\r\nimport { CustomCalenderInput, CustomDropDown, CustomInput } from '../../../../../shared/Input/AllInputs';\r\nimport { yesNoOptions } from '../../../../../utils/dropdownConstants';\r\nimport CustomPickList from '../../../../../shared/Input/CustomPickList';\r\nimport formValidation from '../../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../../utils/commonFunctions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { addEmployees, editEmployee, getEmployee } from '../../../../../redux/actions/EmployeeSettings/employeesAction';\r\nimport { useParams } from 'react-router';\r\nimport { getJobDetails } from '../../../../../redux/actions/BusinessSettings/jobActions';\r\nimport { getSecurityRoles } from '../../../../../redux/actions/EmployeeSettings/securityRolesAction';\r\n\r\nconst Security = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        dispatch(getJobDetails());\r\n        dispatch(getSecurityRoles());\r\n    }, [dispatch]);\r\n\r\n    let { allSecurityRoles } = useSelector((state) => state?.securityRole);\r\n    allSecurityRoles = allSecurityRoles?.map((item) => ({ name: item.name, value: item._id }));\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getEmployee(id, (data) => {\r\n                    setData({\r\n                        firstName: data.firstName,\r\n                        lastName: data.lastName,\r\n                        middleInitial: data.middleInitial,\r\n                        jobTitle: data.jobTitle,\r\n                        dob: new Date(data.dob),\r\n                        socialSecurity: data.socialSecurity,\r\n                        barCode: data.barCode,\r\n                        accessCode: data.accessCode,\r\n                        email: data.email,\r\n                        multiClubClockIn: data.multiClubClockIn.toString(),\r\n                        securityRoles: data.securityRoles,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n\r\n    const { allJobTitle } = useSelector((state) => state.jobTitle);\r\n    const [data, setData] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        middleInitial: '',\r\n        jobTitle: '',\r\n        dob: '',\r\n        socialSecurity: '',\r\n        barCode: '',\r\n        accessCode: '',\r\n        email: '',\r\n        multiClubClockIn: '',\r\n        securityRoles: [],\r\n    });\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n    const handleSave = (tab) => {\r\n        let ignore = ['jobTitle'];\r\n\r\n        if (showFormErrors(data, setData, ignore)) {\r\n            if (id) {\r\n                dispatch(editEmployee(id, data, setLoading, history, tab));\r\n            } else {\r\n                dispatch(addEmployees(data, setLoading, history, tab));\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"Personal\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"firstName\" required col={3} data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"middleInitial\" col={1} data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"lastName\" required data={data} onChange={handleChange} />\r\n                    <CustomDropDown\r\n                        name=\"jobTitle\"\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        options={allJobTitle?.map((item, index) => {\r\n                            return { label: item.jobTitle, value: item._id };\r\n                        })}\r\n                        optionLabel=\"label\"\r\n                    />\r\n                    <CustomCalenderInput name=\"dob\" data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"socialSecurity\" data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"System\">\r\n                <CustomGridLayout>\r\n                    <CustomInput name=\"barCode\" required data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"accessCode\" required data={data} onChange={handleChange} />\r\n                    <CustomInput name=\"email\" required data={data} onChange={handleChange} />\r\n                    <CustomDropDown label=\"Allow Multi-Club Clock In/Out\" name=\"multiClubClockIn\" options={yesNoOptions} data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Select Roles\">\r\n                <div col={12}>\r\n                    <CustomPickList name=\"securityRoles\" selected={data?.securityRoles} sourceData={allSecurityRoles} onPickListChange={handleChange} />\r\n                </div>\r\n            </CustomCard>\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={() => handleSave('')} loading={loading} />\r\n                <PrimaryButton label=\"Save & Next\" className=\"mx-2\" onClick={() => handleSave('?tab=general')} loading={loading} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/employee')} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Security;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { Avatar } from 'primereact/avatar';\r\nimport { Badge } from 'primereact/badge';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { getImageURL } from '../../utils/imageUrl';\r\n\r\nconst PhotoUpload = ({ name, value, data, onDropChange, multiple = true }) => {\r\n    const [selectedImages, setSelectedImages] = useState(value || data?.[name] || []);\r\n\r\n    useEffect(() => {\r\n        if (value || data?.[name]) {\r\n            if (JSON.stringify(value || data?.[name]) !== JSON.stringify(selectedImages)) {\r\n                setSelectedImages(value || data?.[name]);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value || data?.[name]]);\r\n\r\n    useEffect(() => {\r\n        if (onDropChange) {\r\n            onDropChange({ name, value: selectedImages });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedImages, name]);\r\n\r\n    const onDrop = useCallback(\r\n        (acceptedFiles, rejectedFiles) => {\r\n            if (rejectedFiles.length > 0) {\r\n                console.log('Rejected Files:', rejectedFiles);\r\n            } else {\r\n                acceptedFiles.forEach((file) => {\r\n                    const isFileAlreadySelected = selectedImages.some((selectedFile) => selectedFile.name === file.name);\r\n\r\n                    if (!isFileAlreadySelected) {\r\n                        setSelectedImages((prevState) => [...prevState, file]);\r\n                    } else {\r\n                        console.log(`File \"${file.name}\" is already selected.`);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        [selectedImages],\r\n    );\r\n\r\n    const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({\r\n        onDrop,\r\n        multiple,\r\n        // maxFiles: 1,\r\n        accept: {\r\n            'image/*': ['.png', '.gif', '.jpeg', '.jpg'],\r\n        },\r\n    });\r\n\r\n    const style = useMemo(\r\n        () => ({\r\n            ...(isDragAccept ? { borderColor: '#00e676' } : {}),\r\n            ...(isDragReject ? { borderColor: '#ff1744' } : {}),\r\n        }),\r\n        [isDragAccept, isDragReject],\r\n    );\r\n\r\n    const removeImage = (index) => {\r\n        setSelectedImages((prevState) => prevState.filter((_, i) => i !== index));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div {...getRootProps({ style })} style={dropzoneStyle}>\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                    isDragReject ? (\r\n                        <>\r\n                            <Avatar icon=\"pi pi-exclamation-triangle\" size=\"large\" className=\"bg-red-50\" style={{ color: '#252B42' }} shape=\"circle\" />\r\n                            <p className=\"text-color-secondary font-medium text-lg\">Only image files are allowed!</p>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <Avatar icon=\"pi pi-download\" size=\"large\" className=\"bg-green-50\" style={{ color: '#252B42' }} shape=\"circle\" />\r\n                            <p className=\"text-color-secondary font-medium text-lg\">Drop the photo here...</p>\r\n                        </>\r\n                    )\r\n                ) : (\r\n                    <>\r\n                        <Avatar icon=\"pi pi-file\" size=\"large\" style={{ backgroundColor: '#F2F5FE', color: '#252B42' }} shape=\"circle\" />\r\n                        <p className=\"text-color-secondary font-medium text-lg\">Drag your photo here or browse.</p>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <div className=\"flex flex-wrap my-2\">\r\n                {selectedImages?.length > 0 &&\r\n                    selectedImages?.map((image, index) => (\r\n                        <Avatar className=\"p-overlay-badge my-2 mr-3\" image={getImageURL(image)} size=\"xlarge\">\r\n                            <Badge value=\"X\" icon=\"pi pi-fast-forward\" severity=\"danger\" className=\"cursor-pointer\" onClick={() => removeImage(index)} />\r\n                        </Avatar>\r\n                    ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst dropzoneStyle = {\r\n    border: '2px dashed #eeeeee',\r\n    borderRadius: '4px',\r\n    padding: '60px',\r\n    textAlign: 'center',\r\n    cursor: 'pointer',\r\n    background: '#fff',\r\n};\r\n\r\nexport default PhotoUpload;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../../shared/Button/CustomButton';\r\nimport { CustomCalenderInput, CustomDropDown, CustomInput, CustomInputMask, CustomTextArea } from '../../../../../shared/Input/AllInputs';\r\nimport CustomCard, { CustomGridLayout } from '../../../../../shared/Cards/CustomCard';\r\nimport { getAllCountries, getCitiesByState, getStatesByCountry, showFormErrors } from '../../../../../utils/commonFunctions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { yesNoOptions } from '../../../../../utils/dropdownConstants';\r\nimport PhotoUpload from '../../../../../shared/Input/DragDropFiles';\r\nimport formValidation from '../../../../../utils/validations';\r\nimport { editEmployee, getEmployee } from '../../../../../redux/actions/EmployeeSettings/employeesAction';\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\nconst General = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const [states, setStates] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getAllCountries();\r\n        const updatedStates = getStatesByCountry('US');\r\n        setStates(updatedStates);\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getEmployee(id, (data) => {\r\n                    setData({\r\n                        hireDate: new Date(data.hireDate),\r\n                        terminationDate: data.terminationDate,\r\n                        adpId: data.adpId,\r\n                        primaryPhone: data.primaryPhone,\r\n                        workPhone: data.workPhone,\r\n                        workPhoneExt: data.workPhoneExt,\r\n                        mobilePhone: data.mobilePhone,\r\n                        faxPhone: data.faxPhone,\r\n                        emergencyPhone: data.emergencyPhone,\r\n                        emergencyPhoneExt: data.emergencyPhoneExt,\r\n                        street: data.street,\r\n                        city: data.city,\r\n                        state: data.state,\r\n                        zipCode: data.zipCode,\r\n                        emailNotification: data.emailNotification?.toString(),\r\n                        onlineNickName: data.onlineNickName,\r\n                        bio: data.bio,\r\n                        image: data.image ? [data.image] : [],\r\n                    });\r\n                    const cities = getCitiesByState('US', data.state);\r\n                    setCities(cities);\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n\r\n    const [data, setData] = useState({\r\n        hireDate: '',\r\n        terminationDate: '',\r\n        adpId: '',\r\n        primaryPhone: '',\r\n        workPhone: '',\r\n        workPhoneExt: '',\r\n        mobilePhone: '',\r\n        faxPhone: '',\r\n        emergencyPhone: '',\r\n        emergencyPhoneExt: '',\r\n        street: '',\r\n        city: '',\r\n        state: '',\r\n        zipCode: '',\r\n        emailNotification: true,\r\n        onlineNickName: '',\r\n        bio: '',\r\n        image: [],\r\n    });\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        if (name === 'state') {\r\n            const city = getCitiesByState('US', value);\r\n            setCities(city);\r\n            setData((prev) => ({ ...prev, [name]: value, city: '', formErrors }));\r\n        } else {\r\n            setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n        }\r\n    };\r\n    const handleSave = (tab) => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (id) {\r\n                dispatch(editEmployee(id, data, setLoading, history, tab));\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"Employement\">\r\n                <CustomGridLayout>\r\n                    <CustomCalenderInput id=\"hireDate\" name=\"hireDate\" onChange={handleChange} data={data} />\r\n                    <CustomInput name=\"adpId\" onChange={handleChange} data={data} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Contact\">\r\n                <CustomGridLayout>\r\n                    <CustomInputMask id=\"primaryPhone\" name=\"primaryPhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInputMask id=\"workPhone\" name=\"workPhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInputMask id=\"mobilePhone\" name=\"mobilePhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInputMask id=\"faxPhone\" name=\"faxPhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInputMask id=\"emergencyPhone\" name=\"emergencyPhone\" mask=\"(999) 999-9999\" placeholder=\"\" onChange={handleChange} data={data} />\r\n                    <CustomInput name=\"street\" onChange={handleChange} data={data} />\r\n                    <CustomDropDown name=\"state\" options={states} onChange={handleChange} data={data} />\r\n                    <CustomDropDown name=\"city\" options={cities} onChange={handleChange} data={data} />\r\n                    <CustomInput name=\"zipCode\" onChange={handleChange} data={data} />\r\n                    <CustomDropDown name=\"emailNotification\" options={yesNoOptions} onChange={handleChange} data={data} />\r\n                </CustomGridLayout>\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Online\">\r\n                <CustomInput name=\"onlineNickName\" onChange={handleChange} data={data} />\r\n                <CustomTextArea name=\"bio\" onChange={handleChange} data={data} />\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Photo\">\r\n                <PhotoUpload name=\"image\" onDropChange={handleChange} data={data} multiple={false} />\r\n            </CustomCard>\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" onClick={() => handleSave('')} loading={loading} />\r\n                <PrimaryButton label=\"Save & Next\" className=\"mx-2\" onClick={() => handleSave('?tab=departments')} loading={loading} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/employee')} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default General;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CustomCard from '../../../../../shared/Cards/CustomCard';\r\nimport PrimaryButton, { CustomButtonGroup, LightButton } from '../../../../../shared/Button/CustomButton';\r\nimport CustomPickList from '../../../../../shared/Input/CustomPickList';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getClubs } from '../../../../../redux/actions/BusinessSettings/clubsAction';\r\nimport { editEmployee, getEmployee } from '../../../../../redux/actions/EmployeeSettings/employeesAction';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nconst Clubs = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        dispatch(getClubs());\r\n    }, [dispatch]);\r\n\r\n    let { clubsDropdown } = useSelector((state) => state.clubs);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(\r\n                getEmployee(id, (data) => {\r\n                    setData({\r\n                        reportDataAccess: data.reportDataAccess,\r\n                        clubs: data.clubs,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [id, dispatch]);\r\n    const [data, setData] = useState({\r\n        reportDataAccess: [],\r\n        clubs: [],\r\n    });\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        setData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n    const handleSave = () => {\r\n        if (id) {\r\n            dispatch(editEmployee(id, data, setLoading, history));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomCard col=\"12\" title=\"Report Data Access\">\r\n                <CustomPickList name=\"reportDataAccess\" selected={data?.reportDataAccess} sourceData={clubsDropdown} onPickListChange={handleChange} />\r\n            </CustomCard>\r\n            <CustomCard col=\"12\" title=\"Clubs\">\r\n                <CustomPickList name=\"clubs\" selected={data?.clubs} sourceData={clubsDropdown} onPickListChange={handleChange} />\r\n            </CustomCard>\r\n\r\n            <CustomButtonGroup>\r\n                <PrimaryButton label=\"Save\" className=\"mx-2\" loading={loading} onClick={handleSave} />\r\n                <LightButton label=\"Cancel\" onClick={() => history.replace('/settings/employee')} />\r\n            </CustomButtonGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Clubs;\r\n","import React from 'react';\r\nimport { Editor } from 'primereact/editor';\r\n\r\nconst CustomEditor = ({ name, data, value, onTextChange, height = '320px' }) => {\r\n    return (\r\n        <div className=\"custom-editor\">\r\n            <Editor\r\n                value={value || data?.[name]}\r\n                onTextChange={(e) => onTextChange && onTextChange({ ...e, name: name, value: e.htmlValue })}\r\n                style={{ height }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomEditor;\r\n","import React, { useState, useEffect } from 'react';\r\nimport CustomCard, { CustomFilterCard, CustomGridLayout } from '../../../../../shared/Cards/CustomCard';\r\nimport CustomEditor from '../../../../../shared/Input/CustomEditor';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { editEmployee, getEmployee } from '../../../../../redux/actions/EmployeeSettings/employeesAction';\r\nimport CustomTable from '../../../../../shared/Table/CustomTable';\r\nimport CustomDialog from '../../../../../shared/Overlays/CustomDialog';\r\nimport { addEmployeeNotes, getEmployeeNotes } from '../../../../../redux/actions/EmployeeSettings/certificationAction';\r\nimport moment from 'moment';\r\n\r\nconst Notes = () => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const user= useSelector((state)=>state.profile.user)\r\n\r\n    useEffect(()=>{\r\n        if(user){\r\n            setData({...data,takenBy:user.firstName})   \r\n        }\r\n    },[user])\r\n    const [data, setData] = useState({\r\n        takenBy:user?.firstName,\r\n        dateTime:moment(new Date()).format(\"YYYY-MM-DD\"),\r\n        notes: '',\r\n    });\r\n    const [visible, setVisible] = useState(false);\r\n    const [notesData, setNotesData] = useState([]);\r\n    const funcGetNotes = (id) => {\r\n        dispatch(\r\n            getEmployeeNotes(id,  setLoading, (data) => {\r\n                setNotesData(data);\r\n            }),\r\n        );\r\n    };\r\n    useEffect(() => {\r\n        if (id) {\r\n            funcGetNotes(id)   \r\n        }\r\n    }, [id, dispatch]);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const handleChange = ({ name, value }) => {\r\n        setData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n    const handleSave = () => {\r\n        if (id) {\r\n            dispatch(addEmployeeNotes({ ...data }, setLoading, () => {\r\n                funcGetNotes(id);\r\n                onClose();\r\n            }));\r\n        }\r\n    };\r\n    const columns = [\r\n        { field: 'takenBy', header: 'Taken By' },\r\n        { field: 'dateTime', header: 'Date/Time' },\r\n        { field: 'notes', header: 'Notes' },\r\n    ];\r\n    const onClose = () => {\r\n        setData({ notes: '',});\r\n        setVisible(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n         <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} />\r\n            <CustomTable data={notesData} columns={columns}  />\r\n            <CustomDialog width=\"100vh\" title={ 'Add'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                <CustomEditor name=\"notes\" onTextChange={handleChange} data={data} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n           \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notes;\r\n","import React, { useEffect } from 'react';\r\nimport { CustomFilterCard } from '../../../../../../shared/Cards/CustomCard';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { deleteCertificates, getCertificates } from '../../../../../../redux/actions/EmployeeSettings/certificationAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport { confirmDelete } from '../../../../../../utils/commonFunctions';\r\n\r\nconst Certifications = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(getCertificates(id));\r\n    }, [dispatch]);\r\n\r\n    const { allCertificates } = useSelector((state) => state.certificates);\r\n\r\n    const columns = [\r\n        { field: 'name', header: 'Name' },\r\n        { field: 'certificateNumber', header: 'Cerificate Number' },\r\n        { field: 'description', header: 'Description' },\r\n        { field: 'issuer', header: 'Issuer' },\r\n        { field: 'acquiredDate', header: 'Acquired Date' },\r\n        { field: 'expirationDate', header: 'Expiration Date' },\r\n    ];\r\n    const onEdit = (col) => {\r\n        history.push(`/settings/employee/manage-employee/edit/${col._id}/certifications/${id}`);\r\n    };\r\n    const onDelete = (col, position) => {\r\n        confirmDelete(\r\n            () => {\r\n                dispatch(deleteCertificates(col._id, () => {}));\r\n            },\r\n            'Do you want to delete this Certificates ?',\r\n            position,\r\n        );\r\n    };\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add Certifications\" linkTo={`/settings/employee/manage-employee/add/certifications/${id}`} />\r\n            <CustomTable data={allCertificates} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Certifications;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CustomFilterCard, CustomGridLayout } from '../../../../../shared/Cards/CustomCard';\r\nimport CustomTable from '../../../../../shared/Table/CustomTable';\r\nimport CustomDialog from '../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomInputNumber, CustomMultiselect } from '../../../../../shared/Input/AllInputs';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    addEmployeeDepartment,\r\n    deleteEmployeeDepartment,\r\n    editEmployeeDepartment,\r\n    getDepartments,\r\n    getEmployeeDepartments,\r\n} from '../../../../../redux/actions/EmployeeSettings/departmentsAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport { confirmDelete } from '../../../../../utils/commonFunctions';\r\n\r\nexport default function EmployeeDepartments() {\r\n    const { id } = useParams();\r\n    let { departmentsDropdown } = useSelector((state) => state?.department);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getDepartments());\r\n        funcGetEmpDepartments(id);\r\n    }, [dispatch]);\r\n\r\n    const funcGetEmpDepartments = (id) => {\r\n        dispatch(\r\n            getEmployeeDepartments(id, setLoading, (data) => {\r\n                setEmployeeDepartments(data);\r\n            }),\r\n        );\r\n    };\r\n\r\n    const columns = [\r\n        { field: 'departmentName', header: 'Name' },\r\n        { field: 'wage', header: 'Wage' },\r\n    ];\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeDeptId, setEmployeeDeptId] = useState(null);\r\n    const [employeeDepartments, setEmployeeDepartments] = useState([]);\r\n    const [data, setData] = useState({\r\n        departments: [],\r\n        wage: 0,\r\n    });\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        setData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (employeeDeptId) {\r\n            dispatch(\r\n                editEmployeeDepartment(employeeDeptId, { wage: data.wage }, setLoading, () => {\r\n                    funcGetEmpDepartments(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        } else {\r\n            dispatch(\r\n                addEmployeeDepartment({ ...data, employee: id }, setLoading, () => {\r\n                    funcGetEmpDepartments(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }\r\n    };\r\n\r\n    const onEdit = (id) => {\r\n        setEmployeeDeptId(id);\r\n        let _empDeptData = employeeDepartments.find((item) => item._id === id);\r\n        setData({ departments: [_empDeptData.department], wage: _empDeptData.wage });\r\n        setVisible(true);\r\n    };\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deleteEmployeeDepartment(col._id, () => {\r\n                    funcGetEmpDepartments(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Employee Department?');\r\n    };\r\n    const onClose = () => {\r\n        setVisible(false);\r\n        setData({\r\n            departments: [],\r\n            wage: 0,\r\n        });\r\n        setEmployeeDeptId(null);\r\n    };\r\n    let filterdDepartmentsDropdown = departmentsDropdown.filter((item) => !employeeDepartments.map((ed) => ed.department).includes(item.value));\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add Department\" onClick={() => setVisible(true)} />\r\n            <CustomTable data={employeeDepartments} columns={columns} onEdit={(e) => onEdit(e._id)} onDelete={onDelete} />\r\n\r\n            <CustomDialog title=\"Add\" visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomMultiselect\r\n                        col=\"12\"\r\n                        name=\"departments\"\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        options={employeeDeptId ? departmentsDropdown : filterdDepartmentsDropdown}\r\n                        disabled={employeeDeptId ? true : false}\r\n                    />\r\n                    <CustomInputNumber col=\"12\" name=\"wage\" data={data} onChange={handleChange} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n}\r\n","import api from '../../../services/api';\r\nimport EndPoints from '../../../services/endPoints';\r\nimport { hideLoaderAction, showLoaderAction } from '../loaderAction';\r\nimport { showToast } from '../toastAction';\r\n\r\nconst getEmployeeClasses = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.EMPLOYEE_CLASSES, '', { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeClasses = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.EMPLOYEE_CLASSES, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\nconst editEmployeeClasses = (id, data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.EMPLOYEE_CLASSES + id, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst getEmployeeClaases = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.EMPLOYEE_CLASSES + employee);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\nconst deleteEmployeeClasses = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.EMPLOYEE_CLASSES + id);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nconst getEmployeeSubstitutionOptions = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.SUSTITITION_OPTIONS, '', { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeSubstitutionOptions = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.SUSTITITION_OPTIONS, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst editEmployeeSubstitutionOptions = (id, data, setLoading, next) => async () => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.SUSTITITION_OPTIONS + id, data);\r\n    if (res.success) {\r\n        next();\r\n    }\r\n    setLoading(false);\r\n};\r\nconst getSubstitutionOption = (substitutionOptionsId, returnData) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n    const res = await api('get', EndPoints.SUSTITITION_OPTIONS + substitutionOptionsId);\r\n\r\n    console.log('res>>', res);\r\n    if (res.success) {\r\n        dispatch(hideLoaderAction());\r\n\r\n        if (returnData) {\r\n            returnData(res.data);\r\n        }\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\n\r\nconst deleteSubstitutionOption = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.SUSTITITION_OPTIONS + id);\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nexport {\r\n    getEmployeeClasses,\r\n    addEmployeeClasses,\r\n    getEmployeeClaases,\r\n    editEmployeeClasses,\r\n    deleteEmployeeClasses,\r\n    getEmployeeSubstitutionOptions,\r\n    addEmployeeSubstitutionOptions,\r\n    getSubstitutionOption,\r\n    deleteSubstitutionOption,\r\n    editEmployeeSubstitutionOptions,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { CustomDropDown, CustomInputNumber } from '../../../../../../shared/Input/AllInputs';\r\nimport { classesPayTypeOptions } from '../../../../../../utils/dropdownConstants';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport { addEmployeeClasses, editEmployeeClasses, getEmployeeClaases } from '../../../../../../redux/actions/EmployeeSettings/classesAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport formValidation from '../../../../../../utils/validations';\r\nimport { showFormErrors } from '../../../../../../utils/commonFunctions';\r\n\r\nconst AddandEditClasses = ({ visible, setVisible, id, employeeClassId, setEmployeeClassId }) => {\r\n    console.log('id>>', id, employeeClassId);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeClasses, setEmployeeClassesData] = useState({});\r\n    const dispatch = useDispatch();\r\n\r\n    const onClose = () => {\r\n        setVisible(false);\r\n        setData(incrementalPay);\r\n        setEmployeeClassId(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (employeeClassId) {\r\n            funcGetEmpDepartments(employeeClassId);\r\n        }\r\n    }, [employeeClassId]);\r\n\r\n    const funcGetEmpDepartments = (id) => {\r\n        dispatch(\r\n            getEmployeeClaases(id, setLoading, (data) => {\r\n                setEmployeeClassesData(data);\r\n            }),\r\n        );\r\n    };\r\n\r\n    const incrementalPay = {\r\n        payType: 'INCREMENTAL_PAY',\r\n        oneToFiveClients: 0,\r\n        sixToTenClients: 0,\r\n        elevenToFifteenClients: 0,\r\n        sixteenToTwentyClients: 0,\r\n        twentyOneToTwentyFiveClients: 0,\r\n        twentySixPlusClients: 0,\r\n        noRegistrationPay: 0,\r\n    };\r\n\r\n    const payperClassPayload = {\r\n        payType: 'PAY_PER_CLASS',\r\n        payPerClassRate: 0,\r\n        noRegistrationPay: 0,\r\n    };\r\n\r\n    const PayPerClient = {\r\n        payType: 'PAY_PER_CLIENT',\r\n        baseRate: 0,\r\n        payPerClientRate: 0,\r\n        eachClientOver: [\r\n            {\r\n                noOfClients: 0,\r\n                rate: 0,\r\n            },\r\n            {\r\n                noOfClients: 0,\r\n                rate: 0,\r\n            },\r\n            {\r\n                noOfClients: 0,\r\n                rate: 0,\r\n            },\r\n        ],\r\n        maxPayPerClient: 0,\r\n        noRegistrationPay: 0,\r\n    };\r\n\r\n    const percentageRate = {\r\n        payType: 'PERCENTAGE_RATE',\r\n        percentage: 0,\r\n        noRegistrationPay: 0,\r\n    };\r\n\r\n    const [data, setData] = useState(incrementalPay);\r\n\r\n    useEffect(() => {\r\n        if (!employeeClassId) {\r\n            if (data?.payType === 'INCREMENTAL_PAY') {\r\n                setData(incrementalPay);\r\n            } else if (data?.payType === 'PAY_PER_CLASS') {\r\n                setData(payperClassPayload);\r\n            } else if (data?.payType === 'PAY_PER_CLIENT') {\r\n                setData(PayPerClient);\r\n            } else if (data?.payType === 'PERCENTAGE_RATE') {\r\n                setData(percentageRate);\r\n            }\r\n        }\r\n    }, [data?.payType]);\r\n\r\n    useEffect(() => {\r\n        if (employeeClassId && employeeClasses) {\r\n            const {\r\n                oneToFiveClients,\r\n                sixToTenClients,\r\n                elevenToFifteenClients,\r\n                sixteenToTwentyClients,\r\n                twentyOneToTwentyFiveClients,\r\n                twentySixPlusClients,\r\n                noRegistrationPay,\r\n                payPerClassRate,\r\n                baseRate,\r\n                payPerClientRate,\r\n                maxPayPerClient,\r\n                percentage,\r\n            } = employeeClasses;\r\n            let newData = {};\r\n            switch (employeeClasses?.payType) {\r\n                case 'INCREMENTAL_PAY':\r\n                    newData = {\r\n                        payType: 'INCREMENTAL_PAY',\r\n                        oneToFiveClients,\r\n                        sixToTenClients,\r\n                        elevenToFifteenClients,\r\n                        sixteenToTwentyClients,\r\n                        twentyOneToTwentyFiveClients,\r\n                        twentySixPlusClients,\r\n                        noRegistrationPay,\r\n                    };\r\n                    break;\r\n                case 'PAY_PER_CLASS':\r\n                    newData = {\r\n                        payType: 'PAY_PER_CLASS',\r\n                        payPerClassRate,\r\n                        noRegistrationPay,\r\n                    };\r\n                    break;\r\n                case 'PAY_PER_CLIENT':\r\n                    newData = {\r\n                        payType: 'PAY_PER_CLIENT',\r\n                        baseRate,\r\n                        payPerClientRate,\r\n                        eachClientOver: employeeClasses.eachClientOver.map((item) => ({\r\n                            noOfClients: item.noOfClients,\r\n                            rate: item.rate,\r\n                        })),\r\n                        maxPayPerClient,\r\n                        noRegistrationPay,\r\n                    };\r\n                    break;\r\n                case 'PERCENTAGE_RATE':\r\n                    newData = {\r\n                        payType: 'PERCENTAGE_RATE',\r\n                        percentage,\r\n                        noRegistrationPay,\r\n                    };\r\n                    break;\r\n                default:\r\n                    newData = {};\r\n                    break;\r\n            }\r\n            setData(newData);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [employeeClasses]);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value ,formErrors}));\r\n    };\r\n\r\n    const handleChange1 = (index, key, value) => {\r\n        const newList = [...data.eachClientOver]; // Use data instead of PayPerClient\r\n        newList[index][key] = value;\r\n        setData((prev) => ({ ...prev, eachClientOver: newList }));\r\n    };\r\n\r\n    const handleSave = () => {\r\n        let ignore =[]\r\n        if(data?.payType === 'INCREMENTAL_PAY'){\r\n             ignore=['payPerClassRate','baseRate','payPerClientRate','maxPayPerClient','percentage'];\r\n        }else if(data?.payType==='PAY_PER_CLASS'){\r\n            ignore =['oneToFiveClients','sixToTenClients','elevenToFifteenClients','sixteenToTwentyClients','twentyOneToTwentyFiveClients','twentySixPlusClients','baseRate','payPerClientRate','maxPayPerClient','percentage']\r\n        }else if(data?.payType==='PAY_PER_CLIENT'){\r\n            ignore =['oneToFiveClients','sixToTenClients','elevenToFifteenClients','sixteenToTwentyClients','twentyOneToTwentyFiveClients','twentySixPlusClients','percentage',\"payPerClassRate\"]\r\n        }else{\r\n            ignore= ['oneToFiveClients','sixToTenClients','elevenToFifteenClients','sixteenToTwentyClients','twentyOneToTwentyFiveClients','twentySixPlusClients','baseRate','payPerClientRate','maxPayPerClient','payPerClassRate']\r\n        }\r\n        if (showFormErrors(data, setData, ignore)) {\r\n        if (employeeClassId) {\r\n            dispatch(\r\n                editEmployeeClasses(employeeClassId, data, setLoading, () => {\r\n                    onClose();\r\n                }),\r\n            );\r\n        }\r\n        dispatch(\r\n            addEmployeeClasses({ ...data, employee: id }, setLoading, () => {\r\n                onClose();\r\n            }),\r\n        );\r\n        }\r\n    };\r\n\r\n    console.log('data>>', data);\r\n    console.log('employeeClasses>>', employeeClasses);\r\n\r\n    return (\r\n        <div>\r\n            <CustomDialog title={employeeClassId ? 'Edit' : 'Add'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomDropDown\r\n                        name=\"payType\"\r\n                        data={data}\r\n                        onChange={handleChange}\r\n                        options={classesPayTypeOptions}\r\n                        col={12}\r\n                        disabled={employeeClassId ? true : false}\r\n                    />\r\n                    {data?.payType === 'INCREMENTAL_PAY' && (\r\n                        <>\r\n                            <CustomInputNumber label=\"1-5 Clients\" name=\"oneToFiveClients\" data={data} onChange={handleChange} />\r\n                            <CustomInputNumber label=\"6-10 Clients\" name=\"sixToTenClients\" data={data} onChange={handleChange} />\r\n                            <CustomInputNumber label=\"11-15 Clients\" name=\"elevenToFifteenClients\" data={data} onChange={handleChange} />\r\n                            <CustomInputNumber label=\"16-20 Clients\" name=\"sixteenToTwentyClients\" data={data} onChange={handleChange} />\r\n                            <CustomInputNumber label=\"21-25 Clients\" data={data} name=\"twentyOneToTwentyFiveClients\" onChange={handleChange} />\r\n                            <CustomInputNumber label=\"26+ Clients\" data={data} name=\"twentySixPlusClients\" onChange={handleChange} />\r\n                            <CustomInputNumber name=\"noRegistrationPay\" data={data} onChange={handleChange} />\r\n                        </>\r\n                    )}\r\n\r\n                    {data?.payType === 'PAY_PER_CLASS' && (\r\n                        <>\r\n                            <CustomInputNumber data={data} name=\"payPerClassRate\" onChange={handleChange} />\r\n                            <CustomInputNumber name=\"noRegistrationPay\" data={data} onChange={handleChange} />\r\n                        </>\r\n                    )}\r\n                    {data?.payType === 'PAY_PER_CLIENT' && (\r\n                        <>\r\n                            <CustomInputNumber name=\"baseRate\" data={data} onChange={handleChange} />\r\n                            <CustomInputNumber name=\"payPerClientRate\" data={data} onChange={handleChange} />\r\n                            {data?.eachClientOver?.map((client, index) => (\r\n                                <div className=\" col-12 \" key={index}>\r\n                                    <div className=\"grid\">\r\n                                        <CustomInputNumber\r\n                                            name=\"noOfClients\"\r\n                                            value={client?.noOfClients}\r\n                                            onChange={(e) => handleChange1(index, 'noOfClients', e.value)}\r\n                                            col={6}\r\n                                        />\r\n                                        <CustomInputNumber name=\"rate\" value={client?.rate} onChange={(e) => handleChange1(index, 'rate', e.value)} col={6} />\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                            <CustomInputNumber data={data} name=\"noRegistrationPay\" onChange={handleChange} />\r\n                            <CustomInputNumber data={data} name=\"maxPayPerClient\" onChange={handleChange} />\r\n                        </>\r\n                    )}\r\n                    {data?.payType === 'PERCENTAGE_RATE' && (\r\n                        <>\r\n                            <CustomInputNumber data={data} name=\"percentage\" onChange={handleChange} />\r\n                            <CustomInputNumber name=\"noRegistrationPay\" data={data} onChange={handleChange} />\r\n                        </>\r\n                    )}\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddandEditClasses;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { DataView } from 'primereact/dataview';\r\nimport { useDispatch } from 'react-redux';\r\nimport CustomCard, { CustomFilterCard } from '../../../../../../shared/Cards/CustomCard';\r\nimport { deleteEmployeeClasses, getEmployeeClasses } from '../../../../../../redux/actions/EmployeeSettings/classesAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport AddandEditClasses from './AddandEditClasses';\r\nimport { confirmDelete } from '../../../../../../utils/commonFunctions';\r\n\r\nexport default function PaySetup() {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        funcGetEmpClasses(id);\r\n    }, [dispatch]);\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeClassId, setEmployeeClassId] = useState(null);\r\n    const [employeeClasses, setEmployeeClasses] = useState([\r\n        {\r\n            id: '1000',\r\n            code: 'f230fh0g3',\r\n            name: 'Bamboo Watch',\r\n            description: 'Product Description',\r\n            image: 'bamboo-watch.jpg',\r\n            price: 65,\r\n            category: 'Accessories',\r\n            quantity: 24,\r\n            inventoryStatus: 'INSTOCK',\r\n            rating: 5,\r\n        },\r\n    ]);\r\n\r\n    const funcGetEmpClasses = (id) => {\r\n        dispatch(\r\n            getEmployeeClasses(id, setLoading, (data) => {\r\n                setEmployeeClasses(data);\r\n            }),\r\n        );\r\n    };\r\n\r\n    const onEdit = (id) => {\r\n        setEmployeeClassId(id?._id);\r\n        // let _empDeptData = employeeDepartments.find((item) => item._id === id);\r\n        // setData({ departments: [_empDeptData.department], wage: _empDeptData.wage });\r\n        setVisible(true);\r\n    };\r\n\r\n    const itemTemplate = (item) => {\r\n        return (\r\n            <div className=\"col-12 grid\" key={item.id}>\r\n                <div className=\"col-11\">{item.payType}</div>\r\n                <div className=\"col-1\">\r\n                    <i className=\"mx-2 cursor-pointer pi pi-pencil\" onClick={() => onEdit(item)} />\r\n                    <i className=\"mx-2 cursor-pointer pi pi-trash\" onClick={() => onDelete(item)} />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deleteEmployeeClasses(col._id, () => {\r\n                    funcGetEmpClasses(id);\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Employee Classes?');\r\n    };\r\n    return (\r\n        <div>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} />\r\n            <CustomCard col=\"12\" title=\"Pay\">\r\n                <DataView value={employeeClasses} itemTemplate={itemTemplate} />\r\n                <AddandEditClasses\r\n                    visible={visible}\r\n                    setVisible={setVisible}\r\n                    id={id}\r\n                    employeeClassId={employeeClassId}\r\n                    setEmployeeClassId={setEmployeeClassId}\r\n                />\r\n            </CustomCard>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport CustomCard, { CustomFilterCard, CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport {\r\n    addEmployeeSubstitutionOptions,\r\n    deleteSubstitutionOption,\r\n    editEmployeeSubstitutionOptions,\r\n    getEmployeeSubstitutionOptions,\r\n    getSubstitutionOption,\r\n} from '../../../../../../redux/actions/EmployeeSettings/classesAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomDropDown, CustomInput } from '../../../../../../shared/Input/AllInputs';\r\nimport { substitutionPriorityOptions } from '../../../../../../utils/dropdownConstants';\r\nimport { confirmDelete, showFormErrors } from '../../../../../../utils/commonFunctions';\r\nimport formValidation from '../../../../../../utils/validations';\r\n\r\nexport default function SubstituteOptionSetup() {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    const [Substitute, setSubstitute] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [visible, setVisible] = useState(false);\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        priority: 'MEDIUM',\r\n    });\r\n\r\n    const [substitutionOptionsId, setSubstituteOptionsId] = useState('');\r\n    useEffect(() => {\r\n        funcGetEmpSubstitution(id);\r\n    }, []);\r\n    const funcGetEmpSubstitution = (id) => {\r\n        dispatch(\r\n            getEmployeeSubstitutionOptions(id, setLoading, (data) => {\r\n                setSubstitute(data);\r\n            }),\r\n        );\r\n    };\r\n    const onEdit = (col) => {\r\n        setSubstituteOptionsId(col?._id);\r\n        setVisible(true);\r\n    };\r\n    useEffect(() => {\r\n        console.log(substitutionOptionsId);\r\n        if (substitutionOptionsId) {\r\n            dispatch(\r\n                getSubstitutionOption(substitutionOptionsId, (data) => {\r\n                    setData({\r\n                        name: data.name,\r\n                        priority: data.priority,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [substitutionOptionsId, dispatch]);\r\n\r\n    const columns = [\r\n        { field: 'name', header: 'Name' },\r\n        { field: 'priority', header: 'Priority' },\r\n    ];\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const onClose = () => {\r\n        setVisible(false);\r\n        setData({\r\n            name: '',\r\n            priority: 'MEDIUM',\r\n        });\r\n        setSubstituteOptionsId(null);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (substitutionOptionsId) {\r\n                dispatch(\r\n                    editEmployeeSubstitutionOptions(substitutionOptionsId, { ...data, employee: id }, setLoading, () => {\r\n                        funcGetEmpSubstitution(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addEmployeeSubstitutionOptions({ ...data, employee: id }, setLoading, () => {\r\n                        funcGetEmpSubstitution(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deleteSubstitutionOption(col._id, () => {\r\n                    funcGetEmpSubstitution(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Substitution Option?');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} />\r\n            <CustomCard col=\"12\" title=\"Classes\">\r\n                <CustomTable data={Substitute} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n            </CustomCard>\r\n            <CustomDialog title={substitutionOptionsId ? 'Edit' : 'Add'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomInput col=\"12\" name=\"name\" data={data} onChange={handleChange} />\r\n                    <CustomDropDown name=\"priority\" data={data} onChange={handleChange} options={substitutionPriorityOptions} col={12} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport CustomTabView from '../../../../../../shared/TabView/CustomTabView';\r\nimport PaySetup from './PaySetup';\r\nimport SubstituteOptionSetup from './SubstituteOptionSetup';\r\n\r\nconst ClassesSetup = () => {\r\n    const tabs = [\r\n        { title: 'Pay', content: <PaySetup /> },\r\n        { title: 'Substitute Option', content: <SubstituteOptionSetup /> },\r\n    ];\r\n    return (\r\n        <>\r\n            <CustomTabView name=\"classes\" tabs={tabs} useIndex={true} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ClassesSetup;\r\n","import api from '../../../services/api';\r\nimport EndPoints from '../../../services/endPoints';\r\nimport { hideLoaderAction, showLoaderAction } from '../loaderAction';\r\nimport { showToast } from '../toastAction';\r\n\r\nconst getEmployeeAppointmentPay = (employee, type, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.EMPLOYEE_APPOINTMENT, '', { employee, type: type });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeAppointmentPay = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.EMPLOYEE_APPOINTMENT, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\nconst editEmployeeAppointmentPay = (id, data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.EMPLOYEE_APPOINTMENT + id, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst getEmployeeAppartment = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.EMPLOYEE_APPOINTMENT + employee);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\nconst deletetEmployeeAppartment = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.EMPLOYEE_APPOINTMENT + id);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nconst getEmployeeSubstitutionOptions = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.SUSTITITION_OPTIONS, '', { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeAppartmentBonus = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.EMPLOYEE_APPOINTMENT, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst editEmployeeAppartmentBonus = (id, data, setLoading, next) => async () => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.EMPLOYEE_APPOINTMENT + id, data);\r\n    if (res.success) {\r\n        next();\r\n    }\r\n    setLoading(false);\r\n};\r\nconst getEmployeeAppartmentBonus = (id, returnData) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n    const res = await api('get', EndPoints.EMPLOYEE_APPOINTMENT + id);\r\n\r\n    console.log('res>>', res);\r\n    if (res.success) {\r\n        dispatch(hideLoaderAction());\r\n\r\n        if (returnData) {\r\n            returnData(res.data);\r\n        }\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\n\r\nconst deleteEmployeeAppartmentBonus = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.EMPLOYEE_APPOINTMENT + id);\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nexport {\r\n    getEmployeeAppointmentPay,\r\n    addEmployeeAppointmentPay,\r\n    getEmployeeAppartment,\r\n    editEmployeeAppointmentPay,\r\n    deletetEmployeeAppartment,\r\n    getEmployeeSubstitutionOptions,\r\n    addEmployeeAppartmentBonus,\r\n    getEmployeeAppartmentBonus,\r\n    deleteEmployeeAppartmentBonus,\r\n    editEmployeeAppartmentBonus,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CustomFilterCard, CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { useParams } from 'react-router-dom';\r\nimport { CustomDropDown, CustomInput, CustomInputNumber } from '../../../../../../shared/Input/AllInputs';\r\nimport { AppointmentPayPriorityOptions, amountTypeOptions } from '../../../../../../utils/dropdownConstants';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    addEmployeeAppointmentPay,\r\n    deletetEmployeeAppartment,\r\n    editEmployeeAppointmentPay,\r\n    getEmployeeAppartment,\r\n    getEmployeeAppointmentPay,\r\n} from '../../../../../../redux/actions/EmployeeSettings/appointmentAction';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport { confirmDelete, showFormErrors } from '../../../../../../utils/commonFunctions';\r\nimport formValidation from '../../../../../../utils/validations';\r\n\r\nconst PaySetup = () => {\r\n    const dispatch = useDispatch();\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeAppartId, setEmployeeAppartId] = useState(null);\r\n    const [appointmentData, setAppointmentData] = useState([]);\r\n\r\n    const initialState = {\r\n        name: '',\r\n        priority: 'PER-EVENT',\r\n        type: 'PAY',\r\n        pay: 0,\r\n        amountType: 'FIXED',\r\n    };\r\n\r\n    const [data, setData] = useState(initialState);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        funcGetEmpAppointment(id);\r\n    }, []);\r\n    const funcGetEmpAppointment = (id) => {\r\n        dispatch(\r\n            getEmployeeAppointmentPay(id, 'PAY', setLoading, (data) => {\r\n                setAppointmentData(data);\r\n            }),\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(employeeAppartId);\r\n        if (employeeAppartId) {\r\n            dispatch(\r\n                getEmployeeAppartment(employeeAppartId, setLoading, (data) => {\r\n                    setData({\r\n                        name: data.name,\r\n                        priority: data.priority,\r\n                        type: 'PAY',\r\n                        pay: data.pay,\r\n                        amountType: data.amountType,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [employeeAppartId, dispatch]);\r\n\r\n    const onClose = () => {\r\n        setEmployeeAppartId(null);\r\n        setData(initialState);\r\n        setVisible(false);\r\n    };\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value ,formErrors}));\r\n    };\r\n\r\n    const columns = [\r\n        { field: 'name', header: 'Name' },\r\n        { field: 'priority', header: 'Priority' },\r\n        { field: 'pay', header: 'Pay' },\r\n    ];\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deletetEmployeeAppartment(col._id, () => {\r\n                    funcGetEmpAppointment(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Appartment Pay?');\r\n    };\r\n    const onEdit = (col) => {\r\n        setEmployeeAppartId(col?._id);\r\n        setVisible(true);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n        if (employeeAppartId) {\r\n            dispatch(\r\n                editEmployeeAppointmentPay(employeeAppartId, { ...data }, setLoading, () => {\r\n                    funcGetEmpAppointment(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        } else {\r\n            dispatch(\r\n                addEmployeeAppointmentPay({ ...data, employee: id }, setLoading, () => {\r\n                    funcGetEmpAppointment(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }\r\n    }\r\n    };\r\n\r\n    console.log('data>>', data);\r\n\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} />\r\n            <CustomTable data={appointmentData} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n\r\n            <CustomDialog title={employeeAppartId ? 'Edit' : 'Add'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomInput col=\"12\" name=\"name\" data={data} onChange={handleChange} />\r\n                    <CustomDropDown name=\"priority\" data={data} onChange={handleChange} options={AppointmentPayPriorityOptions} col={12} />\r\n                    <CustomInputNumber col={8} name=\"pay\" data={data} onChange={handleChange} />\r\n                    <CustomDropDown label=\"\" name=\"amountType\" options={amountTypeOptions} data={data} onChange={handleChange} col={4} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PaySetup;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { CustomFilterCard, CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { CustomDropDown, CustomInput, CustomInputNumber, CustomMultiselect } from '../../../../../../shared/Input/AllInputs';\r\nimport { amountTypeOptions, bonusTypeConstantsOptions, durationOptions, servicesOptions } from '../../../../../../utils/dropdownConstants';\r\nimport {\r\n    addEmployeeAppartmentBonus,\r\n    deleteEmployeeAppartmentBonus,\r\n    editEmployeeAppartmentBonus,\r\n    getEmployeeAppartmentBonus,\r\n    getEmployeeAppointmentPay,\r\n} from '../../../../../../redux/actions/EmployeeSettings/appointmentAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport formValidation from '../../../../../../utils/validations';\r\nimport { confirmDelete, showFormErrors } from '../../../../../../utils/commonFunctions';\r\n\r\nconst BonusSetup = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n\r\n    const initialState = {\r\n        bonusType: 'SERVICE_VALUE', //SINGLE_CLIENT,SERVICE_VALUE\r\n        sessionsValue: 0,\r\n        ofSessions: 0, //sessionsValue,ofSessions\r\n        over: 0,\r\n        duration: 'DAYS',\r\n        bonusAmount: 0,\r\n        type: 'BONUS',\r\n        amountType: 'FIXED',\r\n        services: ['Private Sessions'],\r\n    };\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeAppartBonusId, setemployeeAppartBonusId] = useState(null);\r\n    const [appointmentData, setAppointmentData] = useState([]);\r\n\r\n    const [data, setData] = useState(initialState);\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        funcGetEmpAppointment(id);\r\n    }, []);\r\n    const funcGetEmpAppointment = (id) => {\r\n        dispatch(\r\n            getEmployeeAppointmentPay(id, 'BONUS', setLoading, (data) => {\r\n                setAppointmentData(data);\r\n            }),\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(employeeAppartBonusId);\r\n        if (employeeAppartBonusId) {\r\n            dispatch(\r\n                getEmployeeAppartmentBonus(employeeAppartBonusId, (data) => {\r\n                    setData({\r\n                        bonusType: data.bonusType,\r\n                        sessionsValue: data.sessionsValue,\r\n                        ofSessions: data.ofSessions,\r\n                        over: data.selectTimeframe.over,\r\n                        duration: data.selectTimeframe.duration,\r\n                        bonusAmount: data.bonusAmount,\r\n                        type: 'BONUS',\r\n                        amountType: data.amountType,\r\n                        services: data.services,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [employeeAppartBonusId, dispatch]);\r\n\r\n    const onClose = () => {\r\n        setemployeeAppartBonusId(null);\r\n        setData(initialState);\r\n        setVisible(false);\r\n    };\r\n\r\n    const onEdit = (col) => {\r\n        setemployeeAppartBonusId(col?._id);\r\n        setVisible(true);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        let ignore = [];\r\n        if (data?.bonusType === 'SINGLE_CLIENT') {\r\n            ignore = ['sessionsValue'];\r\n        } else {\r\n            ignore = ['ofSessions'];\r\n        }\r\n        if (showFormErrors(data, setData, ignore)) {\r\n            const { over, duration, ...rest } = data;\r\n            if (employeeAppartBonusId) {\r\n                dispatch(\r\n                    editEmployeeAppartmentBonus(\r\n                        employeeAppartBonusId,\r\n                        {\r\n                            ...rest,\r\n                            selectTimeframe: {\r\n                                over,\r\n                                duration,\r\n                            },\r\n                        },\r\n                        setLoading,\r\n                        () => {\r\n                            funcGetEmpAppointment(id);\r\n                            onClose();\r\n                        },\r\n                    ),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addEmployeeAppartmentBonus(\r\n                        {\r\n                            ...rest,\r\n                            selectTimeframe: {\r\n                                over,\r\n                                duration,\r\n                            },\r\n                            employee: id,\r\n                        },\r\n                        setLoading,\r\n                        () => {\r\n                            funcGetEmpAppointment(id);\r\n                            onClose();\r\n                        },\r\n                    ),\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deleteEmployeeAppartmentBonus(col._id, () => {\r\n                    funcGetEmpAppointment(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Bonus?');\r\n    };\r\n    const columns = [\r\n        { field: 'bonusType', header: 'Bonus Type' },\r\n        { field: 'services', body: (r) => r.services.join(','), header: 'Services' },\r\n    ];\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} />\r\n            <CustomTable data={appointmentData} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n\r\n            <CustomDialog title={employeeAppartBonusId ? 'Edit' : 'Add'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomDropDown label=\"\" name=\"bonusType\" data={data} onChange={handleChange} options={bonusTypeConstantsOptions} col={6} />\r\n                    {data?.bonusType === 'SINGLE_CLIENT' ? (\r\n                        <CustomInputNumber col={6} name=\"ofSessions\" data={data} onChange={handleChange} />\r\n                    ) : (\r\n                        <CustomInputNumber col={6} name=\"sessionsValue\" data={data} onChange={handleChange} />\r\n                    )}\r\n                    <CustomInputNumber col=\"6\" name=\"over\" data={data} onChange={handleChange} />\r\n                    <CustomDropDown label=\"\" name=\"duration\" data={data} onChange={handleChange} col={6} options={durationOptions} />\r\n                    <CustomInputNumber col={8} name=\"bonusAmount\" data={data} onChange={handleChange} />\r\n                    <CustomDropDown label=\"\" name=\"amountType\" options={amountTypeOptions} data={data} onChange={handleChange} col={4} />\r\n                    <CustomMultiselect col=\"12\" name=\"services\" data={data} onChange={handleChange} options={servicesOptions} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BonusSetup;\r\n","import React from 'react';\r\nimport CustomTabView from '../../../../../../shared/TabView/CustomTabView';\r\nimport PaySetup from './PaySetup';\r\nimport BonusSetup from './BonusSetup';\r\n\r\nconst AppointmentSetup = () => {\r\n    const tabs = [\r\n        { title: 'Pay', content: <PaySetup /> },\r\n        { title: 'Bonus', content: <BonusSetup /> },\r\n        { title: 'Calendar Default', content: <></> },\r\n    ];\r\n    return (\r\n        <>\r\n            <CustomTabView name=\"appointment\" tabs={tabs} useIndex={true} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppointmentSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CustomFilterCard, CustomGridLayout } from '../../../../../../shared/Cards/CustomCard';\r\nimport CustomDialog from '../../../../../../shared/Overlays/CustomDialog';\r\nimport { useParams } from 'react-router-dom';\r\nimport { CustomDropDown,  CustomInputNumber } from '../../../../../../shared/Input/AllInputs';\r\nimport {  EmployeeCommissionType, amountTypeOptions } from '../../../../../../utils/dropdownConstants';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CustomTable from '../../../../../../shared/Table/CustomTable';\r\nimport { confirmDelete, showFormErrors } from '../../../../../../utils/commonFunctions';\r\nimport { addEmployeeSalesItem, deletetEmployeeSaleItem, editEmployeeSalesItem, getEmployeeSaleItem, getEmployeeSalesItem } from '../../../../../../redux/actions/EmployeeSettings/salesCommssionAction';\r\nimport { getCommissionGroups } from '../../../../../../redux/actions/InventorySettings/commissionGroupAction';\r\nimport formValidation from '../../../../../../utils/validations';\r\n\r\nconst ItemCommission = () => {\r\n    const dispatch = useDispatch();\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeSalesItemId, setEmployeeSalesItemId] = useState(null);\r\n    const [itemCommissionData, setItemCommissionData] = useState([]);\r\n\r\n    const initialState = {\r\n        commissionGroup: '',\r\n        type: 'ITEM_COMMISSION', //ITEM_COMMISSION, BONUS\r\n        commissionType: 'PER_ITEM', //PER_SALE,PER_ITEM\r\n        amountType: 'FIXED', //PERCENTAGE,FIXED\r\n        pay: '0',\r\n    };\r\n\r\n    const [data, setData] = useState(initialState);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        funcGetEmpSalesItem(id);\r\n        dispatch(getCommissionGroups());\r\n    }, []);\r\n\r\n    const { commissionGroupsDropdown } = useSelector((state) => state?.commissionGroup);\r\n    const funcGetEmpSalesItem = (id) => {\r\n        dispatch(\r\n            getEmployeeSalesItem(id, 'ITEM', setLoading, (data) => {\r\n                setItemCommissionData(data);\r\n            }),\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(employeeSalesItemId);\r\n        if (employeeSalesItemId) {\r\n            dispatch(\r\n                getEmployeeSaleItem(employeeSalesItemId, setLoading, (data) => {\r\n                    setData({\r\n                        commissionGroup: data.commissionGroup,\r\n                        type: data.type, \r\n                        commissionType: data.commissionType, \r\n                        amountType: data.amountType, \r\n                        pay: data.pay,\r\n                    });\r\n                }),\r\n            );\r\n        }\r\n    }, [employeeSalesItemId, dispatch]);\r\n\r\n    const onClose = () => {\r\n        setEmployeeSalesItemId(null);\r\n        setData(initialState);\r\n        setVisible(false);\r\n    };\r\n\r\n    const handleChange = ({ name, value }) => {\r\n        const formErrors = formValidation(name, value, data);\r\n        setData((prev) => ({ ...prev, [name]: value, formErrors }));\r\n    };\r\n\r\n    const columns = [\r\n        { field: 'commissionGroup', header: 'Commission Group' },\r\n        { field: 'commissionType', header: 'Commission Type' },\r\n        { field: 'pay', header: 'Pay' },\r\n    ];\r\n\r\n    const onDelete = (col) => {\r\n        confirmDelete(() => {\r\n            dispatch(\r\n                deletetEmployeeSaleItem(col._id, () => {\r\n                    funcGetEmpSalesItem(id);\r\n                    onClose();\r\n                }),\r\n            );\r\n        }, 'Do you want to delete this Item Commission?');\r\n    };\r\n    const onEdit = (col) => {\r\n        setEmployeeSalesItemId(col?._id);\r\n        setVisible(true);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (showFormErrors(data, setData)) {\r\n            if (employeeSalesItemId) {\r\n                dispatch(\r\n                    editEmployeeSalesItem(employeeSalesItemId, { ...data }, setLoading, () => {\r\n                        funcGetEmpSalesItem(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    addEmployeeSalesItem({ ...data, employee: id }, setLoading, () => {\r\n                        funcGetEmpSalesItem(id);\r\n                        onClose();\r\n                    }),\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    console.log('data>>', data);\r\n\r\n    return (\r\n        <>\r\n            <CustomFilterCard buttonTitle=\"Add\" onClick={() => setVisible(true)} />\r\n            <CustomTable data={itemCommissionData} columns={columns} onEdit={onEdit} onDelete={onDelete} />\r\n\r\n            <CustomDialog title={employeeSalesItemId ? 'Edit' : 'Add'} visible={visible} onCancel={onClose} loading={loading} onSave={handleSave}>\r\n                <CustomGridLayout>\r\n                    <CustomDropDown name=\"commissionGroup\" data={data} onChange={handleChange} options={commissionGroupsDropdown} optionLabel=\"name\" col={12} />\r\n                    <CustomDropDown name=\"commissionType\" data={data} onChange={handleChange} options={EmployeeCommissionType} col={12} />\r\n                    <CustomInputNumber col={8} name=\"pay\" data={data} onChange={handleChange} />\r\n                    <CustomDropDown label=\"\" name=\"amountType\" options={amountTypeOptions} data={data} onChange={handleChange} col={4} />\r\n                </CustomGridLayout>\r\n            </CustomDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ItemCommission;\r\n","import api from '../../../services/api';\r\nimport EndPoints from '../../../services/endPoints';\r\nimport { hideLoaderAction, showLoaderAction } from '../loaderAction';\r\nimport { showToast } from '../toastAction';\r\n\r\nconst getEmployeeSalesItem = (employee, type, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.SALES_COMMISSION, '', { employee, type: type });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeSalesItem = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.SALES_COMMISSION, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\nconst editEmployeeSalesItem = (id, data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.SALES_COMMISSION + id, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst getEmployeeSaleItem = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.SALES_COMMISSION + employee);\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\nconst deletetEmployeeSaleItem = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.SALES_COMMISSION + id);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nconst getEmployeeSubstitutionOptions = (employee, setLoading, returnData) => async (dispatch) => {\r\n    if (setLoading) {\r\n        setLoading(true);\r\n    }\r\n    const res = await api('get', EndPoints.SUSTITITION_OPTIONS, '', { employee });\r\n    if (res.success) {\r\n        if (res.data) {\r\n            if (returnData) {\r\n                returnData(res.data);\r\n            }\r\n        }\r\n    }\r\n    if (setLoading) {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nconst addEmployeeAppartmentBonus = (data, setLoading, next) => async (dispatch) => {\r\n    setLoading(true);\r\n\r\n    const res = await api('post', EndPoints.EMPLOYEE_APPOINTMENT, data);\r\n    if (res.success) {\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n    setLoading(false);\r\n};\r\n\r\nconst editEmployeeSubstitutionOptions = (id, data, setLoading, next) => async () => {\r\n    setLoading(true);\r\n\r\n    const res = await api('put', EndPoints.EMPLOYEE_APPOINTMENT + id, data);\r\n    if (res.success) {\r\n        next();\r\n    }\r\n    setLoading(false);\r\n};\r\nconst getEmployeeAppartmentBonus = (id, returnData) => async (dispatch) => {\r\n    dispatch(showLoaderAction());\r\n    const res = await api('get', EndPoints.EMPLOYEE_APPOINTMENT + id);\r\n\r\n    console.log('res>>', res);\r\n    if (res.success) {\r\n        dispatch(hideLoaderAction());\r\n\r\n        if (returnData) {\r\n            returnData(res.data);\r\n        }\r\n    }\r\n    dispatch(hideLoaderAction());\r\n};\r\n\r\nconst deleteSubstitutionOption = (id, next) => async (dispatch) => {\r\n    const res = await api('delete', EndPoints.SUSTITITION_OPTIONS + id);\r\n    if (res.success) {\r\n        dispatch(showToast({ severity: 'success', summary: res.message }));\r\n        next();\r\n    } else {\r\n        dispatch(showToast({ severity: 'error', summary: res.message }));\r\n    }\r\n};\r\n\r\nexport {\r\n    getEmployeeSalesItem,\r\n    addEmployeeSalesItem,\r\n    getEmployeeSaleItem,\r\n    editEmployeeSalesItem,\r\n    deletetEmployeeSaleItem,\r\n    getEmployeeSubstitutionOptions,\r\n    addEmployeeAppartmentBonus,\r\n    getEmployeeAppartmentBonus,\r\n    deleteSubstitutionOption,\r\n    editEmployeeSubstitutionOptions,\r\n};\r\n","import React from 'react';\r\nimport CustomTabView from '../../../../../../shared/TabView/CustomTabView';\r\nimport ItemCommission from './ItemCommission';\r\nimport BonusSetup from '../AppointmentSetup/BonusSetup';\r\n\r\nconst SalesCommission = () => {\r\n    const tabs = [\r\n        { title: 'Item Commission', content: <ItemCommission/> },\r\n        { title: 'Bonus', content: <BonusSetup/> },\r\n    ];\r\n    return (\r\n        <>\r\n            <CustomTabView name=\"sales-commission\" tabs={tabs} useIndex={true} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SalesCommission;","import React, { useState } from 'react';\r\nimport FormPage from '../../../../../shared/Layout/FormPage';\r\nimport CustomTabView from '../../../../../shared/TabView/CustomTabView';\r\nimport Security from './Security';\r\nimport General from './General';\r\nimport Clubs from './Clubs';\r\nimport Notes from './Notes';\r\nimport Certifications from './Certifications/Certifications';\r\nimport { useParams } from 'react-router-dom';\r\nimport EmployeeDepartments from './EmployeeDepartments';\r\nimport ClassesSetup from './Classes/ClassesSetup';\r\nimport AppointmentSetup from './AppointmentSetup/AppointmentSetup';\r\nimport SalesCommission from './SalesCommission/SalesCommission';\r\n\r\nconst EmployeeForm = () => {\r\n    const { id } = useParams();\r\n    const tabs = [\r\n        { title: 'Security', content: <Security /> },\r\n        { title: 'General', content: <General /> },\r\n        { title: 'Departments', content: <EmployeeDepartments /> },\r\n        { title: 'Clubs', content: <Clubs /> },\r\n        { title: 'Classes Setup', content: <ClassesSetup /> },\r\n        { title: 'Appointment Setup', content: <AppointmentSetup /> },\r\n        { title: 'Sales Commision', content:<SalesCommission/> },\r\n        { title: 'Time Sheet', content: <h1>Tab 8</h1> },\r\n        { title: 'Notes', content: <Notes /> },\r\n        {\r\n            title: 'Certifications',\r\n            content: <Certifications />,\r\n        },\r\n    ];\r\n    return (\r\n        <>\r\n            <FormPage backText=\"Manage Employees\" backTo=\"/settings/employee\">\r\n                <CustomTabView tabs={tabs} disabledTabIndices={id ? [] : [1, 2, 3, 4, 5, 6, 7, 8, 9]} />\r\n            </FormPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EmployeeForm;\r\n"],"names":["getCertificates","id","setLoading","async","params","employee","res","api","EndPoints","MANAGE_EMPLOYEE_CERTIFICATES","success","data","dispatch","type","types","CHANGE_MANAGE_EMPLOYEE_CERTIFICATES","payload","addCertificates","history","tab","arguments","length","undefined","acquiredDate","moment","format","expirationDate","replace","concat","_id","goBack","showToast","severity","summary","message","getCertificate","returnData","showLoaderAction","hideLoaderAction","editCertificates","deleteCertificates","getEmployeeNotes","NOTES","addEmployeeNotes","next","FormPage","_ref","children","backText","backTo","useHistory","onBack","_jsxs","CustomTransition","className","_jsx","onClick","_Fragment","CustomDialog","title","visible","position","width","onSave","loading","onCancel","footerContent","CustomButtonGroup","PrimaryButton","label","LightButton","Dialog","modal","header","headerClassName","style","onHide","footer","draggable","resizable","yesNoOptions","name","value","amountTypeOptions","bonusTypeConstantsOptions","CommissionGpTypeOptions","map","durationOptions","toUpperCase","servicesOptions","checkInLimitOptions","i","option","push","perOptions","restrictionOptions","daysOptions","hoursOptions","reasonCodeTypeOptions","classesPayTypeOptions","substitutionPriorityOptions","AppointmentPayPriorityOptions","EmployeeCommissionType","selected","sourceData","onPickListChange","breakpoint","sourceHeader","targetHeader","sourceStyle","height","targetStyle","showSourceControls","showTargetControls","useEffect","_target","filter","item","includes","_source","setSource","setTarget","source","useState","target","_values","PickList","onChange","_ref2","itemTemplate","Security","_allSecurityRoles","useDispatch","useParams","getJobDetails","getSecurityRoles","allSecurityRoles","useSelector","state","securityRole","getEmployee","setData","firstName","lastName","middleInitial","jobTitle","dob","Date","socialSecurity","barCode","accessCode","email","multiClubClockIn","toString","securityRoles","allJobTitle","handleChange","formErrors","formValidation","prev","handleSave","showFormErrors","editEmployee","addEmployees","CustomCard","col","CustomGridLayout","CustomInput","required","CustomDropDown","options","index","optionLabel","CustomCalenderInput","CustomPickList","dropzoneStyle","border","borderRadius","padding","textAlign","cursor","background","onDropChange","multiple","selectedImages","setSelectedImages","JSON","stringify","onDrop","useCallback","acceptedFiles","rejectedFiles","console","log","forEach","file","some","selectedFile","prevState","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useDropzone","accept","useMemo","borderColor","Avatar","icon","size","color","shape","backgroundColor","image","getImageURL","Badge","_","removeImage","General","states","setStates","cities","setCities","getAllCountries","updatedStates","getStatesByCountry","_data$emailNotificati","hireDate","terminationDate","adpId","primaryPhone","workPhone","workPhoneExt","mobilePhone","faxPhone","emergencyPhone","emergencyPhoneExt","street","city","zipCode","emailNotification","onlineNickName","bio","getCitiesByState","CustomInputMask","mask","placeholder","CustomTextArea","PhotoUpload","Clubs","getClubs","clubsDropdown","clubs","reportDataAccess","onTextChange","Editor","e","htmlValue","Notes","user","profile","takenBy","dateTime","notes","setVisible","notesData","setNotesData","funcGetNotes","onClose","CustomFilterCard","buttonTitle","CustomTable","columns","field","CustomEditor","Certifications","allCertificates","certificates","linkTo","onEdit","onDelete","confirmDelete","EmployeeDepartments","departmentsDropdown","department","getDepartments","funcGetEmpDepartments","getEmployeeDepartments","setEmployeeDepartments","employeeDeptId","setEmployeeDeptId","employeeDepartments","departments","wage","filterdDepartmentsDropdown","ed","_empDeptData","find","deleteEmployeeDepartment","editEmployeeDepartment","addEmployeeDepartment","CustomMultiselect","disabled","CustomInputNumber","_data$eachClientOver","employeeClassId","setEmployeeClassId","employeeClasses","setEmployeeClassesData","incrementalPay","getEmployeeClaases","EMPLOYEE_CLASSES","payType","oneToFiveClients","sixToTenClients","elevenToFifteenClients","sixteenToTwentyClients","twentyOneToTwentyFiveClients","twentySixPlusClients","noRegistrationPay","payperClassPayload","payPerClassRate","PayPerClient","baseRate","payPerClientRate","eachClientOver","noOfClients","rate","maxPayPerClient","percentageRate","percentage","newData","handleChange1","key","newList","ignore","editEmployeeClasses","addEmployeeClasses","client","PaySetup","funcGetEmpClasses","setEmployeeClasses","code","description","price","category","quantity","inventoryStatus","rating","getEmployeeClasses","deleteEmployeeClasses","DataView","AddandEditClasses","SubstituteOptionSetup","Substitute","setSubstitute","priority","substitutionOptionsId","setSubstituteOptionsId","funcGetEmpSubstitution","getEmployeeSubstitutionOptions","SUSTITITION_OPTIONS","getSubstitutionOption","deleteSubstitutionOption","editEmployeeSubstitutionOptions","addEmployeeSubstitutionOptions","ClassesSetup","tabs","content","CustomTabView","useIndex","getEmployeeAppointmentPay","EMPLOYEE_APPOINTMENT","employeeAppartId","setEmployeeAppartId","appointmentData","setAppointmentData","initialState","pay","amountType","funcGetEmpAppointment","getEmployeeAppartment","deletetEmployeeAppartment","editEmployeeAppointmentPay","addEmployeeAppointmentPay","BonusSetup","bonusType","sessionsValue","ofSessions","over","duration","bonusAmount","services","employeeAppartBonusId","setemployeeAppartBonusId","getEmployeeAppartmentBonus","selectTimeframe","body","r","join","deleteEmployeeAppartmentBonus","rest","editEmployeeAppartmentBonus","addEmployeeAppartmentBonus","AppointmentSetup","ItemCommission","employeeSalesItemId","setEmployeeSalesItemId","itemCommissionData","setItemCommissionData","commissionGroup","commissionType","funcGetEmpSalesItem","getCommissionGroups","commissionGroupsDropdown","getEmployeeSalesItem","SALES_COMMISSION","getEmployeeSaleItem","deletetEmployeeSaleItem","editEmployeeSalesItem","addEmployeeSalesItem","SalesCommission","EmployeeForm","disabledTabIndices"],"sourceRoot":""}